<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于TCP的socket通信（java）</title>
      <link href="/2020/12/15/ji-yu-tcp-de-socket-tong-xin-java/"/>
      <url>/2020/12/15/ji-yu-tcp-de-socket-tong-xin-java/</url>
      
        <content type="html"><![CDATA[<p>​        在网络通讯中，第一次主动发起通讯的程序被称作客户端(Client)程序，简称客户端，而在第一次通讯中等待连接的程序被称作服务器端(Server)程序，简称服务器。一旦通讯建立，则客户端和服务器端完全一样，没有本质的区别。</p><p><strong><em>请求-响应”模式：</em></strong></p><ol><li><p>Socket类：发送TCP消息。</p></li><li><p>ServerSocket类：创建服务器。</p><p>套接字是一种进程间的数据交换机制。这些进程既可以在同一机器上，也可以在通过网络连接的不同机器上。换句话说，套接字起到通信端点的作用。单个套接字是一个端点，而一对套接字则构成一个双向通信信道，使非关联进程可以在本地或通过网络进行数据交换。一旦建立套接字连接，数据即可在相同或不同的系统中双向或单向发送，直到其中一个端点关闭连接。套接字与主机地址和端口地址相关联。主机地址就是客户端或服务器程序所在的主机的IP地址。端口地址是指客户端或服务器程序使用的主机的通信端口。</p><p>在客户端和服务器中，分别创建独立的Socket，并通过Socket的属性，将两个Socket进行连接，这样，客户端和服务器通过套接字所建立的连接使用输入输出流进行通信。</p><p>TCP/IP套接字是最可靠的双向流协议，使用TCP/IP可以发送任意数量的数据。</p><p>实际上，套接字只是计算机上已编号的端口。如果发送方和接收方计算机确定好端口，他们就可以通信了。</p></li></ol><p><strong><em>\</em>TCP/IP通信连接的简单过程：**</strong></p><p>   位于A计算机上的TCP/IP软件向B计算机发送包含端口号的消息，B计算机的TCP/IP软件接收该消息，并进行检查，查看是否有它知道的程序正在该端口上接收消息。如果有，他就将该消息交给这个程序。</p><p>   要使程序有效地运行，就必须有一个客户端和一个服务器。</p><p><strong><em>\</em>通过Socket的编程顺序：**</strong></p><ol><li><p>创建服务器ServerSocket，在创建时，定义ServerSocket的监听端口(在这个端口接收客户端发来的消息)。</p><ol start="2"><li><p>ServerSocket调用accept()方法，使之处于阻塞状态。</p></li><li><p>创建客户端Socket，并设置服务器的IP及端口。</p></li></ol></li><li><p>客户端发出连接请求，建立连接。</p><ol start="5"><li><p>分别取得服务器和客户端Socket的InputStream和OutputStream。</p></li><li><p>利用Socket和ServerSocket进行数据传输。</p></li></ol></li><li><p>关闭流及Socket。</p></li></ol><pre class="line-numbers language-java"><code class="language-java">客户端<span class="token keyword">package</span> Connect2<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>BufferedReader<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>BufferedWriter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStreamReader<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>OutputStreamWriter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>Socket<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>UnknownHostException<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Socket socket <span class="token operator">=</span> null<span class="token punctuation">;</span>        BufferedReader in <span class="token operator">=</span> null<span class="token punctuation">;</span>        BufferedWriter out <span class="token operator">=</span> null<span class="token punctuation">;</span>        BufferedReader wt <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//创建Socket对象，指定服务器端的IP与端口</span>            socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span><span class="token string">"192.168.130.132"</span><span class="token punctuation">,</span> <span class="token number">8888</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取scoket的输入输出流接收和发送信息</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"服务器连接成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span>                                    <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            wt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//发送信息</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入消息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String str <span class="token operator">=</span> wt<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//System.out.println("客户端说：");</span>                out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>str <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你已终止聊天。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//如果输入的信息为“end”则终止连接</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"对方终止聊天。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//否则，接收并输出服务器端信息</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"服务器端说："</span> <span class="token operator">+</span> in<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownHostException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 关闭资源</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>out <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>in <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>wt <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    wt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>socket <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java">服务端<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>BufferedReader<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>BufferedWriter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStreamReader<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>OutputStreamWriter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ServerSocket<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>Socket<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Server</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        Socket socket <span class="token operator">=</span> null<span class="token punctuation">;</span>        BufferedReader in <span class="token operator">=</span> null<span class="token punctuation">;</span>        BufferedWriter out <span class="token operator">=</span> null<span class="token punctuation">;</span>        BufferedReader br <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//创建服务器端套接字：指定监听端口</span>            ServerSocket server <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">8888</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//监听客户端的连接</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"服务器正在等待连接...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            socket <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取socket的输入输出流接收和发送信息</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"客户端连接成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span>                                    <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            br <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//接收客户端发送的信息</span>                <span class="token comment" spellcheck="true">//System.out.print("请输入消息：:");</span>                String str <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"客户端说："</span> <span class="token operator">+</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>                String str2 <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//如果客户端发送的是“end”则终止连接 </span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"对方终止聊天。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">//否则，发送反馈信息</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入消息："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str2 <span class="token operator">=</span> br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 读到\n为止，因此一定要输入换行符！</span>                <span class="token comment" spellcheck="true">//System.out.println("服务器说:");</span>                out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>str2 <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>str2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你已终止聊天。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//关闭资源</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>in <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>out <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>br <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    br<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>socket <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 网络通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下java编程</title>
      <link href="/2020/12/14/linux-xia-java-bian-cheng/"/>
      <url>/2020/12/14/linux-xia-java-bian-cheng/</url>
      
        <content type="html"><![CDATA[<p>进入.java目录<br> 我是进入了/root/mingshine/目录 这里放了JavaTest.java文件</p><p>编译：</p><pre><code> javac JavaTest.java;</code></pre><p>执行：</p><pre><code>java JavaTest;</code></pre><p><code>切记 写的时候，不要写包名!!!!!</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础</title>
      <link href="/2020/12/05/html-ji-chu/"/>
      <url>/2020/12/05/html-ji-chu/</url>
      
        <content type="html"><![CDATA[<p>网站分为静态和动态，HTML写静态</p><h2 id="HTML文档结构"><a href="#HTML文档结构" class="headerlink" title="HTML文档结构"></a>HTML文档结构</h2><p>标准的HTML文档是由标签和要显示在网页上的内容组成。HTML用于描述功能的符号称为“标签”，如 <code>&lt;html&gt;</code>、<code>&lt;body&gt;</code>、<code>&lt;table&gt;</code></p><p>等。HTML标签规定HTML文档的逻辑结构，并且控制文档的显示格式，然后由浏览器来负责解释并显示页面。通过使用标签可以区分文本文件的各个组成部分，对网页上的文字、表格、图片等多媒体数据所出现的位置、形式、顺序及网页间的超链接关系进行设定。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>hello ljj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h2><h3 id="头部标签-lt-head-gt-lt-head-gt"><a href="#头部标签-lt-head-gt-lt-head-gt" class="headerlink" title="头部标签<head>...</head>"></a>头部标签<code>&lt;head&gt;...&lt;/head&gt;</code></h3><p>​            Head是英文“头”的意思。习惯上用户把HTML文档分为文档头和文档主体两部分。文档主体部分就是在Web浏览器窗口的用户区内看到的内容，而文档头部分用来规定该文档的标题（出现在Web浏览器窗口的标题栏中）和文档的一些属性。<code>&lt;head&gt;</code>标签对的作用就是控制文档的头部信息。此标签中间可以使用<code>&lt;title&gt;</code>…<code>&lt;/title&gt;</code>、<code>&lt;script&gt;..&lt;/script&gt;</code>标签对，在此标签中间可以放置用户编辑的JavaScript代码。</p><p>HTML文档的标签是可以嵌套的，即在一对标签中可以嵌入另一对子标签，用来规定母标签所含范围的属性或其中某一部分内容，嵌套在<code>&lt;head&gt;</code>…<code>&lt;/head&gt;</code>标签对中使用的主要有<code>&lt;title&gt;</code>标签。</p><h3 id="标题标签-lt-title-gt-…-lt-title-gt"><a href="#标题标签-lt-title-gt-…-lt-title-gt" class="headerlink" title="标题标签<title>…</title>"></a>标题标签<code>&lt;title&gt;</code>…<code>&lt;/title&gt;</code></h3><p>​            <code>&lt;title&gt;</code>标签是成对出现的，用以规定HTML文档的标题。在<code>&lt;title&gt;</code></p><p>和<code>&lt;/title&gt;</code>之间的内容将显示在Web浏览器窗口的标题栏中。另外，</p><p><code>&lt;title&gt;</code>..<code>&lt;/title&gt;</code>标签对，只能放在<code>&lt;head&gt;</code>..<code>&lt;/head&gt;</code>标签对之间，而且其内部不能包含其他标签。</p><p>代码段“<code>&lt;title&gt;</code>个人资料<code>&lt;/title&gt;</code>”，控制显示了网页的标题。“个人资料”四个字出现在E浏览器的最左上方。</p><h3 id="主题标签-lt-body-gt-lt-body-gt"><a href="#主题标签-lt-body-gt-lt-body-gt" class="headerlink" title="主题标签<body>...</body>"></a>主题标签<code>&lt;body&gt;...&lt;/body&gt;</code></h3><pre><code>       ` &lt;body&gt;`标签是成对出现的。在`&lt;body&gt;`..`&lt;/body&gt;`标签对之间的内容，将显示在Web浏览器窗口的用户区内，它是HTML文档的主体部分。可以把HTML文档的主体区域简单地理解成标题以外的所有部分，该部分可以包含`&lt;table&gt;`、`&lt;font&gt;`、``&lt;img&gt;、`&lt;div&gt;`等标签。结束标签`&lt;/body&gt;`指明主体区域的结尾。在</code></pre><p><code>&lt;body&gt;</code>标签中可以规定整个文档的一些基本属性：</p><ul><li><p>“bgcolor”：指定HTML文档的背景色。</p></li><li><p>“text”：指定HTML文档中文字的颜色。</p></li><li><p>“link”：指定HTML刘档中待连接超链接对象的颜色。</p></li><li><p>“alink”：指定HTML文档中连接中超链接对象的颜色。</p></li><li><p>“vlink”：指定HTML文档中已连接超链接对象的颜色。</p></li><li><p>“background”：指定HTML文档的背景文件。</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>hello ljj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>11ffff<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>//背景色//<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>//背景图片dfbgfertbvgbfhnvbd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><p>在HTML里有很多特殊的符号是需要特别处理的，例如，“&lt;”、</p><p>“&gt;”这两个符号是用来表示标签的开始和结束的，是没有办法通过直接打“&lt;”来呈现“&lt;”的，必须输入编码表示法：“<code>&amp;lt&lt;；</code>“,”<code>&amp;gt;</code>“。</p><p>通常情况下，HTML会自动截去多余的空格。不管你加多少空格，都被看做一个空格。如果要显示空格多个空格，可以使用<code>&amp;nbsp</code> ；表示空格。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>hello ljj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span>”11ffff”</span><span class="token punctuation">></span></span>//背景色//<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">background</span><span class="token attr-value"><span class="token punctuation">=</span>”1.jpg”</span><span class="token punctuation">></span></span>//背景图片dfbgfertb<span class="token entity" title="&lt;">&amp;lt;</span>vgbfhnvbd<span class="token entity" title="&gt;">&amp;gt;</span>//添加尖括号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>&lt;><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="段落标签-lt-p-gt"><a href="#段落标签-lt-p-gt" class="headerlink" title="段落标签<p>"></a>段落标签<code>&lt;p&gt;</code></h3><p>段落标签<code>&lt;p&gt;</code>的英文全程是Paragraph，几乎所有的HTML文档都离不开这个标签，而且在使用时必须成对出现。<code>&lt;p&gt;</code>..<code>&lt;/p&gt;</code>标签对用于创建一个段落，在此标签中的文本以段落的方式显示在浏览器上。<code>&lt;p&gt;</code>…<code>&lt;/p&gt;</code>段落标签对支持align属性来设置对齐方式，语法如</p><pre class="line-numbers language-html"><code class="language-html">&lt;p align="属性”>段落内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>属性align的功能是专门设定水平对齐位置，其常见的设定值有三个，也就是置左（align=”left”）、置中（align=”center”）、置右（align=”right”）。</p><h3 id="换行标签-lt-br-gt"><a href="#换行标签-lt-br-gt" class="headerlink" title="换行标签<br>"></a>换行标签<code>&lt;br&gt;</code></h3><p>换行标签<code>&lt;br&gt;</code>的作用是在不另起一段的情况下将当前文本强制换行。它的起始标签必须有，而结束标签是禁止出现的，也就是说<code>&lt;br&gt;</code>标签属于单独出现的标签。使用换行标签的代码如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>换行标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这段文字一共<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>包含了两个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>强制换行标记<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>hello ljj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span>”11ffff”</span><span class="token punctuation">></span></span>//背景色//<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">background</span><span class="token attr-value"><span class="token punctuation">=</span>”1.jpg”</span><span class="token punctuation">></span></span>//背景图片dfbgfertbvubchifnuyshcvzdffzgfxhgbvsdfgx hgmntbgvfcfgxdfbgfertbvubchifnuyshcvzdffzgfxhgbvsdfgx hgmntbgvfcfgxscdvzbgndthmjnbfxbbgxf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>//分段xdcfvgbhnjmgbxgfnhbxgfdfgbnhgjmnhsdfbgnhm vcaewrtsdyt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>//换行rtrbynthuymjnhbfbvbg<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>&lt;><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="预格式标签-lt-pre-gt"><a href="#预格式标签-lt-pre-gt" class="headerlink" title="预格式标签<pre>"></a>预格式标签<code>&lt;pre&gt;</code></h3><p>在HTML文档中，有时候设计者需要按照自己的格式编写源文件，并且希望在浏览器中显示的格式和编辑时的格式相同。<code>&lt;pre&gt;</code>..<code>&lt;/pre&gt;</code>标签对可以完整保留设计者在源文件中所定义的格式，包括各种空格，缩进，以及其他特殊格式，全都原封不动的反映在浏览器页面上。</p><p>使用<code>&lt;pre&gt;</code>标签进行预格式化的代码如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>锄禾日当午，汗 滴 禾 下 土。谁知盘中餐，粒 粒 皆 辛 苦。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><p>HTML文档中使用的列表主要有无序列表、排序列表、目录列表、菜单列表、描述性列表五种类型。下面有重点地分别进行介绍。</p><ol><li>无序列表<code>（ul）&lt;li&gt;</code>（在每行前面出现美化小圆点）</li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>排序列表（ol）</li><li>(就是在前面出现序号)</li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.目录列表</p><p>4.菜单列表</p><p>5.描述性列表<code>（dl）&lt;dt&gt;</code>列表头<code>&lt;dd&gt;</code>列表内容</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>coffee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>                    //主标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>black hot drink<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>            //副标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>milk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>white cold drink<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>                   //分级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="字体修饰符"><a href="#字体修饰符" class="headerlink" title="字体修饰符"></a>字体修饰符</h3><p>字体修饰标签可对文字的格式做相应的变化，如粗体、斜体、底线、上标、下标等。常用的字体修饰标签有以下几种。</p><ul><li><p><code>&lt;b&gt;...&lt;/b&gt;</code>标签对指定文字为粗体字。</p></li><li><p><code>&lt;i&gt;..&lt;/i&gt;</code>标签对指定文字为斜体字。</p></li><li><p><code>&lt;u&gt;...&lt;/u&gt;</code>标签对指定文字为带有下划线。</p></li><li><p><code>&lt;t&gt;...&lt;/t&gt;</code>标签对指定文字为打字机效果。</p></li><li><p><code>&lt;sup&gt;...&lt;/sup&gt;</code>标签对指定文字为上标。</p></li><li><p><code>&lt;sub&gt;...&lt;/sub&gt;</code>标签对指定文字为下标。</p></li><li><p><code>&lt;em&gt;..&lt;/em&gt;</code>标签对指定对某段文字进行强调，通常用斜体字显示出来。</p></li><li><p><code>&lt;strong&gt;...&lt;/strong&gt;</code>标签对对文本进行强调，通常用租体字显示出来。</p></li></ul><h3 id="字体标签-lt-font-gt"><a href="#字体标签-lt-font-gt" class="headerlink" title="字体标签<font>"></a>字体标签<code>&lt;font&gt;</code></h3><p>Font标签可以设置文档的字体，通过改变其属性，对文本进行不同的设置，可以对文本的字体、大小、颜色等进行改变。</p><ol><li><p>属性size</p></li><li><p>属性face</p></li></ol><p>​    3.属性color</p><pre class="line-numbers language-html"><code class="language-html">&lt;font size=”20px” color =”11ffff”>csdvfbghjknbvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="HTML超链接"><a href="#HTML超链接" class="headerlink" title="HTML超链接"></a>HTML超链接</h2><p>HTML最显著的优点就在于它支持文档的超链接，用户可以很方便地在不同文档，以及同一文档的各段段落之间跳转。HTML中的链接包括两部分：锚标和目标点。锚标就是链接的源点，当鼠标被移到锚标处时会变成小手状。此时，用户通过单击鼠标就可以到达链接的目标点。目标点可以是一张图片、一个网络文档、一个多媒体文件等。</p><h2 id="属性href"><a href="#属性href" class="headerlink" title="属性href"></a>属性href</h2><p>href是hypertext reference的缩略词，用于设定链接地址，其链接地址必须是URL地址，必须给出具体的路径。其中URL地址可以为下面内容：</p><p>（1）网站：可以设置ip地址或者是网站的网址。例如，链接到google站点首页可以表示为以下形式。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.google.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Google<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>&lt;a href-"http://64.233.189.104/">Google<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（2）网页：链接到本机的网页，可以直接直接指定网页所在的路径。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.sohu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>搜狐首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.htm<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>回到主页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（3）可执行文件：当链接到的文件的扩展名不是<code>.htm（.html）</code>或者<code>.asp（.jsp/.php）</code>时，而是其他可执行的文件，会将链接到的文件下载到本地计算机上或者直接执行。如果是文本文件（如Word格式），则在浏览器中打开文件并进行编辑。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>word.doc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>word文档，打开文档进行编辑<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>&lt;a href="sound.wav'>播放声音文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript.Open（）<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>执行对应的应用程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>（4）网页上的书签：通常使用在网页的长度超过屏幕时，可以使用书签直接跳转到该书签指向的具体内容，节省移动滚动条的时间。</p><h3 id="属性target"><a href="#属性target" class="headerlink" title="属性target"></a>属性target</h3><p>打开链接的位置由target属性进行控制，属性值分为<code>_blank</code>、<code>_self</code>、<code>_parent</code>、<code>_top</code>。</p><p><code>taget="_blank"</code>在新的浏览器窗口中打开链接的文档，同时保持当前窗口不变。</p><p><code>target="_self"</code>将链接的文档载入链接所在的同一框架或窗口。此目标是默认的，所以通常不需要指定它。</p><p><code>target="_parent"</code>将链接的文档载入该链接所在框架的父框架或父窗口。如果包含链接的框架不是联套框架，则所链接的文档载入整个浏览器窗口。</p><p><code>target="_top”</code>将链接的文档载入整个浏览器窗口，从而删除所有框架。</p><pre class="line-numbers language-html"><code class="language-html">&lt;a href="http://www.sohu.com"target=_blank>搜狐首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述代码表示，在新的窗口中打开搜狐首页。</p><h3 id="属性name"><a href="#属性name" class="headerlink" title="属性name"></a>属性name</h3><p>超级链接标签<code>&lt;a&gt;</code>同样可以用来进行文档内部定位，设计者需要做的就是首先在文档内设定一个标签，称为“锚定位”，这样做相当于在文档中的某一个位置放置一个标签，通过超链接标签<code>&lt;a&gt;</code>的<code>href</code>属性，可以跳转到已经设置号的“锚定位”标签的位置。利用标签<code>&lt;a&gt;</code>的<code>name</code>属性可以实现文档内部的定位。代码的说明如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myanchor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>需要设置定位的文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">herf</span><span class="token attr-value"><span class="token punctuation">=</span>”#123”</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>跳转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>          //#代表当前页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span>”123”</span><span class="token punctuation">></span></span>黎俊杰超级无敌帅<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="HTML图像标签"><a href="#HTML图像标签" class="headerlink" title="HTML图像标签"></a>HTML图像标签</h2><p>​        图像可以使Web页面更加生动美观、富有生机。Web浏览器可以显示JPEG和GlF图像。其中GlF图像最多只能使用256种颜色（即只能保存为8位颜色），而JPEG格式可保存为24位，对具有连续色调的图像有最佳效果。不过，GIF图像虽然在图像质量上不及JPEG图像，但其所占存储空间小，下载速度快。因此应视不同情况而决定应使用哪种格式的图像。对于徽标、公司厂标等在每一主页显示，要求能快速下载并能在低配置的系统中查询的图像，应采用GlF格式，而对于扫描图片、艺术作品这种对显示质量要求很高的图像则应采用JPEG格式。在HTML文档中插入图像是通过<code>&lt;img&gt;</code>标签来实现的，它只有起始标志没有结尾标志，所有图像样式都由<code>&lt;img&gt;</code>的属性决定，用法如下：</p><pre class="line-numbers language-html"><code class="language-html">&lt;img属性=“属性值”><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="属性src"><a href="#属性src" class="headerlink" title="属性src"></a>属性src</h3><p><code>src</code>属性用来定义<code>&lt;img&gt;</code>图片的URI（统一资源定位符）地址，它是图片必不可少的属性。如果图片URI地址指定错误，在浏览器页面中图片的位置将会出现一个红色“X”号。src属性的使用方法如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>URL<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>URL表示图片的路径和文件名。比如URL可以是绝对路径<a href="http://www.ketai.org.cn/images/1.gif，也可以是个相对路径" target="_blank" rel="noopener">http://www.ketai.org.cn/images/1.gif，也可以是个相对路径</a> “../images/1.gif”。I</p><h3 id="属性align"><a href="#属性align" class="headerlink" title="属性align"></a>属性align</h3><p>align属性的作用是对齐图片，可以改变图片的垂直（居上、居中、居下）对齐方式和水平对齐方式（居左、居中、居右）。</p><h3 id="属性height和width"><a href="#属性height和width" class="headerlink" title="属性height和width"></a>属性height和width</h3><p><code>&lt;img&gt;</code>标签用<code>width</code>和<code>height</code>两个属性来规定图像的大小。其中<code>width</code>属性用于确定图像的宽度，<code>height</code>属性用于确定图像的高度。</p><p>这两个属性的参数值都是数字，表示图像宽度（高度）所占的像素点数。默认时，浏览器窗口将自动调整图像的显示尺寸。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span>”50px”</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span>”50px”</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span>”center”</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span>”123.jpg”</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="属性border"><a href="#属性border" class="headerlink" title="属性border"></a>属性border</h3><p>设置边框</p><h2 id="HTML表格标签"><a href="#HTML表格标签" class="headerlink" title="HTML表格标签"></a>HTML表格标签</h2><h3 id="表格标签-lt-table-gt-lt-table-gt"><a href="#表格标签-lt-table-gt-lt-table-gt" class="headerlink" title="表格标签<table>...</table>"></a>表格标签<code>&lt;table&gt;...&lt;/table&gt;</code></h3><p><code>&lt;table&gt;</code>和<code>&lt;/table&gt;</code>标签用来创建一个表格，它具有以下属性：</p><p>通过<code>width</code>和<code>height</code>属性设置表格的宽度和高度；通过<code>border</code>属性和<code>bordercolor</code>属性设置表格边框的像素值和颜色值；通过<code>cellspacing</code>属性和<code>cellpadding</code>属性设置单元格之间的空间大小，以及单元格的边框与其内部的文字之间的空间大小。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span>”1”</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>halou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>电话<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>halou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="行标签-lt-tr-gt-lt-tr-gt"><a href="#行标签-lt-tr-gt-lt-tr-gt" class="headerlink" title="行标签<tr>...</tr>"></a>行标签<code>&lt;tr&gt;...&lt;/tr&gt;</code></h3><p><code>&lt;tr&gt;</code>和<code>&lt;/tr&gt;</code>标签用来创建表格中的每一行。此标签只能放在</p><p><code>&lt;table&gt;</code>和<code>&lt;/table&gt;</code>标签对之间，而且在此标签对之间加入文本是无效的。标签<code>&lt;tr&gt;</code>具有以下一些属性：</p><p>1.属性align</p><p>2.属性valign</p><p>3.属性bgcolor</p><p>将三个网站同时显示在同一个浏览器页面</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frameset</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span>”%25,%50,%25”</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span>”http://www.baidu.com”</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span>”http://www.qq.com”</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span>”http://lijj.xyz”</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frameset</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="HTML表单标签"><a href="#HTML表单标签" class="headerlink" title="HTML表单标签"></a>HTML表单标签</h2><p>表单（Form）是HTML的一个重要部分，主要用于采集和提交用户输入的信息，使网页具有交互的功能。一般是将表单设计在一个HTML文档中，当用户填写完信息后做提交（submit）操作，表单的内容就被传送到服务器上，等处理完毕后，再将结果信息返回到客户端。</p><h3 id="表单标签-lt-from-gt-lt-from-gt"><a href="#表单标签-lt-from-gt-lt-from-gt" class="headerlink" title="表单标签<from>...</from>"></a>表单标签<code>&lt;from&gt;...&lt;/from&gt;</code></h3><p><code>&lt;form&gt;</code>和<code>&lt;/form&gt;</code>标签用来创建一个表单，在标签对之间的都属于表单的内容。<code>&lt;form&gt;</code>标签有三个比较常用的属性，具体如下。</p><ol><li><p>属性action</p><p>2.属性method</p><p>3.属性target</p></li></ol><pre class="line-numbers language-html"><code class="language-html">&lt;form action="xx.php"method="get"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>username:&lt;input type="text"name="fname"/><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>password:&lt;input type="password"name="Iname"/><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>&lt;input type="submit"value="Submit"/><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php">接受登录信息（xx<span class="token punctuation">.</span>php）<span class="token delimiter">&lt;?php</span><span class="token variable">$uname</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>‘fname’<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$upass</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>‘lname’<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">echo</span> “username<span class="token punctuation">:</span>”<span class="token punctuation">.</span><span class="token variable">$uname</span><span class="token punctuation">.</span>”<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>”<span class="token punctuation">;</span><span class="token keyword">echo</span>”password<span class="token punctuation">:</span>”<span class="token punctuation">.</span><span class="token variable">$upass</span><span class="token punctuation">;</span> <span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="用户输入区域标签-lt-input-type-quot-quot-gt"><a href="#用户输入区域标签-lt-input-type-quot-quot-gt" class="headerlink" title="用户输入区域标签<input type=&quot;&quot;>"></a>用户输入区域标签<code>&lt;input type=""&gt;</code></h3><p>表单中提供给用户的输入形式一般使用<code>&lt;input type="”&gt;</code>标签来实现，此标签用来定义一个用户输入区，用户可以在其中输入信息。这个标签必须放在<code>&lt;form&gt;</code>和<code>&lt;/form&gt;</code>标签之间。<code>&lt;input type="”&gt;</code>标签提供了多种类型的输入区域，具体是哪一种类型由type属性决定。具体如下：</p><p>1.单行文本输入框（input type=”text”）</p><p>2.多行输入框（textarea）</p><p>3.密码输入框（input type=”password”）</p><p>4.单选框（input type=”radio”）</p><p>5.复选框（input type=”checkbox”）</p><p>6.下拉框（select）</p><p>7.提交（input type=”submit”）</p><p>8.重置（input type=”reset”）</p><p>9.图片提交（input type=”image”）</p><p>10上传（input type=”file”）</p><pre class="line-numbers language-html"><code class="language-html">&lt;form action="xx.php"method="get"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>username:&lt;input type="text"name="fname"/><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>password:&lt;input type="password"name="Iname"/><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span>”file”</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>//上传文件&lt;input type="submit"value="Submit"/><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html">//<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>//换行&lt;form action="xx.php"method="get"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>username:&lt;input type="text"name="fname"/><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>password:&lt;input type="password"name="Iname"/><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>dfghjk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token function">altert</span><span class="token punctuation">(</span><span class="token regex">/xss/</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>txetarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hacker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好</title>
      <link href="/2020/11/26/tie-mu-jun/"/>
      <url>/2020/11/26/tie-mu-jun/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青春 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>发布warning:</title>
      <link href="/2020/11/17/fa-bu-warning/"/>
      <url>/2020/11/17/fa-bu-warning/</url>
      
        <content type="html"><![CDATA[<p>今天在使用git add 命令的时候，弹出了一个警告 warning: LF will be replaced by CRLF in <strong>**</strong>（具体的一个文件）</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p><code>LF</code>和<code>CRLF</code>其实都是换行符，但是不同的是，LF是linux和Unix系统的换行符，CRLF是window 系统的换行符。这就给跨平台的协作的项目带来了问题，保存文件到底是使用哪个标准呢？ git为了解决这个问题，提供了一个”<code>换行符自动转换</code>“的功能，并且这个功能是默认处于”自动模式“即开启状态的。<br> 这个<code>换行符自动转换</code>会把自动把你代码里 与你当前操作系统不相同的换行的方式 转换成当前系统的换行方式（即<code>LF</code>和<code>CRLF</code> 之间的转换），这样一来，当你提交代码的时候，即使你没有修改过某个文件，也被git认为你修改过了，从而提示”<code>LF will be replaced by CRLF in *****</code>“</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>最简单的一种办法就是把<code>自动转换功能</code>关掉即可。<br> 输入命令 ：<code>git config core.autocrlf false</code> (仅对当前git仓库有效）<br> <code>git config --global core.autocrlf false</code> (全局有效）</p><p>然后重新提交代码即可。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>J-Link下载</title>
      <link href="/2020/11/17/j-link-xia-zai/"/>
      <url>/2020/11/17/j-link-xia-zai/</url>
      
        <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><p>我们把仿真器（ST-LINK  V2简称仿真器）尾部有凹槽的那一面朝上看才是正确的方式，因为它总共有10只引脚，上下两层，上层为奇数1，3，5，7，9.下层为偶数2，4，6，8，10.这样从右上角一号引脚开始数数的话每只引脚跟仿真器上面标记的符号是一一对应的，数引脚方式是 从右上角第一个引脚开始，上1下2 左移一位 上3下4 左移一位 上5下6 左移一位上7下8 左移一位 上9下10 如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201117091932.png" alt></p><blockquote><p> 总的来说就是连接ST-LINK的<code>SWCLK</code>,<code>SWDIO</code>,<code>GND</code>,<code>3.3V</code>四个接口和开发板对应的连接口连接</p></blockquote><p>开发板相应的连线到开发板的原理图上去找，<code>SWCLK</code>连接<code>TCLK</code>，<code>SWDIO</code>连接<code>TMS</code>,1号接口连接3.3V，4-20号端口随便一个接地</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201117092108.png" alt></p><blockquote><p>实物图如下</p></blockquote><h1 id><a href="#" class="headerlink" title></a></h1><p>1.安装STlink驱动</p><p>2.在MDK5中打开需要下载的工程文件</p><p>3.设置</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20200229001032331.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20200229001105583.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20200229001246429.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20200229001405430.png" alt></p><p>4.编译工程文件，下载</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20200229001622798.png" alt></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kalilinux破解wifi密码</title>
      <link href="/2020/11/15/kalilinux-po-jie-wifi-mi-ma/"/>
      <url>/2020/11/15/kalilinux-po-jie-wifi-mi-ma/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Kali Linux能做很多事，但是它主要以渗透测试及’破解wifi密码’闻名。</p></li><li></li><li><p>要求：</p></li><li><ul><li>安装有Kali Linux的计算机</li><li>支持监控模式的网卡，笔记本电脑一般都支持</li><li>字典文件</li><li>时间和耐心</li></ul></li><li><p>这种攻击需要字典文件，一个好的字典至关重要。我以Kali Linux自带的rockyou字典为例，位于/user/share/wordlists/rockyou.txt.gz。</p></li><li><p>使用前先解压：</p></li><li><p># gzip -d /usr/share/wordlists/rockyou.txt.gz</p></li><li></li><li><p>注意：破解其他人的wifi密码是“犯罪”，so，don’t；我使用自己的无线路由器演示。</p></li><li><p>知道了攻击方法，你自然就知道怎么防范了。</p></li><li></li><li><h2 id="1）首先断开连接的wifi。"><a href="#1）首先断开连接的wifi。" class="headerlink" title="1）首先断开连接的wifi。"></a><strong>1）首先断开连接的wifi。</strong></h2></li><li><p>在终端中执行：</p></li><li><p># airmon-ng</p></li><li><p>上面命令列出了支持监控模式的无线网卡。如果没有任何输出，表示无线网卡不支持监控模式。你可以看到我的wlan0支持监控模式。</p></li><li><h2 id="2）开启无线网卡的监控模式"><a href="#2）开启无线网卡的监控模式" class="headerlink" title="2）开启无线网卡的监控模式"></a><strong>2）开启无线网卡的监控模式</strong></h2></li><li><p># airmon-ng start wlan0</p></li><li><p>执行成功之后网卡接口变为wlan0mon；可以使用ifconfig命令查看。</p></li><li><h2 id="3）查看wifi网络"><a href="#3）查看wifi网络" class="headerlink" title="3）查看wifi网络"></a><strong>3）查看wifi网络</strong></h2></li><li><p># airodump-ng wlan0mon</p></li><li><p>上面列出了周围的wifi和它们的详细信息，包括信号强度、加密类型、频道等。要记住要破解wifi的频道号和BSSID。</p></li><li><p>按Ctrl-C结束。</p></li><li><h2 id="4）抓取握手包"><a href="#4）抓取握手包" class="headerlink" title="4）抓取握手包"></a><strong>4）抓取握手包</strong></h2></li><li><p>使用网卡的监听模式抓取周围的无线网络数据包。其中，对我们最重要的数据包是：包含密码的包－也叫握手包。当有新用户或断开用户自动连接wifi时，会发送握手包。</p></li><li><p>开始抓包：</p></li><li><p># airodump-ng -c 6 –bssid C8:3A:35:30:3E:C8 -w ~/ wlan0mon</p></li><li><p>参数解释：</p></li><li><ul><li>-c指定频道号</li><li>–bssid指定路由器bssid</li><li>-w指定抓取的数据包保存位置</li></ul></li><li><h2 id="5）强制连接到wifi的设备重新连接路由器"><a href="#5）强制连接到wifi的设备重新连接路由器" class="headerlink" title="5）强制连接到wifi的设备重新连接路由器"></a><strong>5）强制连接到wifi的设备重新连接路由器</strong></h2></li><li><p>现在我们只要等用户连接/重连接wifi了，运气不好也许要很长时间。</p></li><li><p>但是我们是不会等的，这不是耐心黑客该干的事。有一个叫aireplay-ng的工具，它可以强制用户断开wifi连接；原理是，给连接到wifi的一个设备发送一个deauth（反认证）包，让那个设备断开wifi，随后它自然会再次连接wifi。</p></li><li><p>aireplay-ng的生效前提是，wifi网络中至少有一个连接的设备。从上图(4)可以看到哪些设备连接到了wifi，STATION就是连接设备的MAC地址，记住一个。</p></li><li><p>打开新终端执行：</p></li><li><p># aireplay-ng -0 2 -a C8:3A:35:30:3E:C8 -c B8:E8:56:09:CC:9C wlan0mon</p></li><li><p>参数解释：</p></li><li><ul><li>-0表示发起deauthentication攻击</li><li>-a指定无线路由器BSSID</li><li>-c指定强制断开的设备</li></ul></li><li><p>如果成功：</p></li><li><p>按Ctrl-C结束抓包。</p></li><li><p>我们已经得到了想要的握手包了，可以结束无线网卡的监控模式了：</p></li><li><p># airmon-ng stop wlan0mon</p></li><li><h2 id="6-开始破解密码"><a href="#6-开始破解密码" class="headerlink" title="6) 开始破解密码"></a><strong>6) 开始破解密码</strong></h2></li><li><p># aircrack-ng -a2 -b C8:3A:35:30:3E:C8 -w /usr/share/wordlists/rockyou.txt ~/*.cap</p></li><li><p>参数解释：</p></li><li><ul><li>-a2代表WPA的握手包</li><li>-b指定要破解的wifi BSSID。</li><li>-w指定字典文件</li><li>最后是抓取的包</li></ul></li><li><p><strong>可选）使用显卡的运算能力</strong></p></li><li><p>如果你有一个强大的GPU，为什么不使用GPU跑字典呢？</p></li><li><p><a href="http://hashcat.net/" target="_blank" rel="noopener">Hashcat</a>可以借助GPU的运算力破解各种不同算法的hash值。</p></li><li><p>下载时要注意选择正确的显卡类型（AMD、NVidia）。Kali Linux自带这个工具。</p></li><li><p>在破解cap文件之前，要把它转换为hccap文件：</p></li><li><p># aircrack-ng file.cap -J out.hccap</p></li><li><p>使用GPU破解hash：</p></li><li><p># hashcat -m 2500 out.hccap 字典文件</p></li><li></li><li><p>总结：防止这种攻击最简单的方法是设置贼复杂贼长的密码；</p></li><li><p>不要使用WEP加密方式，非常容易被破解：</p></li><li><p>现在的无线路由器都有WPS功能，关了吧：</p></li><li></li><li></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux修改字体颜色</title>
      <link href="/2020/11/15/linux-xiu-gai-zi-ti-yan-se/"/>
      <url>/2020/11/15/linux-xiu-gai-zi-ti-yan-se/</url>
      
        <content type="html"><![CDATA[<p><strong>linux修改字体颜色</strong></p><p>仅仅需要几步命令（root身份）：</p><pre class="line-numbers language-c"><code class="language-c">cd <span class="token operator">/</span>home<span class="token operator">/</span>kali  #切换到kali用户下cp <span class="token punctuation">.</span>bashrc <span class="token operator">/</span>root  #将kali用户的<span class="token punctuation">.</span>bashrc复制到root用户目录下cd <span class="token operator">/</span>root  #回到root用户目录下cat <span class="token punctuation">.</span>bashrc  #查看<span class="token punctuation">.</span>bashrc文件是否被替换，若已替换则说明成功source <span class="token punctuation">.</span>bashrc  #终端颜色替换成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显示不同颜色</p><p>安装完新的Linux系统后，在控制台使用ls命令，显示不同类型的文件都是灰色的？</p><p>解决方法：</p><p>在root目录下，找到.bashrc文件，可以看到其中</p><pre class="line-numbers language-c"><code class="language-c">\# export LS_OPTIONS<span class="token operator">=</span><span class="token string">'--color=auto'</span> \#eval <span class="token string">"`dircolors`"</span> \#alias ls<span class="token operator">=</span><span class="token string">'ls $LS_OPTIONS'</span> \#alias ll<span class="token operator">=</span><span class="token string">'ls $LS_OPTIONS -l'</span> \#alias l<span class="token operator">=</span><span class="token string">'ls $LS_OPTIONS -lA'</span> \#alias rm<span class="token operator">=</span><span class="token string">'rm -i'</span> \#alias cp<span class="token operator">=</span><span class="token string">'cp -i'</span> \#alias mv<span class="token operator">=</span><span class="token string">'mv -i'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>把其中的#都去掉，</p><p>然后重新执行.bashrc文件，使它重新生效：</p><pre class="line-numbers language-c"><code class="language-c">source <span class="token punctuation">.</span>bashrc或者<span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span>bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式操作系统基础</title>
      <link href="/2020/11/15/qian-ru-shi-cao-zuo-xi-tong-ji-chu/"/>
      <url>/2020/11/15/qian-ru-shi-cao-zuo-xi-tong-ji-chu/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Linux-操作系统简介"><a href="#1-Linux-操作系统简介" class="headerlink" title="1.Linux 操作系统简介"></a>1.Linux 操作系统简介</h1><ul><li>1.了解操作系统的基本概念</li><li>2.掌握嵌入式操作系统与PC系统的不同</li><li>3.了解Linux操作系统发展和特点</li><li>4.掌握Ubuntu系统的安装和基本环境的配置</li></ul><h2 id="操作系统的概念"><a href="#操作系统的概念" class="headerlink" title="操作系统的概念"></a>操作系统的概念</h2><p>操作系统（Operating System，简称OS）是管理和控制计机硬件与软件资源的计算机程序，它是直接运行在“裸机”上的最基本的系统软件，任何其他软件都必须在操作系统的支持下才能运行。</p><h2 id="操作系统的分类"><a href="#操作系统的分类" class="headerlink" title="操作系统的分类"></a>操作系统的分类</h2><ul><li><p>操作系统根据用户界面的使用环境和功能特征的不同，一般可分为3种基本类型。</p><ul><li>(1)批处理操作系统</li><li>(2)分时操作系统</li><li>(3)实时操作系统 </li></ul><p>随着计算机体系结构的发展，又出现了许多种操作系统，它们是嵌入式操作系统、个人操作系统、网络操作系统和分布式操作系统。目前流行的现代操作系统主要有Android、BSD、iOS、Linux、Mac OS X、Windows、Windows Phone等，除了Windows等少数操作系统，大部分操作系统都为类UNIX操作系统。</p></li></ul><h2 id="操作系统的主要组成"><a href="#操作系统的主要组成" class="headerlink" title="操作系统的主要组成"></a>操作系统的主要组成</h2><p>对一个操作系统我们可以大致把它分为4部分：驱动程序、内核、接口库、外围。</p><p>  1．驱动程序<br>  驱动程序是操作系统最底层的、直接控制和监视各类硬件的部分，它们的职责是隐藏硬件的具体细节，并向其他部分提供一个抽象的、通用的接口。 </p><p>  2．内核<br>  内核为操作系统之最核心部分，包括进程管理、内存管理、<br>  文件系统管理、设备管理等核心单元。其中内存管理和<br>  程管理可以用来作为衡量一个操作系统的标准。</p><p> 3．接口库<br>  接口库是是一系列特殊的程序库，它们的职责在于把系统所提供的基本服务包装成应用程序所能够使用的编程接口（API），因而是最靠近应用程序的部分。例如，GNU C运行库就属于此类，它把各种操作系统的内部编程接口包装成ANSIC和POSIX编程接口的形式。 </p><p>  4．外围<br>  所谓外围，是指操作系统中除上述3部分以外的所有其他部分，通常是用于提供特定高级服务的部件。例如，在微内核结构中的大部分系统服务，以及UNIX/Linux中各种守护进程都通常被划归此列。 　</p><h2 id="嵌入式操作系统的介绍"><a href="#嵌入式操作系统的介绍" class="headerlink" title="嵌入式操作系统的介绍"></a>嵌入式操作系统的介绍</h2><ul><li>什么是嵌入式系统<br>嵌入式系统是以应用为中心，以计算机技术为基础，并且软硬件可裁剪，适用于对功能、可靠性、成本、体积、功耗有严格要求的专用计算机系统。</li><li>嵌入式系统与通用PC系统比较</li></ul><table><thead><tr><th align="center"><strong>设备名称</strong></th><th><strong>嵌入式系统</strong></th><th>PC</th></tr></thead><tbody><tr><td align="center"><strong>CPU</strong></td><td><strong>嵌入式处理器</strong></td><td><strong>CPU</strong></td></tr><tr><td align="center"><strong>内存</strong></td><td><strong>SDRAM/DDR</strong></td><td><strong>SDRAM</strong></td></tr><tr><td align="center"><strong>存储设备</strong></td><td><strong>Flash</strong></td><td><strong>硬盘</strong></td></tr><tr><td align="center"><strong>输入设备</strong></td><td><strong>按键、触摸屏</strong></td><td><strong>鼠标、键盘</strong></td></tr><tr><td align="center"><strong>输出设备</strong></td><td><strong>LCD(640X480, 320X240)</strong></td><td><strong>显示器</strong></td></tr><tr><td align="center"><strong>声音设备</strong></td><td><strong>音频芯片</strong></td><td><strong>声卡</strong></td></tr><tr><td align="center"><strong>接口</strong></td><td><strong>MAX232</strong></td><td><strong>主板集成</strong></td></tr><tr><td align="center"><strong>其他设备</strong></td><td><strong>USB</strong></td><td><strong>主板集成或外接卡</strong></td></tr></tbody></table><ul><li>流行的嵌入式操作系统</li></ul><p>据调查，目前全世界的嵌入式操作系统已经有200多种。从20世纪80年代开始，出现了一些商用嵌入式操作系统，它们大部分都是为专有系统而开发的。<br>随着嵌入式领域的发展，各种各样的嵌入式操作系统会相继问世。<br>有许多商用嵌入式操作系统，也有大量开放源代码的嵌入式操作系统。其中著名的嵌入式操作系统有Linux、UC/OS、Windows CE、VxWorks和QNX等</p><h2 id="什么是Linux"><a href="#什么是Linux" class="headerlink" title="什么是Linux"></a>什么是Linux</h2><ul><li>Linux是一种操作系统。</li><li>1991年，芬兰赫尔辛基大学的学生</li><li>LinusTorvals为了能在家里的PC机上使用</li><li>与学校一样的操作系统，开始编写了UNIX。</li><li>1991.8.25，Linus就在comp.os.minix新闻</li><li>中首次发布了一个Linux内核的公共版本。</li><li>最初Linus编写的程序只适用于Intel386处理器，且不能移植树。由于人们的鼓励，继续编写可移植的Linux系统。之后，就有越来越多的计算机爱好者、程序员通过网络参与到Linux系统的不断完善之中。通过社区、邮件列表、论坛、WIKI等。</li></ul><p><strong>Linux可以为我们做什么？</strong></p><ul><li><p>个人桌面系统</p></li><li><p>管理桌面（菜单、图标、窗口等）</p></li><li><p>听音乐，看视频</p></li><li><p>使用字处理、电子表格等办公软件</p></li><li><p>浏览网页、发送电子邮件</p></li><li><p>网络聊天</p></li><li><p>玩游戏</p></li><li><p>系统服务器</p></li><li><p>连接Internet网络</p></li><li><p>使用Linux作为防火墙、路由器和DHCP服务器来保护和管理专用网络</p></li><li><p>运行WEB服务器（Apache、MySQL和PHP）</p></li><li><p>运行邮件服务器（使用exim或其他邮件传输代理）</p></li><li><p>运行打印服务器（使用CUPS）</p></li><li><p>运行文件服务器（使用FTP、samba、NFS）</p></li></ul><h1 id="2-Linux操作系统使用"><a href="#2-Linux操作系统使用" class="headerlink" title="2. Linux操作系统使用"></a>2. Linux操作系统使用</h1><p>课程目标：</p><p>1.了shell的基本概念<br>2.掌握Linux 系统常用命令<br>3.掌握在Linux 系统中添加环境变量的方法</p><h2 id="认识shell"><a href="#认识shell" class="headerlink" title="认识shell"></a>认识shell</h2><p>英文单词Shell可直译为“贝壳”。“贝壳”是动物作为外在保护的一种工具。<br>在Linux系统中，shell是命令行解释器，即用户输入命令，然后shell解释这些命令，根据不同的命令，给用户返回不同的结果。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201115155550.png" alt></p><p>通常shell命令提示符采用以下的格式：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201115155724.png" alt></p><p>username：用户名，显示当前登录用户的账户名。<br>hostname：主机名，例如远程登录后，则显示登录的主机名。<br>direction：目录名，显示当前所处的路径，当在根目录下显示为“/”，当在用户主目录下显示为“~”</p><h2 id="Linux-常用命令"><a href="#Linux-常用命令" class="headerlink" title="Linux 常用命令"></a>Linux 常用命令</h2><ul><li><p>1.username@hostname:direction$</p><p> 用户名     主机名   目录名</p></li><li><p>2.用户切换 su - root(同时更换环境变量)</p></li><li><p>3.系统命令管理</p><p>ps -ef （显示进程和PID号）</p><p>kill xxxx （接PID杀相应进程）</p></li><li><p>4.磁盘相关命令</p><p>fdisk -l（查看硬盘分区情况）</p><p>IDE对应的设备名称hda,hdb,hdc…</p><p>SCSI对应的设备名称sda,sdb…</p></li><li><p>5.磁盘挂载</p><p>df -h（插u盘后最后一个就是u盘设备文件）</p><p>sudo mount -t vfat /dev/sdb4 /mnt（挂载）</p><p>​            （硬盘类型）（设备名）（挂载目录）</p><p>sudo umount /mnt（解挂载）</p></li><li><p>6.基础命令</p><p>cd /home/linux（切换目录）</p><p>ls -lh (浏览当前目录下文件)</p><p>drwx r-x r-x </p><p>  u（所有者）   g（所属组）  o（其他人）</p><p>- 文件</p><p>d 目录</p><p>l  软链接</p><p>r（读）w（写）x（执行）</p></li></ul><p>​    mkdir -p /root/home/ (加p递归创建目录)    </p><p>​    rmdir (删除空目录)</p><p>​    pwd（显示当前路径）</p><p>​    ctrl +c终止命令</p><p>​    clear清屏</p><p>​    cp -rp</p><p>​    mv 剪切文件或者改名</p><p>​    rm -rf（删除文件或者目录）</p><p>​    touch [文件名]  /创建空文件</p><p>​    cat -n/b +文件(-n显示行数)（查看短命令）</p><p>​    more +文件</p><p>​    空格翻页</p><p>​    enter换行</p><p>​    q退出</p><p>​    head -n +文件（查看前几行）</p><p>​    less  +文件</p><p>​    空格翻页</p><p>​    enter换行</p><p>​    q退出</p><p>​    chown（修改文件所有者和组别）</p><p>​    chowm root lijunjie.list</p><p>​    chgrp（修改文件的组所有权）</p><p>​    chown root lijunjie.list</p><p>​    chmod（）（修改权限）</p><p>​    111 读写和执行</p><p>​    chmod 777 lijunjie.list</p><p>​    find 【搜索范围】【匹配条件】</p><p>​    文件名搜索 find /etc -name lijunjie.list</p><p>​    find /etc -name <em>lijunjie.list</em></p><p>​    locate 文件名</p><p>​    updatedb (更新文件资料库)</p><p>​    vim文本编辑器（建立编辑显示）</p><p>​    vi +【名字】创建文件</p><p>​    in -s ../lijunjie.list ./hellow  创建软连接,当前目录和上级目录的连接</p><p>​    tar -zxvf 压缩文件</p><p>​    临时IP地址（重启后失效）</p><p>​    dhclient eth0/自动获取ip</p><p>​    ifconfig eth0 192.168.1.1/24 自己设定ip(24为掩码位数)</p><p>​    指定网关（指定路由，默认路由）</p><p>​    route add default gw 192.168.130.132</p><p>​    netstat -nr /route -n /查看网关状态</p><p>​    配置dns服务地址</p><p>​    nslookup <a href="http://www.baidu.com（查看dns服务器地址）" target="_blank" rel="noopener">www.baidu.com（查看dns服务器地址）</a></p><p>​    eth0 nameserver 192.168.1.1</p><p>​    (vi /etc/resolv.conf)</p><p>​    修改ip实战</p><p>​    vi /etc/network/interface</p><p>​    iface eth0 inet static</p><p>​    auto eth0</p><p>​    network 192.168.130.132</p><p>​    netmask 255.255.255.255</p><p>​    gateway 192.168.130.132</p><p>​    vi /etc/resolve.conf</p><p>​    nameserver 114.114.114.114</p><p>​    service networking restart</p><p>​    配置网卡的物理地址</p><p>​    sudo ifconfig eth0 down</p><p>​    ifconfig eth0 hw ether xx.xx.xx.xx.xx.xx</p><p>​    sudo ifconfig eth0 up</p><p>​    配置固定IP</p><p>​    vi /etc/network/interfaces</p><p>​    iface eth0 inet dhcp/static</p><p>​    address 192.168.0.1</p><p>​    netmask 255.255.255.0</p><p>​    gateway 192.168.0.154</p><p>​    dns-nameservers 192.168.0.10</p><h1 id="3-软件管理"><a href="#3-软件管理" class="headerlink" title="3.软件管理"></a>3.软件管理</h1><ul><li>软件包的类型</li></ul><p>  Debian包文件包含了二进制可执行文件、库文件、配置文件和man/info帮助页面等文档。通常Debian包文件的后缀为“.deb”，因此称为“Deb软件包”。Ubuntu有两种类型的软件包：二进制软件包（deb）和源码包（deb-src）。<br>  二进制软件包（Binary Packages）：它包含可执行文件、库文件、配置文件、man/info页面、版权声明和其它文档。<br>  源码包（Source Packages）：包含软件源代码、版本修改说明、构建指令以及编译工具等。先由tar工具归档为.tar.gz文件，然后再打包成.dsc文件。<br>  在用户不确定一个软件包类型时，可以使用file命令查看文件类型。</p><pre class="line-numbers language-c"><code class="language-c">wdl@UbuntuFisher<span class="token punctuation">:</span><span class="token operator">~</span>$ file  g<span class="token operator">++</span>_4<span class="token number">.1</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">-</span>9ubuntu2_i386<span class="token punctuation">.</span>debg<span class="token operator">++</span>_4<span class="token number">.1</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">-</span>9ubuntu2_i386<span class="token punctuation">:</span> Debian binary <span class="token function">package</span> <span class="token punctuation">(</span>format <span class="token number">2.0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>命令行管理工具 </li></ul><p>dpkg是最早的Deb包管理工具，它在Debian一提出包管理模式后就诞生了。使用dpkg可以实现软件包的安装、编译、卸载、查询，以及应用程序打包等功能。但是由于当时Linux系统规模和Internet网络条件的限制，没有考虑到操作系统中软件包存在如此复杂的依赖关系，以及帮助用户获取软件包（获取存在依赖关系的软件包）。因而，为了解决软件包依赖性问题和获取问题，就出现了APT工具。<br>APT系列工具可能是Deb软件包管理工具中功能最强大的。Ubuntu将所有的开发软件包存放在Internet上的许许多多镜像站点上。用户可以选择其中最适合自己的站点作为软件源。然后，在APT工具的帮助下，就可以完成所有的软件包的管理工作，包括维护系统中的软件包数据库、自动检查软件包依赖关系、安装和升级软件包、从软件源镜像站点主动获取相关软件包等。常用的APT实用程序有：apt-get、apt-cache、apt-file、apt-cdrom等。</p><blockquote><p>dpkg相关命令<br>dpkg -i <package>  安装一个在本地文件系统上存在的Debian软件包<br>dpkg -r <package>    移除一个已经安装的软件包<br>dpkg -P <package>   移除已安装软件包及配置文件<br>dpkg -L <package>   列出安装的软件包清单<br>dpkg -s <package>    显出软件包的安装状态</package></package></package></package></package></p></blockquote><ul><li>APT工作原理 </li></ul><p>APT（Advanced Packaging Tool）是Ubuntu Linux中功能最强大的命令行软件包管理工具，用于获取、安装、编译、卸载和查询Deb软件包，以及检查软件包依赖关系。<br>Ubuntu采用集中式的软件仓库机制，将各式各样的软件包分门别类地存放在软件仓库中，进行有效地组织和管理。然后，将软件仓库置于许许多多的镜像服务器中，并保持基本一致。这样，所有的Ubuntu用户随时都能获得最新版本的安装软件包。因此，对于用户，这些镜像服务器就是他们的软件源（reposity）。 </p><p>由于每位用户所处的网络环境不同，不可能随意地访问各镜像站点。为了能够有选择地访问，在Ubuntu系统中，使用软件源配置文件/etc/apt/sources.list 列出最合适访问的镜像站点地址。<br>即使这样，软件源配置文件只是告知Ubuntu系统可以访问的镜像站点地址。但那些镜像站点都拥有什么软件资源并不清楚。若是每安装一个软件包，就在服务器上寻找一边，效率是很低的。因而，就有必要为这些软件资源列个清单（即建立索引文件），以便本地主机查询。这就是APT软件包管理器的工作原理。 同时，APT能够检查Ubuntu Linux系统中的软件包依赖关系。大大简化了Ubuntu用户安装和卸载软件包的过程。<br>/var/lib/apt/lists<br>/var/cache/apt/archives/</p><blockquote><p>apt-get：用于管理软件包，包括安装、卸载、升级等操作；<br>apt-cache：用于查询软件包信息；<br>apt-proxy：用于搭建APT代理服务器；<br>apt-show-versions：用于显示系统中软件包版本信息；<br>apt-config：用于读取APT配置文件的简单工具；<br>apt-cdrom：用于将CD-ROM加入软件源配置文件。</p></blockquote><ul><li>安装软件包 </li></ul><p>apt-get install 软件包</p><ul><li>重新安装软件包 </li></ul><p>apt-get –reinstall install</p><ul><li>卸载软件包</li></ul><p>apt-get remove</p><ul><li>查询软件包信息</li></ul><p>apt-cache</p><ul><li>获取软件包安装状态 </li></ul><p>apt-cache policy</p><h1 id="4-用户管理"><a href="#4-用户管理" class="headerlink" title="4.用户管理"></a>4.用户管理</h1><ul><li>用户的属性<ul><li>用户名</li><li>口令</li><li>用户ID（UID）</li><li>用户主目录（HOME）</li><li>用户shell</li></ul></li></ul><ul><li>/etc/passwd文件</li></ul><p>/etc/passwd文件是系统能够识别的用户清单<br>用户登陆时，系统查询这个文件，确定用户的UID并验证用户口令</p><ul><li>/etc/shadow文件</li></ul><p>/etc/shadow文件是加密的用户清单<br>只有超级用户可以访问这个文件，用来保护加密口令的安全</p><ul><li>login.defs</li></ul><p>记录了生成一个新用户时所使用的参数</p><ul><li>pwconv</li></ul><p>使shadow文件的内容和passwd文件的内容保持一致，补上任何新加的用户，删除不在passwd中列出的用户<br>pwconv使用login.defs里指定的默认值填充shadow文件的参数</p><ul><li>/etc/group文件</li></ul><p>包含了UNIX组的名称和每个组中成员列表<br>每一行代表一个组，包括4个字段</p><p><strong>添加用户</strong></p><p>Adduser<br> 语法：   adduser  <username><br> 实例： </username></p><p>adduser  newuser</p><p>​           添加用户名为newuser的新用户</p><p><strong>设置密码</strong></p><p>语法：passwd  [-k] [-l] [u] [-f] [-d] [-S]  username<br>使用方法：</p><p>passwd  username</p><p><strong>删除用户</strong></p><p>语法：      deluser  <username></username></p><p>使用方法：<br>             deluser  –remove-home  user1</p><pre><code>       删除用户user1的同时删除用户的工作目录 </code></pre><p>*<em>删除用户组 *</em></p><p>delgroup<br>语法：     delgroup  groupname</p><p>使用方法：<br>            delgroup  groupname1</p><h1 id="5-Linux文件系统"><a href="#5-Linux文件系统" class="headerlink" title="5.Linux文件系统"></a>5.Linux文件系统</h1><p>待更新。。。</p><h1 id="6-Linux-网络配置管理"><a href="#6-Linux-网络配置管理" class="headerlink" title="6.Linux 网络配置管理"></a>6.Linux 网络配置管理</h1><h2 id="常用安全命令总结"><a href="#常用安全命令总结" class="headerlink" title="常用安全命令总结"></a>常用安全命令总结</h2><p>修改ip地址，重启后失效</p><p>ifconfig eth0 192.168..130.132</p><p>动态获取一个ip重启失效</p><p>dhclient eth0</p><p>修改网关</p><p>route add default eth0 192.168.130.1</p><p>查看网关</p><p>route -n</p><p>natestat -nr</p><p>配置dns服务器地址</p><p>vi /etc/resolv.conf</p><p>或者</p><p>eth0 nameserver 192.168.xxx.xxx</p><p>静态配置</p><p>vi /etc/natework/interfaces</p><p>命令行模式输入:set mouse=v，即可直接复制粘贴内容</p><p>设置源</p><p>编辑 /etc/apt/sources.list</p><p>nano /etc/apt/sources.list</p><p>清空文件内所有内容后添加</p><p>deb <a href="http://mirrors.ustc.edu.cn/kali" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main contrib non-free</p><p>保存退出</p><p>更新</p><p>依次运行以下命令</p><p>apt-get update</p><p>apt-get upgrade</p><p>apt-get dist-upgrade</p><p>由于包bai与包之间存在各种依du赖关系。upgrade只是简单的更新包，</p><p>不管这些依赖，它不和添加包，或是删除包。而dist-upgrade可以根据依赖关系的变化，</p><p>添加包，删除包。</p><ul><li>bashrc与profile的区别</li></ul><p>要搞清bashrc与profile的区别，首先要弄明白什么是交互式shell和非交互式shell，什么是login shell 和non-login shell。</p><p>交互式模式就是shell等待你的输入，并且执行你提交的命令。这种模式被称作交互式是因为shell与用户进行交互。这种模式也是大多数用户非常熟悉的：登录、执行一些命令、签退。当你签退后，shell也终止了。 shell也可以运行在另外一种模式：非交互式模式。在这种模式下，shell不与你进行交互，而是读取存放在文件中的命令,并且执行它们。当它读到文件的结尾，shell也就终止了。</p><p>bashrc与profile都用于保存用户的环境信息，bashrc用于交互式non-loginshell，而profile用于交互式login shell。系统中存在许多bashrc和profile文件</p><p>临时添加</p><p>设置环境变量(kali)</p><p>gedit hollow.c</p><p>gcc hollow.c -o hollow</p><p>pwd</p><p>/etc/pyd</p><p>export PATH=/etc/pyd:$PATH</p><p>永久添加</p><p>把环境变量加入/etc/profile/</p><ul><li>设置java环境变量</li></ul><p>1.下载linux版本jdk</p><p>2.cd ~/下载</p><p>3.tar -zxvf jdk-11.0.1_linux-x64_bin.tar.gz(解压）</p><p>4.mv jdk-11.0.1 /opt</p><p>5.cd /opt/jdk-11.0.1</p><p>6.gedit ~/.bashrc（编辑环境变量）</p><p>#install JAVA JDK</p><p>export JAVA_HOME=/opt/jdk-11.0.1</p><p>export CLASSPATH=.:${JAVA_HOME}/lib</p><p>export PATH=${JAVA_HOME}/bin:$PATH</p><p>7.source ~/.bashrc（启动环境变量生效）</p><p>8.（安装）</p><p>update-alternatives –install /usr/bin/java java /opt/jdk-10.0.2/bin/java 1</p><p>update-alternatives –install /usr/bin/javac javac /opt/jdk-10.0.2/bin/javac 1</p><p>update-alternatives –set java /opt/jdk-10.0.2/bin/java</p><p>update-alternatives –set javac /opt/jdk-10.0.2/bin/javac</p><p>9.java(验证)</p><p>查看cpu信息的命令：</p><p>1、 cat /proc/cpuinfo （Linux查看cpu相关信息，包括型号、主频、内核信息等）</p><h1 id="7-嵌入式Linux编程基础"><a href="#7-嵌入式Linux编程基础" class="headerlink" title="7. 嵌入式Linux编程基础"></a>7. 嵌入式Linux编程基础</h1><p>待更新。。。</p><h1 id="8-shell编程"><a href="#8-shell编程" class="headerlink" title="8.shell编程"></a>8.shell编程</h1><p>待更新。。。</p><h1 id="9-中断及设备管理"><a href="#9-中断及设备管理" class="headerlink" title="9.中断及设备管理"></a>9.中断及设备管理</h1><p>待更新。。。</p><h1 id="第10章-正则表达式"><a href="#第10章-正则表达式" class="headerlink" title="第10章 正则表达式"></a>第10章 正则表达式</h1><p>待更新。。。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑来文案</title>
      <link href="/2020/11/08/jian-lai-wen-an/"/>
      <url>/2020/11/08/jian-lai-wen-an/</url>
      
        <content type="html"><![CDATA[<h2 id="剑来-阮秀"><a href="#剑来-阮秀" class="headerlink" title="#剑来#阮秀"></a>#剑来#阮秀</h2><blockquote><p>剑气长城相隔有千万里，还是去了。可近在咫尺的神秀山，终究是一次不曾去过。</p></blockquote><p>当时小姑娘被一个姐姐捡回了家，在后者的家乡,她们坐在那个“天”字的第一个笔画上边，后者居中而坐，看着不是那么远的远.方，一个叫落魄山的地方。</p><p>这会儿小姑娘瞥了眼天幕,红了眼睛低下头,抬起于臂擦了擦眼睛，闷闷道:“天底下最大的坏蛋，就是那个陈平安了。”</p><p>陈平安只是目视前方，望向大海，默然无言。</p><h2 id="剑来-曹慈-陈平安"><a href="#剑来-曹慈-陈平安" class="headerlink" title="#剑来#曹慈#陈平安"></a>#剑来#曹慈#陈平安</h2><blockquote><p>天下武学对半分，白衣曹慈青衫客。昔年剑气长城两个问拳少年，终又重逢</p></blockquote><p>一袭白衣的曹慈，手持一把竹黄剑鞘。</p><p>单独来到功德林，拜访陈平安。</p><p>陈平安摘下背后长剑,放在桌上，去见曹慈。</p><p>剑气长城的两位少年,问拳三场过后,一别多年，各奔前程.终于在今夜重逢.</p><p>天下武学对半分，白衣曹慈青衫客。</p><h2 id="剑来-陈平安"><a href="#剑来-陈平安" class="headerlink" title="#剑来#陈平安"></a>#剑来#陈平安</h2><blockquote><p>剑气长城，末代隐官陈平安。一天之内，两座天下，共看一人</p></blockquote><p>蛮荒天下妖族修士的所有视线，再次聚集在一人身上。</p><p>是那个不再身穿鲜红法袍.换成了一袭青衫的背剑男子。</p><p>一个让蛮荒天下吃尽苦头的王八蛋，一个失心疯合道半截剑气长城的外乡人，一个连文海周密和剑修龙君都未能宰掉的家伙.一个年复一年守在城头上的半人半鬼。剑气长城,末代隐官陈平安。一天之内，两座天下，共看一人.</p><h2 id="剑来-崔讒"><a href="#剑来-崔讒" class="headerlink" title="#剑来#崔讒"></a>#剑来#崔讒</h2><blockquote><p>我文圣一脉，有大师兄崔讒，好，很好!这杯酒，敬师兄!</p></blockquote><p>希望未来的世道,终有一天，老有所终，壮有所用，幼有所长。有请小师弟,替师兄看一看那个世道。今日崔攙之心心念念,哪怕百年千年之后再有回响，崔攙亦是无愧无悔无憾矣，文圣一脉，有我崔讒，很不如何，有你陈平安,很好，不能再好，好好练剑,齐静春还是想法不够,十一境武夫算个</p><p>屁，师兄预祝小师弟有朝一日</p><p>咦?文圣一脉的关门弟子，他妈的都是十五境剑修了啊…</p><h2 id="剑来-顾璨"><a href="#剑来-顾璨" class="headerlink" title="#剑来#顾璨"></a>#剑来#顾璨</h2><blockquote><p>好一个“吾心悖逆”，好一个“狂徒”。当年的小鼻涕虫也变成了如今温文尔雅的狂徒孤璨。</p></blockquote><p>白帝城，“狂徒”顾璨。</p><p>可是柳赤诚眼中，这个小师弟，却是极为出彩的年轻儒生模样，身材修长，面如冠玉，满身书卷气。</p><p>虽然有那“狂徒”的绰号,但是任何人亲眼看到年轻人，无论是神态,还是言行，全然没有一点狂生的狷介气.</p><h2 id="剑来-裴钱"><a href="#剑来-裴钱" class="headerlink" title="#剑来#裴钱"></a>#剑来#裴钱</h2><blockquote><p>“好多年了，,师父不在，都没人管我。”裴钱和平安师徒二人终于再见面了。</p></blockquote><p>年轻女子使劲皱着脸，转头看一眼师父，总怕是做梦。她都不敢哭出声，害怕一个不小心 ，梦就给自己吵醒 了.</p><p>陈平安于掌按住裴钱的脑袋,晃了晃，微笑道:“呦，都长这么高了啊,都不跟师父打声招呼? “</p><p>裴钱终于侧过身,低下头,轻轻喊了声师父，然后伤心道:“好多年了，师父不在，都没人管我。”</p><h2 id="剑来-东山"><a href="#剑来-东山" class="headerlink" title="#剑来#东山"></a>#剑来#东山</h2><blockquote><p>先生，我是东山啊。先生，我们回家。</p></blockquote><p>少年脚步踉跄，往前一路跌跌撞撞前冲，最终被姜尚真伸手扶住肩头才停步，那白衣少年双于撑腰，大口喘气，仰起头，抬起一手，示意姜尚真莫要说话,打搅他先生睡觉休歇，白衣少年笑容灿烂，却满脸泪水,嗓音沙哑</p><p>道:“让我来背先生回家。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑来 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>落魄山观礼正阳山</title>
      <link href="/2020/11/08/luo-po-shan-guan-li-zheng-yang-shan/"/>
      <url>/2020/11/08/luo-po-shan-guan-li-zheng-yang-shan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“  落魄山，武夫朱敛  “</p><p>“  首徒，武夫裴钱  “</p><p>“  得意学生，崔东山  “</p><p>“  落魄山右护法，周米粒！  “</p><p>“  落魄山首席供奉，周肥  “</p><p>“  次席供奉，剑修米裕  “</p><p>“  剑修，隋右边  “</p><p>“  武夫，种秋  “</p><p>“  落魄山掌律，长命  “</p><p>“  落魄山石掌柜！  “</p><p>“  记住了，大爷我来自落魄山，姓陈名景清！  “</p><p>“  泓下  “</p><p>“  落魄山，沛湘  “</p><p>“  落魄山记名供奉，玉璞境剑修，今天暂且化名于倒悬  “</p><p>“  客卿，魏晋  “</p><p>“  飞升城，宁姚  “</p><p>“  落魄山前来观礼，山主陈平安，开始问剑  “</p></blockquote><p>   刘羡阳见暂时没有剑修过来拦路，登高之时，转头看了眼一线峰和满月峰之间，犹有片片白云悠悠掠过，只是从今往后，世间就再无一位女子御剑乘云，一身漆黑如墨的夜行衣，背靠青翠欲滴的满山草木。这样的问剑，实在无法让刘羡阳觉得有半点意思。</p><p>   刘羡阳今天接连三场登山问剑，琼枝峰，雨脚峰，满月峰，各有一位剑修前来领剑。</p><p>   最终柳玉败退撤回，贵为雨脚峰峰主的庾檩，还躺在地上睡觉，没人敢去捡，最后一位展现出玉璞气象的元婴女鬼，只知出身满月峰却没有自报姓名的女子剑仙，更是身死道消。</p><p>   青山夜夜等明月，白云劝饮壶中物。</p><p>   刘羡阳拿出一壶酒水，一边登高一边喝酒。</p><p>   终于走到了一线峰临近半山腰处，离着停剑阁还远，更别提那座剑顶的祖师堂了。</p><p>   可看样子，先前飞剑传信，好似山中次第花开，应该是陈平安已经按照约定，在那边挑了把椅子，正喝茶等他。</p><p>   陈平安这家伙有一点好，打小就不说大话，兜里只有一文钱绝不说两文钱的事，说到就是做到。</p><p>   其实除去诸峰青山，好似遇人不淑，难下贼船，此外绿水白云，都不该来此正阳山。</p><p>   刘羡阳这一路骂骂咧咧，嚷着正阳山赶紧再来个能打的老王八蛋，别再恶心他刘大爷了，只会让女子和兔崽子来这边领剑，算怎么回事。</p><p>   刘羡阳一个个指名道姓过去，将那宗主竹皇，满月峰夏远翠，秋令山陶烟波，水龙峰晏础，骂了个遍，再次发扬一洲罕见家乡独有的淳朴民风，顺便帮这几位老剑仙都取了个绰号，黄竹子，冬近绿，逃不掉，晏来。再串联一起，就是冬天的竹子绿黄绿黄，晏来了逃不掉，正好，今天你们正阳山可以红白喜事一起办。</p><p>   说来古怪，满月峰、秋令山这些自家老祖师被骂惨了的山头，剑修们个个义愤填膺，却就是没半点要离山出剑的迹象。</p><p>   反而是拨云峰、翩跹峰这些个完全可以置身事外的山头，已经有数拨年轻剑修，陆续御剑离开，赶赴一线峰。</p><p>   明知会输，甚至可能会死，一样得了自家祖师的默认许可，或是就在峰主剑修的亲自带领下，去会一会那个年轻剑仙刘羡阳。</p><p>   停剑阁这边，宗主竹皇先前突然说有事要去趟剑顶，却与任何人都不说做什么，去见谁。</p><p>   这让夏云翠在内三位老剑仙倍感意外，因为竹皇与他们提出的那个建议，却因为那个幕后供奉添油翁的突兀战死，大好谋划，落了个空。因为她的魂魄，早已与一线峰护山大阵融合，原本只要停剑阁这边与她打声招呼，她哪怕与刘羡阳问剑落了下风，只需要运转大阵，搅乱天地气象，帮忙遮人眼目，停剑阁这边夏云翠在内的三位老祖师，就可以相互配合，悄然出剑，神不知鬼不觉，剑斩刘羡阳。</p><p>   掌律晏础当时急匆匆心声询问，既然事情有变，接下来如何递出那一剑。</p><p>   竹皇好像有点心不在焉，竟然只说让他们见机行事。</p><p>   夏远翠气得差点当场撂挑子，你这个师侄怎么当的宗主，甩手掌柜吗？！</p><p>   停剑阁这边，哪怕竹皇微笑着与众多观礼客人道歉一句，就此飘然离去，犹有一玉璞两元婴三位老剑仙坐镇此地，其中老祖师夏远翠拥有两把本命飞剑，一名月晕，别称地上霜。</p><p>   另外一把本命飞剑，更是杀力卓绝，能够杀人无形中，名为“伤心”。</p><p>   陶烟波作为正阳山管钱的财神爷，佩剑名为玉漏，来自一处古蜀国遗迹，本命飞剑，名为秋波。</p><p>   飞剑“秋波”，名字颇为妩媚，却是剑路极其阴狠的本命神通，剑气好似秋风肃杀，一旦入体，剑气凛冽，洗涤肝肠，让挨了飞剑伤势的练气士，人身小天地的各大气府，稍有灵气运转，便会寒气渐生转冷，最终体内灵气凝结如冰，有那锥心之疼。</p><p>   掌律晏础的本命飞剑，山螟。</p><p>   何况还要再加上一个会暗中出剑的吴提京。这位宗主竹皇的关门弟子，本命飞剑鸳鸯，能够先伤修士心中道侣的道心，再反过来伤及修士自身神魂，比那夏远翠的飞剑“伤心”，更能伤心，简直就是一种最不可理喻的飞剑神通。所以正阳山祖师堂内，知晓此事的不少剑仙，私底下都曾经与竹皇详细询问一事，何谓心中道侣？竹皇也不藏私，笑言一句，只要修行路上，曾经真心喜欢过谁，都算。</p><p>   至于弟子吴提京的另外那把飞剑，竹皇与谁都不曾提及过名字。</p><p>   所以只要司徒文英不至于输得那么毫无征兆，正阳山就完全可以让那个刘羡阳怎么死都不知道。</p><p>   白衣老猿双臂环胸，斜瞥一眼满脸大失所望神色的夏远翠，冷笑道：“司徒文英这个空有修为剑心却稀烂的废物，今天算是丢尽满月峰的脸面。亏得她不是在雨脚峰修行，不然坐实了雷声大雨点小的说法。”</p><p>   夏远翠其实心中比袁真页更恨那个嫡传弟子，委实是个成事不足败事有余的东西，只是被袁真页如此伤口上撒盐，火上浇油，气得夏远翠与这位护山供奉直呼其名了，“袁真页！不要仗着功劳大，就可以信口开河，论山门资历，你还不如我！”</p><p>   白衣老猿扯了扯嘴角，道：“功劳簿上边，可不谈什么资历。”</p><p>   一个一辈子只会躲在山中练剑再练剑的老剑仙，除了辈分和境界，还能剩下点什么？所以在袁真页看来，还不如陶烟波、晏础这样实打实做事情的元婴剑修。</p><p>   之后不等夏远翠与袁真页掰扯什么，就是竹皇去了剑顶，再有祖师堂飞剑散花群峰中，之后就是一条条渡船离开正阳山地界。</p><p>   陶烟波惊愕不已，夏远翠更是脸色阴沉，掌律晏础尤其难堪，因为今天他算是庆典正式开始之前，正阳山几个老祖师当中，露面最多的一个，几场问剑，都由他来昭告一洲，事到如今，虽然摸不着头脑，全然不知为何会落个如此境地，晏础只确定一事，当下还有无数外人通过一处处镜花水月，正在看戏。</p><p>   陶烟波心声询问，“神诰宗那边？”</p><p>   夏远翠无奈道：“祁真只说临时有事。”</p><p>   晏础忍不住骂娘道：“有事？有个屁的事！这个天君是急着去青冥天下白玉京见祖师吗？那你他娘的倒是跻身飞升境啊！”</p><p>   夏远翠反问道：“真境宗那几个怎么说？”</p><p>   陶烟波叹了口气，神色疲惫道：“这伙人莫不是吃错药了，一个个无视符剑询问。”</p><p>   等到曹枰一走。</p><p>   三位老剑仙，顿时面面相觑。</p><p>   连那位被宗主竹皇说成“对事不对人”的护山供奉，都再不说什么挖苦言语。</p><p>   这使得刘羡阳一路走到半山腰处，都没什么阻拦。</p><p>   直到两拨来自不同山头的剑修，落在一线峰半山腰，分别来自拨云峰和翩跹峰。</p><p>   是正阳山新旧诸峰少有的好风气，眼前两拨纯粹剑修，何必跟秋令山、满月峰这些山头同流合污。</p><p>   身为一山掌律的晏础略作思量，就与半山腰两峰剑修下了一道祖师堂严令，让两拨剑修不管如何，都要拦下那个刘羡阳的继续登山，不计生死！</p><p>   不过刘羡阳只是与两位带头的剑修，心声言语一句，然后两位正阳山金丹剑仙就瞬间受了轻伤。</p><p>   之后拨云峰老金丹剑修，依旧不愿让出道路，率先与弟子布起一座剑阵，结果刹那之间，剑阵刚起就散，十数位年龄悬殊的剑修，一个个摇摇欲坠。</p><p>   刘羡阳瞥了眼这群拨云峰剑修，发现还是没有让路的意思，也不惯着他们。</p><p>   下一刻，连同那位曾经与剑仙郦采并肩作战的老金丹在内，悉数倒地不起。</p><p>   翩跹峰那边，峰主女祖师，在亲眼看着那位女子鬼物剑修身形消散后，知道些许内幕的她，内心悲哀不已，于公，她依旧让人带着本脉剑修赶赴正阳山，拦阻刘羡阳登山，于私，她懒得去了，所以只是提醒那位龙门境剑修的大弟子，尽力而为，不必拼命。</p><p>   等到翩跹峰又起剑阵，又是倒地不起一大片。</p><p>   刘羡阳绕过地上歪七倒八的两拨剑修，摔了手中酒壶，继续独自登山。</p><p>   之后有秋令山和水龙峰两拨剑修赶来凑热闹，只是相较于前边两拨人的神色坚毅，生死无怨，好像面对问剑之人，只是个金丹，</p><p>   后来的，好像十分心虚，就像在面对一位飞升境剑修。最有意思的，是先到一线峰的水龙峰剑修，落脚地，离着刘羡阳不算近，结果后到祖山的秋令山剑修，就更加礼让了，落在了更远的神道台阶上，估计后边再有一峰剑修赶来，就得直接在停剑阁那边落脚了。</p><p>   刘羡阳视线扫过，突然抬起手臂，吓了水龙峰剑修们一大跳。</p><p>   其中有个年轻剑修下山历练过数次，甚至还跟随师门长辈一起去过所谓的中部战场，一个慌张之下，他就率先祭出一把本命飞剑，剑光一闪，直奔那个刘羡阳而去，结果被后者双指夹住飞剑，丢在地上，一脚踩住，刘羡阳瞪眼道：“都还没说开打，你小子就偷袭？讲不讲江湖道义了？”</p><p>   刘羡阳从袖子里摸出一本粗略版本的祖谱，开始迅速翻页，偶尔抬头，问一句某某人是不是某某，有些点头的，运道极好，安然无恙，有些点头的，出门没翻黄历，蓦然七窍流血，身受重伤，直不隆冬砰然倒地，其中一位龙门境剑修，更是当场本命飞剑崩碎，彻底断去长生桥，更多倒地不起的剑修，也有飞剑断折的，只是堪堪保住了一条注定未来会极其艰辛的修行路。</p><p>   刘羡阳合上册子，然后所有站着的水龙峰剑修，全部受伤不算太重，倒地睡去。</p><p>   刘羡阳继续登高，见着了秋令山那拨个个脸色微白的剑修，又拿出那本册子，开始点名。</p><p>   毕竟这么多年，看多了正阳山的镜花水月，几乎都是些熟悉面孔，可是与册子上的名字对不上号，不晓得对方姓甚名甚。</p><p>   秋令山剑修这边，都很聪明，被点名的人，都面无表情，可是没奈何，身边的聪明人，总是有些蛛丝马迹的视线游移，那么刘羡阳就不客气了，所有被点名却敢装聋作哑的，一律重伤，而且没有让他们就地晕厥过去，好几个都在地上打滚，其中一位在山上口碑极好的观海境老剑修，下场尤其凄惨，先是本命飞剑断折再崩碎，然后被打断长生桥，最后还被刘羡阳一挥袖子，将尸体摔出一线峰，重重摔落在山门口庾檩那边做伴儿。</p><p>   在册子上边，记录这位观海境剑修丰功伟绩的篇幅不短，一桩桩一件件，触目惊心。</p><p>   停剑阁那边，晏础沉声道：“不能再等了！我来主持祖山大阵。”</p><p>   夏远翠和陶烟波一起点头。</p><p>   晏础看着一线峰之外的群峰，心情沉重异常，没来由感慨道：“怎么会变成这样？”</p><p>   白衣老猿默不作声，突然瞪大一双眼睛，杀意浓郁，煞气冲天，身形拔地而起，整座停剑阁都为之一震，这位护山供奉却不是去往剑顶那边，而是直奔背剑峰！</p><p>   要么干脆不来观礼，像龙泉剑宗、风雪庙和真武山这样，半点面子都不给正阳山。</p><p>   可是既然来了，都已经下榻诸峰府邸，临了又走，这在山上，会犯极大的山水忌讳，比起黄河和刘羡阳的先后两场问剑，更不符合山上规矩。</p><p>   神诰宗的天君祁真，是名义上的一洲修士领袖，而位于南涧国边境的神诰宗，作为宝瓶洲诸多仙家执牛耳者，一向行事稳重，对待山上诸多纠纷恩怨，不偏不倚。神诰宗不但独占一座清潭福地，宗主祁真更是身兼四国真君头衔。所以这位道门天君所在那条渡船，走得最为让看客惊心动魄，因为以祁真的术法神通，走得悄无声息并不难，但是祁真偏偏没有如此作为。</p><p>   牵一发而动全身，只说翩跹峰上的皇帝君主和将相公卿，再加上之前中岳山君晋青的提醒，一下子就足足走了半数之多。</p><p>   真境宗的道贺之人，更是直接走了一干二净，仙人境的宗主刘老成，与无敌神拳帮的老帮主高冕，两位老友，联袂远游离去。</p><p>   身为首席供奉的截江真君刘志茂，次席供奉李芙蕖，同样没有隐藏踪迹，各自缓缓御风，离开正阳山。</p><p>   在山水神灵谱牒一途，地位极为崇高的大山君晋青，更是直接与正阳山撕破脸皮，大挖墙角，在众目睽睽之下，竟然带走了剑修元白，而元白则当场宣布自己脱离正阳山。此外南岳储君之山的采芝山神，与雍江水神，各自领着辖境内的一大拨山水神灵，一道缩地山河，就此消失无踪，更有钱塘江风水洞的老蛟，乘坐上一条来自大隋王朝的渡船，跟随那位从披云山林鹿书院副山长升任大伏书院山长的程龙舟，一同离去。</p><p>   那个自称祖籍在泥瓶巷、与刘羡阳同乡的曹峻，朝着琼枝峰递出三剑后，大概是觉得意犹未尽，偷摸回正阳山地界，到了仙人背剑峰那边，祭出一把炼制、修缮多年的本命飞剑，围绕着背剑峰四周山脚处，刹那之间开遍荷花，之后曹峻再手持佩剑，从上往下，剑光自斩而落，将那无人看守的背剑峰一分为二，他娘的，让你这位搬山老祖，当年踩塌曹爷爷在泥瓶巷的祖宅屋顶。</p><p>   曹峻一剑斩开山头后，这才重新御剑，大摇大摆离去，撂下一句话，“开峰者，曹爷爷是也！”</p><p>   与正阳山关系极为不错的云霞山，一对师徒，争执不休，山主老仙师都要觉得这个嫡传，是不是鬼迷心窍了，既不说缘由，只劝自己离开正阳山，不要再观礼道贺了。老仙师气笑不已，询问蔡金简知不知道一旦如此行事，就等于与正阳山断绝所有香火情了？难道就因为一个龙泉剑宗嫡传弟子的问剑，再多出几把云遮雾绕的传信飞剑，云霞山就要全部舍了不要，从此与正阳山对立？</p><p>   那个云霞山十二峰中最为年轻的元婴女子祖师，说弟子知道，可正因为如此，所以才必须离开此地。</p><p>   老山主老成稳重，说再看看，毕竟还有个云林姜氏，书院君子姜山，暂时“按兵不动”，留在了满月峰上。</p><p>   蔡金简对恩师劝说无果，她只好独自离开。</p><p>   结果片刻之后，老仙师就追上了蔡金简，因为刚刚得到了一道密信，大骊巡狩使曹枰走了，只留下那位来自京城的礼部侍郎。</p><p>   满月峰上，姜山走出府邸，来到凉亭那边，发现姜韫，韦谅和苻南华都已离去，只留下个“身材臃肿”的妹妹。</p><p>   姜笙问道：“大哥，你也收到飞剑传信了？”</p><p>   姜山摇摇头。</p><p>   姜笙好奇问道：“韦谅说这次来这边，是为了与人请教一场拆解，说得玄乎，你知不知道是什么意思？”</p><p>   姜山伸手指了指那些离开正阳山的各方渡船，无奈道：“不是明摆着了吗？”</p><p>   姜笙一脸茫然，“啊？不是说拆正阳山那座祖师堂吗？我还以为能拆出一朵花来。”</p><p>   说到这里，她自顾自笑道：“先前飞剑繁密，如花开山顶，风景确是极美。”</p><p>   宝瓶洲毕竟不是北俱芦洲，拆祖师堂这种事情，不常见。</p><p>   姜山手指揉了揉眉心，道：“是也不是。”</p><p>   韦谅，不显山不露水，可正是此人，在幕后亲手制定了大骊朝廷那份山水规矩，最终立碑山巅，使得山上一洲修士，都得循规蹈矩，听令行事。</p><p>   而担任大骊陪都礼部尚书的柳清风，则暗中筹划了如今一洲神祇的谱牒品第。</p><p>   简而言之，这两个，都不是大骊本土人氏，却都能够在大骊庙堂官居高位，所以都算国师崔瀺颇为器重的“得意门生”，只是不记名而已。大骊官场上的一般人，自然不清楚这等内幕。</p><p>   姜笙问道：“大哥，你既然留下了，是打算等会儿去一线峰那边观礼？”</p><p>   姜山还是那句话：“是也不是。”</p><p>   姜山恼羞成怒道：“一个个的，从姜韫到韦谅再到大哥你，还能不能说人话了？！”</p><p>   姜山笑道：“满月峰离着一线峰这么近，什么风景瞧不见，不用非要去剑顶凑热闹。”</p><p>   水龙峰上，茱萸峰女子祖师田婉飘然而落，在一处府邸，悄悄找到了一位年轻面容的龙门境修士，这家伙此刻如丧考妣，桌上还有一盘酒泼蟹，吃了一半，剩下一半，实在是没心情继续吃了。</p><p>   他发现田婉后，只见那个婆姨疯了一般，满脸感激神色，使劲挥动袖子，“天才兄，天才兄，终于有幸能够与你见上一面了！此次问剑，必须要记你一笔头功！”</p><p>   那个剑修愣在当场，既不知这个田婉为何要在这种时刻，来找自己，说着些没头没脑的混话，更想不明白，好像从眼神，脸色，言语，这位茱萸峰女祖师，换了个人。</p><p>   在他印象中的田婉，对谁都是低眉顺眼笑意盈盈的，眼前这位，似乎笑得过于灿烂了些。</p><p>   其实名义上管着正阳山情报的，是他眼前这个来自鸟不站的田婉，只不过他是掌律晏础的得意弟子，深受老祖器重和信赖，这些年来，轻而易举就将田婉这个婆姨给架空了，所以他都觉得田婉空有一把祖师堂座椅，太过蠢笨，简直就是不费吹灰之力，十成才智，就像才用了一半，就已经拿下了至关重要的谍报大权。</p><p>   而他在这些年，光是搜寻落魄山谍报一事，他就任劳任怨，百般努力，手段迭出，可谓收获匪浅，不但与那有个龙窑的清风城许氏往来紧密，还有福禄街卢氏在内的几个大姓，以及西边大山的几个仙家门派，都有极其隐蔽的书信往来，他甚至都与冲澹江水神娘娘搭上线了。</p><p>   只是他怎么都没有想到，那个龙泉剑宗的刘羡阳，似乎不是什么金丹境剑修，难道真是自己的谍报错啦？</p><p>   停剑阁这边，只是一瞬间，夏远翠在内的三位老剑仙，就心弦紧绷，如临大敌。</p><p>   下一刻，那个刘羡阳就已经站在了陶烟波和晏础两人之间，一手搭住一位老剑仙的肩膀，却是以心声与夏远翠笑道：“别动，动就死。”</p><p>   夏远翠强行咽下一口鲜血，看着那个好像同时问剑三人的年轻剑仙，一张脸庞，已经开始渗出细密鲜血。</p><p>   但是三人当中境界最高的夏远翠，都不需要什么权衡利弊，就迅速放弃了出剑与此人分生死的打算。</p><p>   不着急，仙人背剑峰那边还有个袁真页，剑顶祖师堂还有宗主竹皇。</p><p>   至于陶烟波和晏础，好像被施展了定身术一般，实则是心神沉浸小天地当中，</p><p>   刘羡阳双手按住那两位老剑仙的肩膀，转头与夏远翠笑道：“年纪越大，胆子越小？辈分越老，脸皮越厚？”</p><p>   早就赶来停剑阁的那三四十号观礼仙师，无一人仗义执言，或是与那刘羡阳大骂几句，只是极有默契，人人默默挪步，远离那四位剑仙。</p><p>   夏远翠以心声说道：“刘羡阳，你既然拥有如此玄妙的本命飞剑，就更不该在今天在此地，不小心伤及大道根本的。”</p><p>   虽然没有选择搏命出剑，夏远翠其实一直在凝神观察刘羡阳的动静，先前电光火石之间，问剑一场，确实是自己输了一筹，但是这个年轻人，竟敢同时问剑三人，这会儿鲜血流淌不止，已经浑身浴血，看样子，撑不了多久？</p><p>   刘羡阳说道：“好像司徒文英是还你的嫡传弟子？一开始我还不太理解她的破罐子破摔，这会儿算是明白了，碰到你这么个传道恩师，算了，跟你没什么可聊的，反正你们满月峰，以后得改个名字。”</p><p>   那条大骊官家渡船犹在一线峰外悬停，曹枰却已经乘坐符舟离去，既没有刻意大张旗鼓，也没有刻意隐匿踪迹，但只要是个明眼人，就都心中有数。</p><p>   很大程度上，曹枰参加观礼，要比云林姜氏的道贺，更有分量。再者那条大骊朝廷渡船上，与这位巡狩使同行官员，只是一位礼部侍郎，终究不是名义上管着一国山水谱牒的那位尚书大人。而且即便是京城礼部袁尚书，真的与同为上柱国姓氏出身的曹枰，破天荒打破“袁曹不同路”的那个大骊官场规矩，双方愿意一同亲临正阳山，正阳山依然不敢有任何偏袒。</p><p>   那位“被迫”独自留在渡船上的礼部侍郎，只得急匆匆飞剑传信大骊京城，希望自家衙门那位袁尚书给个明确说法，免得自己做错事说错话。</p><p>   关翳然和刘洵美这两位出身意迟巷、篪儿街的豪阀子弟，一起在渡船观景台那边看热闹，一旁虞山房给戚琦一手肘打在肋部，只得与关翳然开口问道：“真是那小子折腾出来的动静？”</p><p>   早年在书简湖，有个面容消瘦却眼神明亮的账房先生，与他们这帮沙场武夫，一起在酒桌上喝过酒，那家伙的酒量酒品硬是了得，劝酒功夫更是出神入化，别人喝高了，都是拼了命嚷着老子没醉，那家伙倒好，怎么看都是再多喝半碗就得去桌底下去转圈的，结果一碗又一碗，确实那个喝得最多的人，愣是还能次次走着离开酒桌。</p><p>   关翳然笑着不说话。</p><p>   渡船不远处，风雪庙女修余蕙亭，站在一位按辈分算是师叔的俊逸男子身边，这个在大骊随军修士当中，以常年冷脸、杀敌凶狠著称的女子，她脸微红，柔声问道：“魏师叔，你怎么来了？”</p><p>   男子淡然说道：“闲来无事，随便散心。”</p><p>   他其实早就后悔当那不记名的客卿了。指玄峰袁灵殿，到底是北俱芦洲的修士，他魏晋可不是，与落魄山离得不近，也实在不远。所以魏晋打定主意，这次只要离开了正阳山地界，就跨洲出海，重返剑气长城。上次在那边，是一场守城战，这次故地重游，就可以去更南边出剑。</p><p>   离开渡船的一艘符舟之上，巡狩使曹枰再次拿出那封密信。</p><p>   说是符舟，其实是一艘庞然楼船，戒备森严，除了曹氏私人扈从，还有大骊边军铁骑的随军修士，更有宋氏朝廷安排的大骊皇家供奉。</p><p>   曹枰倒了一碗酒，自饮自酌，重新仔细浏览起这封落款署名“落魄山陈平安”的密信。</p><p>   信上说三百年之内，落魄山保证上柱国曹氏的香火，不会出现某些最坏的意外。此外，三百年内，公开的，私底下的，只要是曹氏勘验过的人选，有资质跻身七境武夫、金丹地仙的，无论是修道美玉，还是剑仙胚子，都可以送来落魄山修行。</p><p>   字迹是极工整的小楷，处处锋芒收敛，如果说当真字由心生，那么写这封信的年轻山主，要么是一个城府极深的大奸大猾之辈，要么就是一个很讲规矩的人。</p><p>   信上还说，如果曹氏不希望与落魄山牵连太深，落魄山可以暗中帮忙引荐，送往北俱芦洲的太徽剑宗、浮萍剑湖，或是披麻宗，还可以是南婆娑洲的龙象剑宗。</p><p>   曹枰放下手中密信，手指轻敲桌面。</p><p>   曹氏本就是大骊上柱国姓氏，关键还出了他这位武臣勋贵已达极致的巡狩使，一个家族，文武两份殊荣，皆已位极人臣。</p><p>   从此高枕无忧？恰恰相反，接下来才是一个真正考验曹氏家族为官火候的阶段，一着不慎满盘皆输。曹氏想要安稳，维持住这份来之不易的风光，答案不在庙堂，而在山上，并且只能是山上了。</p><p>   所以关翳然给出的这封密信，不是锦上添花，而是雪中送炭，是一个可解曹氏燃眉之急的极好契机。</p><p>   如果未来三百年之内，不断有曹氏家族子弟，以及那些在曹氏这棵大树底下好乘凉的附庸门阀士族，或是通过各个渠道，秘密找寻出来的修道胚子，能够陆陆续续成为落魄山在内的五六个宗门嫡传，这意味着什么？这就是一个家族，在山上的开枝散叶。相较于庙堂官场上的门生故吏，花开花谢，一朝天子一朝臣，山上的香火情绵延，其实何止三百年？自然要旱涝保收太多了，只要山上经营得当，曹氏甚至可以主动在大骊庙堂上，退一两步。</p><p>   上柱国袁氏早先以家族庶子与清风城许氏嫡女联姻，其实亦是同理。</p><p>   落魄山，前不久刚刚跻身宗字头仙家，这等大事，曹枰当然知道。</p><p>   信上却提及了落魄山之外的数个宗门，尤其有个南婆娑洲的龙象剑宗。</p><p>   送信之人，是关翳然。这是一个身上好像贴满了官场护身符的年轻人，从先帝，到皇帝陛下，到整个曾经都姓“关”的大骊吏部，甚至大半个六部衙门的老人，不论文武，都对关翳然寄予厚望，并且愿意将其视为半个自家子弟，当然也包括曹枰自己，对关翳然一样极其看好。</p><p>   等到风雪庙一位大剑仙都说此人可信，那么曹枰就心中有数了。这笔山上买卖，完全可以做。</p><p>   一位大骊供奉轻轻敲门，曹枰微微皱眉，收起密信入袖，说道：“进来。”</p><p>   这位来自京城的宋氏供奉，轻声道：“曹将军，我在下船之前，听那位马侍郎的口气，为正阳山压阵，好像是大骊太后的意思，我们这一走，是不是有些不妥。”</p><p>   听口气，好像，是不是。</p><p>   曹枰心中冷笑不已，跟老子打官腔？国师一走，就又开始玩这套了？</p><p>   曹枰拿起桌上一本兵书，问道：“谁？”</p><p>   那位供奉硬着头皮说道：“太后娘娘。”</p><p>   结果曹枰只是微微眯眼，依旧一脸听不懂的神色。</p><p>   一位大骊铁骑中流砥柱的巡狩使，懂与不懂，可以完全看心情，供奉却不敢不懂，再不多说一个字，小心翼翼告辞离去。</p><p>   曹枰开始翻看兵书，一个妇道人家，也敢与我发号施令？</p><p>   她当自己是军神宋长镜，还是皇帝陛下？</p><p>   一线峰剑顶。</p><p>   所有的花木坊女修，个个花容失色，只是她们仍然不敢擅自离开祖师堂广场。</p><p>   陈平安走到祖师堂门口那边，与竹皇说是要迎接搬山老祖，跨过门槛后，就与门口那位由正阳山剑气凝成的仙人，双方相距不过几步路。</p><p>   竹皇还在消化那个意外。</p><p>   先前这个年轻人喝茶期间，大言不惭，说可以让这场道贺庆典，变得树倒猢狲散，你竹皇不信的话，大可以坐着一边喝茶，一边拭目以待。</p><p>   “你们正阳山无敌一洲，家大业大，创建下宗已经是大势所趋，中土文庙和大骊宋氏答应了此事，自然就没谁拦得住，我当然不例外。”</p><p>   “但是我保证可以做到一件事，让这一切，都变得与竹皇无关，以后正阳山弟子每每提起竹皇，至多赞誉一声上任宗主，中兴老祖，功莫大焉。”</p><p>   “因为正阳山的山水谱牒上，宗主和护山供奉，你只能选取一个，只能活下来一个。”</p><p>   竖子狂妄，大放厥词？！</p><p>   可是眼睁睁看着那一艘艘渡船的远游离去，让竹皇愈发心惊胆战。</p><p>   陈平安抖散卷起的袖子，瞥了眼背剑峰那边，那头老畜生是被曹峻出剑牵引过去了。</p><p>   陈平安双手笼袖，笑着教训起一位宗主，“大事心静，小事心稳，有事心平，无事心清。竹皇，你修心不够啊。”</p><p>   沉默片刻，陈平安微笑道：“竹皇，决定好了没有？等下袁真页现身剑顶，就当你拒绝了我的那个提议，一座正阳山打算与袁真页生死与共。”</p><p>   竹皇唯有沉默。</p><p>   竹皇眼中不远处的那一袭青衫，指了指自己的脑袋，“是不是觉得我只会耍这个？”</p><p>   那人自问自答，“确实只是些不入流的小手段，不值一提。没事，接下来我就让你们正阳山，用你们开山两千六百年来，那个最擅长的道理，把道理还给你们。”</p><p>   一人独自登山，其实也不算，因为刘羡阳手里拖着个重伤昏迷过去的夏远翠。</p><p>   在这一线峰剑顶，正阳山祖师堂重地，陈平安和刘羡阳就此相聚。</p><p>   刘羡阳随手将那夏远翠丢在广场上，看着门口那个笑眯眯的家伙，气笑道：“老子下次再来问剑，如果再听你的徒步登山，就跟你姓！”</p><p>   陈平安笑道：“你随便找个位置喝酒，接下来就轮到我问剑了。”</p><p>   刘羡阳挑了张案几，坐下喝酒啃瓜果。</p><p>   白衣老猿从那背剑峰赶来，身形轰然落地，“陈平安！刘羡阳！”</p><p>   刘羡阳怒道：“把老子的名字摆在前边！”</p><p>   陈平安转头看了眼祖师堂内刚刚起身的竹皇。</p><p>   竹皇一步跨出祖师堂，神色复杂道：“袁真页，从现在起，你就不再是正阳山护山供奉了。”</p><p>   白衣老猿狞笑道：“竹皇，你再说一遍？！”</p><p>   竹皇刚要言语，陈平安收回视线，摆摆手，“晚了。”</p><p>   青衫背剑，一步缩地山河，背后长剑铿锵出鞘，率先去往一线峰山门口。</p><p>   站在剑顶崖畔的陈平安，始终双手笼袖，望向那个白衣老猿，“继续当你的护山供奉好了。”</p><p>   脚尖轻轻一点，陈平安微微后仰，身形如虹倒掠而去，在空中划出一道弧线，最终陈平安落在长剑之上，御剑悬停在一线峰的山门口。</p><p>   满月峰上空，凭空出现一位身形佝偻的老人，双手负后，微笑道：“落魄山，武夫朱敛。”</p><p>   青雾峰上空，有个年轻女子，淡然道：“首徒，武夫裴钱。”</p><p>   水龙峰那边，出现一位御风而起的白衣少年，笑嘻嘻道：“得意学生，崔东山。”</p><p>   反正今天曹晴朗不在，这小子暂时不适宜露面。</p><p>   白衣少年的身边，站着一个黑衣小姑娘，手持绿竹行山杖，高高扬起脑袋，大声道：“落魄山右护法，周米粒！”</p><p>   一位青衫长褂的中年男子，站在翩跹峰上空，笑眯眯道：“落魄山首席供奉，周肥。”</p><p>   一位极其俊美的年轻剑仙，嗓音温醇，在那琼枝峰之上，自我介绍道：“次席供奉，剑修米裕。”</p><p>   拨云峰和翩跹峰的所有剑修，都呆滞无言，披云山，剑仙，余米！此人杀力极大，杀妖动辄拦腰斩断，或是一道剑光当头劈开。早年在老龙城战场上，这位剑仙的横空出世，仅次于道门仙君曹溶。</p><p>   一个姿容极美、眼神冷冽的女子，站在雨脚峰上空，淡然道：“剑修，隋右边。”</p><p>   是那个战场上出剑不要命的真境宗剑仙？！怎么成了落魄山的剑修？</p><p>   一位气态儒雅的老夫子，在别处现身，微笑道：“武夫，种秋。”</p><p>   此人好像在西岳战场现身过？</p><p>   朱敛，裴钱，种秋，这三位落魄山的纯粹武夫，皆可御风悬空。</p><p>   这意味着，三人最少也该是远游境武夫。</p><p>   “这个裴钱，曾经有过一个化名，郑钱。”</p><p>   “哪个郑钱？”</p><p>   “还能是哪个？就是那个跟曹慈问拳四场的那个女子武夫。”</p><p>   没有人觉得与曹慈问拳，连输四场，有什么丢人现眼的。反而会让人由衷感到敬畏。</p><p>   第一，不是谁都敢与曹慈问拳的。第二，任何武夫问拳，曹慈就一定接拳吗？第三，郑钱问拳四场，曹慈竟然都接下了！</p><p>   一位身穿雪白长袍的高大女子，笑意盈盈，轻声道：“落魄山掌律，长命。”</p><p>   化外天魔的白发童子，与石柔借了她副皮囊，一双眼珠子滴溜溜转，原本挺好看一女子，就有些显得贼兮兮了，只见她趾高气昂道：“落魄山石掌柜！”</p><p>   今天比较收敛了，只以玉璞境气象示人。</p><p>   陈灵均俯瞰脚下那座水龙峰，冷笑道：“记住了，大爷我来自落魄山，姓陈名景清！”</p><p>   一条满身浓郁水运的元婴境水蛟，站在琼枝峰上空，只是报了个名字，“泓下。”</p><p>   她好像多说一个字，都恨不得挖个地洞钻下去。</p><p>   本该隶属于清风城的狐国之主，竟然现身，自报名号，她天然妩媚，不笑也极能蛊惑人心，缓缓道：“落魄山。沛湘。”</p><p>   一位来宝瓶洲挑选弟子的玉璞境老剑修，那于樾，只觉得，今儿得劲得劲，再毫不遮掩一身剑气，御剑升空，放声大笑道：“落魄山记名供奉，玉璞境剑修，今天暂且化名于倒悬。”</p><p>   客卿？不能够，最少得是记名供奉起步！</p><p>   魏晋察觉到一道视线，叹了口气，站在栏杆那边，随口说道：“客卿，魏晋。”</p><p>   白鹭渡那边，圆脸姑娘有些尴尬，自己怎么办，就说龙须河边上的铁匠铺子，余倩月？想了想，她就没有现身，折断一把芦苇，蹲在白鹭渡水边，百无聊赖拨水玩。刘羡阳这个骗子，那个搬山大圣哪有什么飞升境。</p><p>   白鹭渡，有背剑女子脚尖一点，升空悬停，神色平静道：“飞升城，宁姚。”</p><p>   而作为落魄山主人的那一袭青衫，在正阳山山门口那边御剑悬空，微笑道：“落魄山前来观礼，山主陈平安，开始问剑。”      </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑来 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单片机编程中 ^= ,&amp;=~, |= 是什么意思</title>
      <link href="/2020/11/08/dan-pian-ji-bian-cheng-zhong-shi-shi-me-yi-si/"/>
      <url>/2020/11/08/dan-pian-ji-bian-cheng-zhong-shi-shi-me-yi-si/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在stm32单片机编程是我们会经常遇到像 <code>^=</code> ,<code>&amp;=~</code>, <code>|=</code> 的符号，于是我就整理了下关于这部分语法的问题，简单是听简单的就是太容易忘记了，写在这里不记得了就来看看。</p></blockquote><blockquote><p> 数电基础</p></blockquote><pre class="line-numbers language-c"><code class="language-c"><span class="token function">AND</span> <span class="token punctuation">(</span>位与<span class="token operator">&amp;</span><span class="token punctuation">)</span> <span class="token function">OR</span> <span class="token punctuation">(</span> 位或<span class="token operator">|</span>bai <span class="token punctuation">)</span> <span class="token function">XOR</span> <span class="token punctuation">(</span> 位异或<span class="token operator">^</span> <span class="token punctuation">)</span><span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span>， <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span>， <span class="token number">1</span> <span class="token operator">^</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">0</span>， <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">1</span>， <span class="token number">1</span> <span class="token operator">^</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token number">0</span> <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">0</span>， <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span>， <span class="token number">0</span> <span class="token operator">^</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token number">0</span> <span class="token operator">&amp;</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">0</span>， <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">0</span>， <span class="token number">0</span> <span class="token operator">^</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p> 寄存器操控实操</p></blockquote><pre class="line-numbers language-c"><code class="language-c">P4OUT <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span>baiBIT0等效于P4OUT <span class="token operator">=</span> P4OUT <span class="token operator">^</span><span class="token function">du</span> <span class="token punctuation">(</span><span class="token operator">~</span>BIT0<span class="token punctuation">)</span><span class="token punctuation">;</span> 按位与同样P4OUT <span class="token operator">^</span><span class="token operator">=</span> <span class="token operator">~</span>BIT0等效于P4OUT <span class="token operator">=</span> P4OUT <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token operator">~</span>BIT0<span class="token punctuation">)</span><span class="token punctuation">;</span> 按位异或zhiP4OUT <span class="token operator">|</span><span class="token operator">=</span> <span class="token operator">~</span>BIT0等效于P4OUT <span class="token operator">=</span> P4OUT <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token operator">~</span>BIT0<span class="token punctuation">)</span><span class="token punctuation">;</span> 按位或比如原来P4输出dao为<span class="token number">0000</span> <span class="token number">1111</span>即P4OUT<span class="token operator">=</span><span class="token number">0x0F</span>经过P4OUT <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span>BIT0BIT0<span class="token operator">=</span><span class="token number">0000</span> <span class="token number">0001</span> 取反<span class="token operator">~</span>BIT0<span class="token operator">=</span><span class="token number">1111</span> <span class="token number">1110</span><span class="token number">0000</span> <span class="token number">1111</span> <span class="token operator">&amp;</span> <span class="token number">1111</span> <span class="token number">1111</span>结果为<span class="token number">0000</span> <span class="token number">1110</span> 即P4OUT <span class="token operator">=</span> <span class="token number">0x0E</span><span class="token punctuation">;</span>这样P4的其它IO口输出状态不变只改变了P4的BIT0为低 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>举个例子</p></blockquote><pre class="line-numbers language-c"><code class="language-c">P1OUT <span class="token operator">|</span><span class="token operator">=</span> <span class="token number">0X01</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//就是P1.0至高</span>P1OUT <span class="token operator">^</span><span class="token operator">=</span> <span class="token number">0X01</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//就是P1.0取反</span>P1OUT <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token number">0X01</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//就是P1.0至低</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>献上代码</p></blockquote><pre class="line-numbers language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 开启 GPIOB 端口时钟</span> RCC_APB2ENR <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//清空控制 PB0 的端口位</span> GPIOB_CRL <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span> <span class="token number">0x0F</span><span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 配置 PB0 为通用推挽输出，速度为 10M</span> GPIOB_CRL <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// PB0 输出 低电平</span> GPIOB_ODR <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">&lt;&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitee上传作业</title>
      <link href="/2020/11/05/gitee-chuan-zuo-ye/"/>
      <url>/2020/11/05/gitee-chuan-zuo-ye/</url>
      
        <content type="html"><![CDATA[<p>骏哥最近要求我们通过gitee上传作业代码，对于从来没有接粗过得小伙伴或许就有些炸胡了，我之前了解过一些关于git的操作，但是不是很熟悉，以至于也琢磨了大半天，我给大家简要介绍下如何在gitee上面上传作业。</p><p>1.进入图中的项目中</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201105194403.png" alt></p><p>2.选择仓库-&gt;作业-&gt;进入原仓库</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201105194556.png" alt></p><p>3.fork到自己主页去</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201105194713.png" alt></p><p>4.来到自己的个人主页，进入watches</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201105194815.png" alt></p><p>5.进入fork后的仓库</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201105194924.png" alt></p><p>6.上传文件后，pull request交由管理员审查就完事了</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201105195205.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201105195305.png" alt></p><p>over！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 野生技术产业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32cubeMX简单使用介绍</title>
      <link href="/2020/11/03/stm32cubemx-jian-dan-shi-yong-jie-shao/"/>
      <url>/2020/11/03/stm32cubemx-jian-dan-shi-yong-jie-shao/</url>
      
        <content type="html"><![CDATA[<h2 id="SPL-HAL-LL库"><a href="#SPL-HAL-LL库" class="headerlink" title="SPL,HAL,LL库"></a>SPL,HAL,LL库</h2><p>以前开发STM32最常见的就是使用寄存器，或者标准外设库进行开发，但是自从15,16年开始，ST逐渐停止了对标准外设库的更新和维护，转向了HAL,和LL库开发。</p><ul><li>SPL: 标准外设库</li><li>HAL:硬件抽象层库</li><li>LL:底层库</li></ul><p><strong><em>补充：</em></strong></p><p><strong>STM32Cube HAL：</strong>一套针对特定系列MCU的硬件抽象层（HAL），如STM32Cube_FW_G0。确保整个STM32组合的可移植性。</p><p><strong>STM32Cube LL：</strong>一套针对MCU底层的库，确保最佳的性能。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>下载安装STM32CubeMX及HAL库</li><li>下载安装IDE（MDK-ARM）</li><li>准备硬件（开发板stm32f103c8t6,ST-Link下载器）</li></ul><h2 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h2><p><strong>1.打开STM32CubeMX，进入MCU选择器</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201103104447.png" alt></p><p>进入选择器时会联网更新数据库，可能需要等待一下。</p><p><strong>2.选择对应型号MCU</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201103104726.png" alt></p><p><strong>3.时钟源选择</strong><br>如果选择使用外部高速时钟（HSE），则需要在System Core中配置RCC（如下图）。如果使用默认内部时钟（HSI），这一步可以略过。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201103105119.png" alt></p><p><strong>4.选择GPIO（LED）引脚</strong><br>我们这里使用一个GPIO引脚（PA0，PC13）控制LED亮灭。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201103105338.png" alt></p><p><strong>5.配置时钟Clock</strong><br>STM32CubeMX配置时钟的界面非常方便，有很多提示（比如最大时钟），很多地方直接点击选择就行了。</p><p>默认高速时钟是使用内部（HSI），而且CPU时钟配置的比较低。以我选择的STM32F103，外部8M晶振为例（如下图）。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201103105702.png" alt></p><p><strong>6.工程管理</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201103110046.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20190809190430193.png" alt></p><p>将HAL库的所有.C和.H都复制到所建工程中 </p><p><strong>优点：这样如果后续需要新增其他外设又可能不再用STM32CubeMX的时候便会很方便</strong></p><p><strong>缺点： 体积大，编译时间长(很长)</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20190809190647833.png" alt></p><p>只复制所需要的.C和.H  (<strong>推荐</strong>)</p><p><strong>优点：体积相对小，编译时间短，并且工程可复制拷贝</strong></p><p><strong>缺点： 新增外设时需要重新用STM32CubeMX导入</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20190809190846747.png" alt></p><p>不复制文件，直接从软件包存放位置导入.C和.H </p><p><strong>优点：体积小，比较节约硬盘空间</strong></p><p><strong>缺点： 复制到其他电脑上或者软件包位置改变，就需要修改相对应的路径</strong>  </p><p>自行选择方式即可</p><p>工程管理器的内容比较多，大部分都默认即可，这里讲述几个要点（如下图），更多选项后期详细讲述。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201103110636.png" alt></p><p>IDE有几种，如果你不用MDK-ARM，也可选择其他IDE。</p><p><strong>7.生成代码</strong><br>以上操作就基本配置完成了一个简单的Demo工程，只需要点击“生成代码”即可。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201103110847.png" alt></p><p><strong>8.添加代码</strong><br>当然，以上生成的代码还不够完善，需要<strong>添加自己的应用代码</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201103111935.png" alt></p><p>添加如上图这样一段代码，你开发板上LED就会间隔500ms变化一次（呈现闪烁状态）。</p><p>添加应用代码：</p><pre><code>HAL_Delay(500);HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);</code></pre><p><strong>提示：</strong><br><strong>1.</strong>延时500ms时间需要你时钟配置正确。</p><p><strong>2.</strong>LED对应引脚需要与你开发实际一致（本文以PA0为例）。</p><p><strong>3.</strong>生成的MDK-ARM工程，编译下载之后，默认是不会运行代码，需要重新复位一次才能运行，或你自己配置一下（如下图）。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
            <tag> cubeMX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>串口Isp下载原理</title>
      <link href="/2020/11/02/chuan-kou-isp-xia-zai-yuan-li/"/>
      <url>/2020/11/02/chuan-kou-isp-xia-zai-yuan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="如何用串口下载程序"><a href="#如何用串口下载程序" class="headerlink" title="如何用串口下载程序"></a>如何用串口下载程序</h1><h2 id="1-安装USB转串口驱动"><a href="#1-安装USB转串口驱动" class="headerlink" title="1.安装USB转串口驱动"></a>1.安装USB转串口驱动</h2><h3 id="ISP简介"><a href="#ISP简介" class="headerlink" title="ISP简介"></a>ISP简介</h3><blockquote><p>1、ISP（In-System Programming）在系统可编程，指电路板上的空白器件可以编程写入最终用户代码， 而不需要从电路板上取下器件，已经编程的器件也可以用ISP方式擦除或再编程。</p><p>2、ISP通过芯片内部的自举程序（即Bootloader，由芯片厂家烧写好，不得更改）来选定一种串行的外设，对芯片内部的FLASH进行编程。</p><p>3、最常用的ISP方式就是通过串口下载，最主要的优点就是成本低，缺点是只能用于下载程序，不能硬件仿真。</p><p>4、普通ISP和一键ISP，普通ISP在下载程序的时候需要手动配置BOOT的启动方式，而一键ISP则通过独特的硬件电路和上位机配合使用来达到一键下载的功能。</p></blockquote><h2 id="2-硬件连接"><a href="#2-硬件连接" class="headerlink" title="2.硬件连接"></a>2.硬件连接</h2><h3 id="安装USB转串口驱动-CH340"><a href="#安装USB转串口驱动-CH340" class="headerlink" title="安装USB转串口驱动 CH340"></a>安装USB转串口驱动 CH340</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201102212652.png" alt></p><h3 id="串口下载连接示意图"><a href="#串口下载连接示意图" class="headerlink" title="串口下载连接示意图"></a>串口下载连接示意图</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201102212827.png" alt></p><p>1、USB转串口模块在开发板上是一个独立的模块，可通过调帽与其他串口连接，USART1/2/3/4/5</p><p>2、只有USART1才具有串口下载的功能</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201102212943.png" alt></p><p>软件配置如下：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201102213104.png" alt></p><p>程序下载成功,<br>会自动运行，<br>如果不自动运行，手动按开发板的复位按键即可。</p><h2 id="3-ISP一键下载原理分析"><a href="#3-ISP一键下载原理分析" class="headerlink" title="3.ISP一键下载原理分析"></a>3.ISP一键下载原理分析</h2><table><thead><tr><th>BOOT0</th><th>BOOT1</th><th>启动方式</th></tr></thead><tbody><tr><td>0</td><td>X</td><td>内部FLASH</td></tr><tr><td>1</td><td>0</td><td>系统存储器（isp）</td></tr><tr><td>1</td><td>1</td><td>内部SRAM</td></tr></tbody></table><p><code>注意：开发板中的BOOT0和BOOT1均通过调帽接GND</code></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201102213533.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201102213620.png" alt></p><p>1、配置BOOT为ISP模式，BOOT1硬件固定为GND。RTS输出低，S8550导通，BOOT0被拉高。<br>2、复位，NRST为低，让系统重新启动进入ISP模式。DTR输出高，S8050导通，NRST被拉到跟RST一样的低电平。<br>3、系统进入ISP模式后，让BOOT0和NRST还原成原来的状态即可。（通过上位机控制RTS和DTR引脚实现）<br>4、ISP下载完毕之后，程序自动运行，（通过上位机控制RTS和DTR引脚实现）</p><h3 id="上位机需要这样设置"><a href="#上位机需要这样设置" class="headerlink" title="上位机需要这样设置"></a>上位机需要这样设置</h3><p>RTS低电平进入BootLoader，DTR高电平进入复位</p><p>232标准（mcuisp软件就是按照这个标准设计的）<br>逻辑1：-3<del>-15V，    逻辑0：+3</del>+15V<br>TTL标准<br>逻辑1：3.3V，          逻辑0：0V</p><p>USB转串口模块CH340G</p><p>USB电平转化为TTL电平</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32软件开发</title>
      <link href="/2020/10/30/stm32-ruan-jian-kai-fa/"/>
      <url>/2020/10/30/stm32-ruan-jian-kai-fa/</url>
      
        <content type="html"><![CDATA[<p><strong><em>stm32f103c8t6</em></strong></p><h1 id="MDK-Keil开发环境"><a href="#MDK-Keil开发环境" class="headerlink" title="MDK Keil开发环境"></a>MDK Keil开发环境</h1><p>链接有很详细的讲解：</p><p><a href="https://nandycooh.blog.csdn.net/article/details/80475394?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight" target="_blank" rel="noopener">下载地址</a></p><p><a href="https://blog.csdn.net/ChenGuiGan/article/details/80218875?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.edu_weight&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.edu_weight" target="_blank" rel="noopener">链接地址</a></p><h1 id="串口编程软件mcuisp"><a href="#串口编程软件mcuisp" class="headerlink" title="串口编程软件mcuisp"></a>串口编程软件mcuisp</h1><p><a href="http://www.downxia.com/downinfo/33043.html" target="_blank" rel="noopener">链接地址</a></p><h1 id="JLINK"><a href="#JLINK" class="headerlink" title="JLINK"></a>JLINK</h1><p>自行购买</p><h1 id="获得和理解固件库"><a href="#获得和理解固件库" class="headerlink" title="获得和理解固件库"></a>获得和理解固件库</h1><p>##获取固件库：</p><p><a href="https://lijj.xyz/2020/10/29/stm32-biao-zhun-ku-xia-zai/" target="_blank" rel="noopener">https://lijj.xyz/2020/10/29/stm32-biao-zhun-ku-xia-zai/</a></p><h2 id="固件库概述"><a href="#固件库概述" class="headerlink" title="固件库概述"></a>固件库概述</h2><p>在上面下载固件库解压后会有四个文件夹：</p><h3 id="文件树"><a href="#文件树" class="headerlink" title="文件树"></a>文件树</h3><p><strong>固件库可以理解记忆下关键目录</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201030192350.png" alt></p><p>创建工程</p><ul><li>建立如下工作目录和子目录，复制库文件</li></ul><blockquote><p>firstproject</p></blockquote><blockquote><blockquote><ul><li>application</li></ul></blockquote><blockquote><ul><li>bpdriver</li></ul></blockquote><blockquote><ul><li>object</li></ul></blockquote><blockquote><ul><li>stm32lib</li></ul></blockquote></blockquote><blockquote><blockquote><blockquote><ul><li>inc</li><li>m3</li><li>src</li></ul></blockquote></blockquote></blockquote><blockquote><p>复制内核文件和驱动支持文件，启动文件</p></blockquote><ul><li>Libraries\CMSIS\CoreSupport 目录下的 core_cm3.c和core_cm3.h复制到stm32lib\m3 中</li><li>Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x  目录下的 stm32f10x.h, system_stm32f10x.c, system_stm32f10x.h 复制到stm32lib\m3 中</li><li>Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x \startup\arm 下的启动代码startup_stm32f10x_hd.s也复制到application中,是程序开始的地方</li></ul><blockquote><p>复制设备驱动程序</p></blockquote><blockquote><p>复制外设中断函数文件和固件库配置文件</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stm32标准库下载</title>
      <link href="/2020/10/29/stm32-biao-zhun-ku-xia-zai/"/>
      <url>/2020/10/29/stm32-biao-zhun-ku-xia-zai/</url>
      
        <content type="html"><![CDATA[<h1 id="STM32-Standard-Peripheral-Libraries"><a href="#STM32-Standard-Peripheral-Libraries" class="headerlink" title="STM32 Standard Peripheral Libraries"></a>STM32 Standard Peripheral Libraries</h1><h2 id="固件库函数下载"><a href="#固件库函数下载" class="headerlink" title="固件库函数下载"></a>固件库函数下载</h2><p>下载链接：<a href="https://pan.baidu.com/s/1rt8rkA2-2WBrLeFelhpzqw" target="_blank" rel="noopener">https://pan.baidu.com/s/1rt8rkA2-2WBrLeFelhpzqw</a><br>提取码：p9i0<br>嫌麻烦的可以直接下载</p><h3 id="进入官网切换为中文"><a href="#进入官网切换为中文" class="headerlink" title="进入官网切换为中文"></a>进入官网切换为中文</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029211334.png" alt></p><h3 id="选择工具与软件-gt-嵌入式软件-gt-stm32微控制"><a href="#选择工具与软件-gt-嵌入式软件-gt-stm32微控制" class="headerlink" title="选择工具与软件->嵌入式软件->stm32微控制"></a>选择工具与软件-&gt;嵌入式软件-&gt;stm32微控制</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029211616.png" alt></p><h3 id="选择stm32标准外设软件库-gt-stm32054"><a href="#选择stm32标准外设软件库-gt-stm32054" class="headerlink" title="选择stm32标准外设软件库->stm32054"></a>选择stm32标准外设软件库-&gt;stm32054</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029211855.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029211946.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029212016.png" alt></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>截图工具Snipaste安装和使用</title>
      <link href="/2020/10/29/snipaste/"/>
      <url>/2020/10/29/snipaste/</url>
      
        <content type="html"><![CDATA[<p>软件下载：</p><p>Snipaste_32/64位中文版：【<span style="color: #008000;"><a style="color: #008000;" href="http://www.zhanshaoyi.com/12133.html" target="_blank" rel="noopener"><strong>点我下载</strong></a></span>】</p><p><strong>安装前须知</strong>：</p><p>1.Snipaste适用于<span style="color: #ff0000;">XP/Win7/8/10</span>系统，亲测可用！</p><p>2.本号提供的Snipaste为<span style="color: #ff0000;">免安装版</span>，解压即用，请勿移动或删除解压后的文件夹。</p><h3><strong>Snipaste WIN10 64</strong><strong>位安装步骤</strong>：</h3><p>1.先根据电脑系统位数下载对应Snipaste软件安装包到电脑磁盘<span style="color: #ff0000;">英文路径文件夹</span>下，并解压缩，然后双击打开Snipaste-1.16.1_x64文件夹</p><p></p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-1.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12137" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-1.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="680" height="159"></a></p><p>2.找到Snipaste.exe，鼠标右键选择【发送到】→【桌面快捷方式】，生成桌面图标，方便以后打开</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-2.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12138" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-2.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="680" height="791"></a></p><p>3.返回电脑桌面，找到Snipaste图标，鼠标右击选择【以管理员身份运行】</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-3.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12139" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-3.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="536" height="286"></a></p><p>4.在电脑桌面右下角弹出窗口提示：Snipaste正在运行，说明软件成功打开</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-4.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12134" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-4.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="455" height="125"></a></p><p>5.找到桌面右下角状态栏中的Snipaste小图标，鼠标右键选择【首选项】</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-5.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12140" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-5.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="382" height="356"></a></p><p>6.点击【快捷键】选项卡，默认按下【F1】来开始截图，若再按F3，截图就可将截图在桌面置顶显示了</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-6.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12141" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-6.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="545" height="485"></a></p><p>7.默认，按【F1】键后鼠标左键按住不放拖动即可截图，并支持对截图进行简单编辑</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-7.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12142" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-7.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="672" height="383"></a></p><p>Snipaste使用很简单，但同时也有一些较高级的用法，感兴趣的可以探索一下进一步你的工作效率。</p><p>转载自：<a href="http://www.zhanshaoyi.com/12136.html" target="_blank" rel="noopener">http://www.zhanshaoyi.com/12136.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Snipaste </tag>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git简述</title>
      <link href="/2020/10/29/git-jian-shu/"/>
      <url>/2020/10/29/git-jian-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="注册gitee账号"><a href="#注册gitee账号" class="headerlink" title="注册gitee账号"></a>注册gitee账号</h2><p><a href="https://blog.csdn.net/qq_43567345/article/details/105416642" target="_blank" rel="noopener">https://blog.csdn.net/qq_43567345/article/details/105416642</a></p><h2 id="git下载安装"><a href="#git下载安装" class="headerlink" title="git下载安装"></a>git下载安装</h2><p>这里有详细的安装步骤，按照上面一步步来就可以了<br><a href="https://blog.csdn.net/qq_32786873/article/details/80570783" target="_blank" rel="noopener">https://blog.csdn.net/qq_32786873/article/details/80570783</a></p><h2 id="git相关配置-下载安装完后需要做的"><a href="#git相关配置-下载安装完后需要做的" class="headerlink" title="git相关配置(下载安装完后需要做的)"></a>git相关配置(下载安装完后需要做的)</h2><p>第一次使用需要配置这些，以后就不需要了</p><p>配置个人的用户名称和电子邮件地址（全局设置）：</p><pre><code>git config --global user.name "人间灯火阑珊"git config --global user.email "1106656864@qq.com"</code></pre><p><em>下面这一条请忽略（解决gitee和github共存问题，在最后会提到）</em><br>配置个人的用户名称和电子邮件地址（局部设置）：</p><pre><code>git config  user.name "人间灯火阑珊"git config  user.email "1106656864@qq.com"</code></pre><h2 id="Git创建仓库"><a href="#Git创建仓库" class="headerlink" title="Git创建仓库"></a>Git创建仓库</h2><ul><li>桌面或者哪里随便新建一个文件夹</li><li>进入文件夹，右键git bash here,会出现一个命令框</li><li>输入<code>git init</code>,生成<code>.git</code>目录</li></ul><h2 id="ssh公钥设置"><a href="#ssh公钥设置" class="headerlink" title="ssh公钥设置"></a>ssh公钥设置</h2><p><strong><em>公钥其实可以不设置，设置后会更安全</em></strong></p><p>由于你的本地 Git 仓库和 GitHub 仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息：</p><p>使用以下命令生成 SSH Key：<br><code>$ ssh-keygen -t rsa -C "youremail@example.com"</code></p><p>后面的 <a href="mailto:your_email@youremail.com" target="_blank" rel="noopener">your_email@youremail.com</a> 改为你在 gitee 上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。</p><p>成功的话会在当前文件夹生成一个id_rsa.pub文件，进去，打id_rsa.pub，复制里面的 key。<br>回到 github 上，进入 Account =&gt; Settings（账户配置）。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://m.runoob.com/wp-content/uploads/2015/03/48840BF0-992F-4CCC-A388-15CB74819D88.jpg" alt></p><blockquote><p>左边选择 SSH and GPG keys，然后点击 New SSH key 按钮,title 设置标题，可以随便填，粘贴在你电脑上生成的 key</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://www.runoob.com/wp-content/uploads/2015/03/B0589847-A498-4415-8700-252BDE1B20C0.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://m.runoob.com/wp-content/uploads/2015/03/106AD534-A38A-47F3-88A3-B7BE3F2FEEF1.jpg" alt></p><h2 id="与gitee建立连接"><a href="#与gitee建立连接" class="headerlink" title="与gitee建立连接"></a>与gitee建立连接</h2><ul><li>命令行输入</li><li><code>git remote add origin https://gitee.com/the-light-of-the-world/test2.git</code>，后面加的是你的gitee仓库地址，origin是该新建远程库的名称。</li><li><code>git remote -v</code>查看关联的远程库</li></ul><h2 id="上传本地代码到gitee"><a href="#上传本地代码到gitee" class="headerlink" title="上传本地代码到gitee"></a>上传本地代码到gitee</h2><ul><li>按照下面代码一步步来</li><li><code>git add 1.txt</code> （1.txt为要上传的文件名）</li><li>*请忽略这句 ，<code>git add .</code>( 添加目录下所有发生改变的文件)</li><li><code>git commit -m "ljj"</code> (分号里面的为备注，自己随意)</li><li><code>git remote add origin https://gitee.com/the-light-of-the-world/test2.git</code> (后面地址为你gitee上面仓库地址)</li><li><code>git push -u origin master</code> （至此文件上传成功，到gitee上面的仓库就可以查看到刚上传的文件了）</li></ul><p><strong><em>至此相关步骤已经完成，后面是我自己遇到的一些问题的记录。</em></strong></p><hr><hr><hr><p>删除远程仓库</p><p>删除远程仓库你可以使用命令：</p><pre><code>git remote rm [别名]</code></pre><p>实例</p><pre><code>$ git remote -vorigin    git@github.com:tianqixin/runoob-git-test.git (fetch)origin    git@github.com:tianqixin/runoob-git-test.git (push)</code></pre><h2 id="添加仓库-origin2"><a href="#添加仓库-origin2" class="headerlink" title="添加仓库 origin2"></a>添加仓库 origin2</h2><pre><code>$ git remote -vorigin    git@github.com:tianqixin/runoob-git-test.git (fetch)origin    git@github.com:tianqixin/runoob-git-test.git (push)origin2    git@github.com:tianqixin/runoob-git-test.git (fetch)origin2    git@github.com:tianqixin/runoob-git-test.git (push)</code></pre><h2 id="删除仓库-origin2"><a href="#删除仓库-origin2" class="headerlink" title="删除仓库 origin2"></a>删除仓库 origin2</h2><pre><code>$ git remote rm origin2$ git remote -vorigin    git@github.com:tianqixin/runoob-git-test.git (fetch)origin    git@github.com:tianqixin/runoob-git-test.git (push)</code></pre><p>##下载码云代码<br>新建一个目录，从码云上把上传的代码下载下来：</p><pre><code>git clone https://gitee.com/xxxxx/demo.git</code></pre><blockquote><p>关于gitee和github在同一台电脑共存的相关问题</p></blockquote><p>首先，一开始去连接一个远程库的时候都会用git生成一个ssh公钥用于安全连接gitee，后来的摸索中发现就先没生成公钥去连接也是可以的，可能就是安全性得不到保障。</p><p>有些东西我也没有搞懂后面会进一步更新。</p><p>就目前而言，我的github和gitee用的是同一个ssh公钥暂时没发生什么问题，<br>一切正常。</p><p>这里了附上连接有对ssh公钥的详细描述：<br><a href="https://blog.csdn.net/narutomst/article/details/106836495" target="_blank" rel="noopener">https://blog.csdn.net/narutomst/article/details/106836495</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 野生技术产业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【STM32】STM32 CubeMx使用教程一--安装教程</title>
      <link href="/2020/10/28/stm32/"/>
      <url>/2020/10/28/stm32/</url>
      
        <content type="html"><![CDATA[<p>#一、STM32CubeMX 简介</p><p>&nbsp;1、STM32CubeMX 是 ST 意法半导体近几年来大力推荐的STM32 芯片图形化配置工具，目的就是为了方便开发者， 允许用户使用图形化向导生成C 初始化代码，可以大大减轻开发工作，时间和费用，提高开发效率。STM32CubeMX几乎覆盖了STM32 全系列芯片。&nbsp;</p> <p>&nbsp;</p> <p>在CubeMX上，通过傻瓜化的操作便能实现相关配置，最终能够生成C语言代码，支持多种工具链，比如MDK、IAR For ARM、TrueStudio等&nbsp; 省去了我们配置各种外设的时间，大大的节省了时间</p> <p>&nbsp;</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdn.net/20161031103050516" alt></p><p>安装CubeMx一共需要三个</p> <ul><li>&nbsp;<strong>JRE </strong>（Java Runtime Environment）&nbsp;&nbsp;Java运行环境&nbsp;运行<em>JAVA</em>程序所必须的环境的集合</li><li>&nbsp;<strong>STM32CubeMX</strong></li><li><strong>HAL库&nbsp; &nbsp;</strong>STM32 HAL固件库&nbsp; &nbsp;ST官方推出的另一套库</li></ul><h3><a name="t1"></a><a name="t1"></a><span style="color:#86ca5e;"><strong>1安装JRE</strong></span></h3> <p>由于 STM32CubeMX 软件是基于 JAVA 环境运行的，所以需要安装 JRE （Java Runtime Environment）才能使用，&nbsp;</p> <p>官网：&nbsp;&nbsp;<a href="https://www.java.com/en/download/manual.jsp" target="_blank" rel="noopener">https://www.java.com/en/download/manual.jsp</a></p> <p>百度云：<a href="https://pan.baidu.com/s/1WD5E4enEZ_mw0-NGBl_bUw" target="_blank" rel="noopener">https://pan.baidu.com/s/1WD5E4enEZ_mw0-NGBl_bUw</a> 提取码: e8gs&nbsp; &nbsp; (定时更新最新版本)</p> <p>&nbsp;</p> <p>1点击安装</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808215245694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="546" height="297"></p> <p>2 修改路径 点下一步</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/2019080821543193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="547" height="297"></p> <p>3 等待安装完成，关闭界面</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808215501606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="546" height="296"></p> <p>&nbsp;</p> <h3><a name="t2"></a><a name="t2"></a><span style="color:#86ca5e;">2安装<strong>STM32CubeMX</strong></span></h3> <p>&nbsp;官网：<a href="http://www.st.com/stm32cubemx" target="_blank" rel="noopener">www.st.com/stm32cubemx</a></p> <p>百度云：<a href="https://pan.baidu.com/s/1dm83PbIsq7Vk9bAyFNinag" target="_blank" rel="noopener">https://pan.baidu.com/s/1dm83PbIsq7Vk9bAyFNinag</a> 提取码: wjmd&nbsp;</p> <p>&nbsp;</p> <p>官网下载：</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808221316432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="537" height="302"></p> <p>在官网下载需要注册下ST官网账号,目前最新为5.3.0版本，不想在官网下可以在百度云盘下载，</p> <p>&nbsp;</p> <p>1打开安装包&nbsp;</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808215815695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="532" height="400"></p> <p>2同意协议，下一步</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808220044650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="531" height="399"></p> <p>3 勾选第一个即可，第二个选项是是否同意ST公司收集你的个人使用信息等。</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808220146434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="531" height="399"></p> <p>4 点YES&nbsp; 这句话是安装本软件可能会与文件夹之前文件冲突，导致文件夹之前文件丢失 是否继续&nbsp;</p> <p>点继续即可</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808220302910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="558" height="331"></p> <p>5 直接点NEXT，其他不用设置 之后开始安装</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808220742381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="567" height="426"></p> <p>6 安装完成，点Done退出</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808220846664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="566" height="425"></p> <p>&nbsp;</p> <h3><a name="t3"></a><a name="t3"></a><span style="color:#86ca5e;"><strong>3安装HAL库</strong></span></h3> <p>什么是HAL固件库？</p> <p>STM32 HAL固件库是Hardware Abstraction Layer的缩写，中文名称是：硬件抽象层。HAL库是ST公司为STM32的MCU最新推出的抽象层嵌入式软件，为更方便的实现跨STM32产品的最大可移植性。HAL库的推出，可以说ST也慢慢的抛弃了原来的标准固件库，这也使得很多老用户不满。但是HAL库推出的同时，也加入了很多第三方的中间件，有RTOS，USB，TCP / IP和图形等等。</p> <p>&nbsp;</p> <p>和标准库对比起来，STM32的HAL库更加的抽象，ST最终的目的是要实现在STM32系列MCU之间无缝移植，甚至在其他MCU也能实现快速移植。</p> <p>并且从16年开始，ST公司就逐渐停止了对标准固件库的更新，转而倾向于HAL固件库和 Low-layer底层库的更新，停止标准库更新，也就表示了以后使用STM32CubeMX配置HAL/LL库是主流配置环境；</p> <p>&nbsp;</p> <p>HAL库，有<strong>在线安装、离线安装</strong>两种方式。</p> <p>&nbsp;</p> <h3 id="3-3-1-在线安装"><a name="t4"></a><a name="t4"></a>在线安装</h3> <p>打开安装好的 STM32CubeMX 软件&nbsp; 点上面的Help -&gt; Manage embedded software packages&nbsp;</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808222604905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="714" height="402"></p> <p>会跳出来一个选择型号界面&nbsp;&nbsp; 勾选上你要安装的HAL库， 点击“Install Now” 直到安装成功。 如下图：</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808223241593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="714" height="402"></p> <h3><a name="t5"></a><a name="t5"></a>离线安装</h3> <p>离线安装需要下载安装包，这里提供百度云和ST官方下载方式&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>&nbsp;PS：建议在线安装&nbsp; 速度快，又稳定</strong></p> <p>官网：<a href="http://www.st.com/stm32cubemx" target="_blank" rel="noopener">www.st.com/stm32cubemx</a></p> <p>软件下载旁边一栏就是HAL库下载&nbsp; 下载对应芯片的安装包</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808221822509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="524" height="258"></p> <p>&nbsp;</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190808221843712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="542" height="424"></p> <p>&nbsp;</p> <p>百度云：<a href="https://pan.baidu.com/s/1dm83PbIsq7Vk9bAyFNinag" target="_blank" rel="noopener">https://pan.baidu.com/s/1dm83PbIsq7Vk9bAyFNinag</a> 提取码: wjmd&nbsp; &nbsp;&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>1直接导入安装包&nbsp; &nbsp;Help -&gt; Manage embedded software packages -&gt;From Local&nbsp; 选择离线包即可</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190809085042881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="510" height="372"></p> <p>2直接解压</p> <p><strong>Help-&gt;Updater Settings...&nbsp; &nbsp; &nbsp;可以选择HAL库安装包路径 </strong>，默认在C盘 可以自行修改</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/20190809084531361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="714" height="402"></p> <p>解压到相对应路径即可</p> <p><img alt class="has" src="https://img-blog.csdnimg.cn/2019080908584173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="768" height="361"></p> <p>&nbsp;</p> <p>到此，恭喜你的STM32 CubeMx安装成功了。</p> <script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo文件参数及其相关说明</title>
      <link href="/2020/10/28/hexo-wen-jian-can-shu-ji-qi-xiang-guan-shuo-ming/"/>
      <url>/2020/10/28/hexo-wen-jian-can-shu-ji-qi-xiang-guan-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h2>1.        _config.yml</h2><p><em>注意：这里面的东西不一定都要设置的，如果全部设置也是完全可以的，甚至你没必要在这个_config.yml设置，你可以自定义多个</em></p><p><strong>SITE</strong><br><code>title</code>                    网站标题<br><code>subtitle</code>             网站副标题<br><code>description</code>              网站描述,告诉搜索引擎站点的简单描述<br><code>keywords</code>             关键字,便于搜索引擎的搜索<br><code>author</code>                   作者名字，用于显示文章的作者<br><code>language</code>             网站使用的语言,默认是英语，可设置的语言见<a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes" target="_blank" rel="nofollow">语言列表</a><br><code>timezone</code>             网站时区，Hexo 默认使用电脑的时区，可设置的时区见<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="nofollow">时区列表</a></p><p><strong>URL</strong><br><code>url</code>                       网址<br><code>root</code>                      网站根目录<br><code>permalink</code>                 文章的永久链接格式<br><code>permalink_defaults</code>        设置永久链接中各部分的默认值</p><p><strong>DIRECTORY</strong><br><code>source_dir</code>                资源文件夹，这个文件夹用来存放内容，默认是source<br><code>public_dir</code>                公共文件夹，这个文件夹用于存放生成的站点文件，默认是public<br><code>tag_dir</code>                   标签文件夹，默认是tags<br><code>archive_dir</code>               归档文件夹，默认是archives<br><code>category_dir</code>              分类文件夹，默认是categories<br><code>code_dir</code>                  Include code 文件夹，默认是downloads/code<br><code>i18n_dir</code>                  国际化（i18n）文件夹，默认是lang<br><code>skip_render</code>               跳过指定文件的渲染。比如source/mypage/hello.md 将会输出为index.html，而source/mypage/code.js不会渲染它，更多请移步我的其他文章</p><p><strong>WRITING</strong><br><code>new_post_name</code>             新文章的文件名称格式  <code>:title.md</code>或者<code>:year-:month-:day-:title.md</code><br><code>default_layout</code>            预设布局,默认是post<br><code>auto_spacing</code>              在中文和英文之间加入空格，默认是false<br><code>titlecase</code>                 把标题转换为title case,默认是false<br><code>external_link</code>             在新标签中打开链接,默认是true<br><code>filename_case</code>             把文件名称转换为小写(1)或大写(2),默认是0不转换<br><code>render_drafts</code>             显示草稿，默认是false<br><code>post_asset_folder</code>         启动资源文件夹，默认是 false，表示source文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在source/images 文件夹中。<br><code>relative_link</code>             把链接改为与根目录的相对位址，默认是false，默认情况下，Hexo生成的超链接都是绝对地址。例如，如果你的网站域名为<a href="http://example.com" target="_blank" rel="nofollow">example.com</a>,您有一篇文章名为hello，那么绝对链接可能像这样：<a href="http://example.com/hello.html" target="_blank" rel="nofollow">http://example.com/hello.html</a>，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点,一般建议用绝对路径<br><code>future</code>                    显示未来的文章，默认是true<br><code>highlight</code>                 代码块的设置<br>&nbsp; &nbsp;<code>enable: true</code> 启动高亮<br>&nbsp; &nbsp;<code>line_number: true</code> 显示行号<br>&nbsp; &nbsp;<code>auto_detect: false</code> 自动检查<br>&nbsp; &nbsp;<code>tab_replace:</code> 缩进大小</p><p><strong>HOME PAGE SETTING</strong><br><code>path</code>                      博客默认页面的路径，默认为空<br><code>per_page</code>                  主页中每页显示的贴子，0表示禁止分页<br><code>order_by</code>                  按时间倒序排列</p><p><strong>CATEGORY &amp; TAG</strong><br><code>default_category</code>          默认分类，默认为没有分类uncategorized<br><code>category_map</code>              分类别名，默认为空<br><code>tag_map</code>                   标签别名，默认为空</p><p><strong>DATE / TIME FORMAT</strong><br><code>date_format</code>               日期格式    YYYY-MM-DD<br><code>time_format</code>               时间格式    H:mm:ss<br>按照<a href="http://momentjs.com/docs/#/displaying/format/" target="_blank" rel="nofollow">格式列表</a>设置格式</p><p><strong>PAGINATION</strong><br><code>per_page</code>                  每页显示的文章量（0表示关闭分页），默认是10<br><code>pagination_dir</code>            分页目录，默认是page</p><p><strong>EXTENSIONS</strong><br><code>plugins</code>                   插件，<a href="https://hexo.io/plugins/" target="_blank" rel="nofollow">插件列表</a><br><code>theme</code>                     当前主题名称,为false时禁用主题,<a href="https://hexo.io/themes/" target="_blank" rel="nofollow">主题列表</a><br><code>theme_config</code>              自定义主题配置，这和全局的_config.yml文件是分离的，你可以写themes/my-theme/_config.yml，如果全局的_config.yml文件是<br><code>theme_config:</code><br>&nbsp;&nbsp;<code>bio: "hello_world"</code></p><p>而在你的<code>themes/my-theme/_config.yml</code>是<br><code>bio: "HELLO_WORLD"</code><br><code>logo: "hi.png"</code><br>那么结果是<br><code>bio: "hello_world"</code><br><code>logo: "hi.png"</code><br>也就是说如果在<code>themes/my-theme/_config.yml</code>中修改了全局<code>_config.yml</code>中的定义的参数，那么是无效的，但是可以添加全局<code>_config.yml</code>中没有的参数，如这里的logo</p><p><strong>DEPLOYMENT</strong><br><code>deploy:</code>                   部署格式如下<br>&nbsp; &nbsp;<code>type: git</code><br>&nbsp; &nbsp;<code>repository: https://github.com/xxx/xxx.github.io.git</code><br>&nbsp; &nbsp;<code>branch: master</code></p><p><strong>INCLUDE/EXCLUDE FILES OR FOLDERS</strong><br>设置键值使hexo显式或忽略某些文件<br><code>include</code><br>&nbsp;<code>-Impo</code>               包含Impo这个文件，include参数一般不使用，需要包含的文件hexo都做好了<br><code>exclude</code><br>&nbsp;<code>-.Igno</code>              忽略.Igno这个文件</p><p><strong>USING AN ALTERNATE CONFIG</strong><br>自定义配置文件，使用<code>hexo server</code>启动时是默认加载_config.yml里面的配置，如果我们自定义文件custom.yml，那么启动时使用<code>hexo server --config custom.yml</code>,甚至是多个自定义文件custom1.yml,custom2.json,启动时使用<code>hexo server --config custom1.yml,custom2.json</code>，注意默认后面文件的优先级高，也就是先加载.json，多个自定义文件可以写入<code>_multiconfig.yml</code>中，同样最后一个文件优先加载</p><hr><h2>2.        package.json</h2><p>这是一些应用程序的信息，json格式，建议不要改动</p><hr><h2>3.        scaffolds</h2><p>这是一个模板文件夹，当你新写了一片文章时，其显示格式都会以scaffolds中post.md的内容来加载。</p><hr><h2>4.        source</h2><p>这是一个资源文件夹。以_开头的文件都会被忽略，.md和.html文件会被解析并放到public，其他文件也会被拷贝过去 (如果文件可以被渲染的话，会经过解析然后储存到 public 文件夹，否则会直接拷贝到 public 文件夹)</p><hr><h2>5.        themes</h2><p>主题文件夹，这部分请移步到其他文章。</p><hr><h2>6.        关于文件名</h2><p>Hexo 默认以标题做为文件名称，编辑 new_post_name 参数来改变默认的文件名称,提供以下参数</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-css"><code class="  language-css"><span class="token punctuation">:</span>title    <span class="token property">标题（小写，空格将会被替换为短杠）</span><span class="token punctuation">:</span>year 建立的年份，比如， 2015<span class="token punctuation">:</span>month    建立的月份（有前导零），比如， 04<span class="token punctuation">:</span>i_month  建立的月份（无前导零），比如， 4<span class="token punctuation">:</span>day  建立的日期（有前导零），比如， 07<span class="token punctuation">:</span>i_day    建立的日期（无前导零），比如， 7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>7.        关于模板</h2><p>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如：<code>hexo new photo "My Gallery"</code>，在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md模板，并根据其内容建立文章，默认使用 _config.yml 中的 default_layout 参数post代替，模板文件中的参数有</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-undefined"><code class="  language-undefined">layout    布局title 标题date  文件建立日期<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>8.        关于Front-matter</h2><p>Front-matter 是文件最上方以 --- 分隔的区域，用于指定个别文件的变量，举例来说：</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-undefined"><code class="  language-undefined">title: Hello Worlddate: 2013/7/13 20:46:25---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></blockquote><p>以下是预先定义的参数，在模板中使用这些参数值并加以利用。</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-bash"><code class="  language-bash">参数           描述                   默认值layout       布局   title        标题date         建立日期              文件建立日期updated      更新日期              文件更新日期comments     开启文章的评论功能     truetags         标签（不适用于分页）categories   分类（不适用于分页）permalink    覆盖文章网址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>9.        关于分类和标签</h2><blockquote><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次</p></blockquote><p>示例</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-undefined"><code class="  language-undefined">categories:- Diarytags:- PS3- Games<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></blockquote><p><strong>注意</strong> 下面的方法会使分类Life成为Diary的子分类，而不是并列分类</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-undefined"><code class="  language-undefined">categories:- Diary- Life<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>10.        关于.json和.yml配置文件的区别</h2><p>两者都可以来编写front-matter,只要将<code>---</code>换成<code>;;;</code>即可<br>例如</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-bash"><code class="  language-bash">"title": "Hello World","date": "2013/7/13 20:46:25";;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>11.        关于文章内部的标签引用</h2><p>1，引用块<br>格式</p><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-bash"><code class="  language-bash"><blockquote><p>content</p><footer><strong>[author[</strong><cite>source]] [link] [source_link_title]</cite></footer></blockquote><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>示例1</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-dart"><code class="  language-dart"><span class="token punctuation">{</span><span class="token operator">%</span> blockquote <span class="token metadata symbol">@DevDocs</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>twitter<span class="token punctuation">.</span>com<span class="token operator">/</span>devdocs<span class="token operator">/</span>status<span class="token operator">/</span><span class="token number">356095192085962752</span> <span class="token operator">%</span><span class="token punctuation">}</span>NEW<span class="token punctuation">:</span> DevDocs now comes <span class="token keyword">with</span> syntax highlighting<span class="token punctuation">.</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>devdocs<span class="token punctuation">.</span>io<span class="token punctuation">{</span><span class="token operator">%</span> endblockquote <span class="token operator">%</span><span class="token punctuation">}</span><p>输出</p><p>NEW<span class="token punctuation">:</span> DevDocs now comes <span class="token keyword">with</span> syntax highlighting<span class="token punctuation">.</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>devdocs<span class="token punctuation">.</span>io</p><p><span class="token metadata symbol">@DevDocst</span><span class="token operator">–</span>witter<span class="token punctuation">.</span>com<span class="token operator">/</span>devdocs<span class="token operator">/</span>status<span class="token operator">/</span><span class="token number">356095192085962752</span><br><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre></div><p></p></blockquote><p>示例2</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-csharp"><code class="  language-csharp"><span class="token punctuation">{</span><span class="token operator">%</span> blockquote <span class="token class-name">Seth</span> <span class="token class-name">Godin</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>sethgodin<span class="token punctuation">.</span>typepad<span class="token punctuation">.</span>com<span class="token operator">/</span>seths_blog<span class="token operator">/</span><span class="token number">2009</span><span class="token operator">/</span><span class="token number">07</span><span class="token operator">/</span>welcome<span class="token operator">-</span>to<span class="token operator">-</span>island<span class="token operator">-</span>marketing<span class="token punctuation">.</span>html <span class="token class-name">Welcome</span> to <span class="token class-name">Island</span> Marketing <span class="token operator">%</span><span class="token punctuation">}</span><span class="token class-name">Every</span> interaction <span class="token keyword">is</span> both precious and an opportunity to delight<span class="token punctuation">.</span><span class="token punctuation">{</span><span class="token operator">%</span> endblockquote <span class="token operator">%</span><span class="token punctuation">}</span><p>输出</p><p><span class="token class-name">Every</span> interaction <span class="token keyword">is</span> both precious and an opportunity to delight<span class="token punctuation">.</span></p><p><span class="token class-name">Seth</span> <span class="token class-name">GodinWelcome</span> to <span class="token class-name">Island</span> Marketing<br><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre></div><p></p></blockquote><p><strong>注意：对应关系</strong></p><p>2，代码块</p><p>示例1</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-bash"><code class="  language-bash"><pre><code>alert('Hello World!');</code></pre><p>输出</p><p>alert(‘Hello World!’);<br><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre></div><p></p></blockquote><p>3，在文章中插入指定大小的图片。</p><p><code><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/.io//to/image" class="[class names]" title="[width] [height] [title text [alt text]]"></code></p><hr><h2>12.        关于Asset资源文件夹</h2><p>资源（Asset）代表 source 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 source/images 文件夹中。然后通过类似于 <code>[图片上传失败...(image-22899b-1541302947970)]</code> 的方法访问它们。<br>当资源文件管理功能打开后(<code>post_asset_folder: true</code>)，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code>命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p><hr><h2>13.         关于图片的显示</h2><p>当你打开文章资源文件夹功能后，你把一个 example.jpg 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>[图片上传失败...(image-9a9526-1541302947971)]</code> ，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作）<br>正确的引用图片方式是使用下列的标签插件而不是 markdown ：<code></code>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p><hr><h2>14.         关于Permalinks永久链接</h2><p>在 _config.yml 配置中调整网站的永久链接或者在每篇文章的 Front-matter 中指定。<br>除了下列变量外，您还可使用 Front-matter 中的所有属性。</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-css"><code class="  language-css">变量            <span class="token property">描述</span><span class="token punctuation">:</span>year          文章的发表年份（4 <span class="token property">位数）</span><span class="token punctuation">:</span>month         文章的发表月份（2 <span class="token property">位数）</span><span class="token punctuation">:</span>i_month       <span class="token property">文章的发表月份（去掉开头的零）</span><span class="token punctuation">:</span>day           文章的发表日期 <span class="token punctuation">(</span>2 位数<span class="token punctuation">)</span><span class="token punctuation">:</span>i_day         <span class="token property">文章的发表日期（去掉开头的零）</span><span class="token punctuation">:</span>title         <span class="token property">文件名称</span><span class="token punctuation">:</span>post_title    <span class="token property">文章标题</span><span class="token punctuation">:</span>id            文章 <span class="token property">ID</span><span class="token punctuation">:</span>category      分类。如果文章没有分类，则是 default_category 配置信息。permalink_defaults 参数调整永久链接中各变量的默认值：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></blockquote><p>示例<br>假设 source/_posts 文件夹中有个 hello-world.md，包含以下内容：</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-ruby"><code class="  language-ruby">title<span class="token punctuation">:</span> <span class="token constant">Hello</span> <span class="token constant">World</span>date<span class="token punctuation">:</span> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">17</span><span class="token punctuation">:</span><span class="token number">01</span><span class="token punctuation">:</span><span class="token number">34</span>categories<span class="token punctuation">:</span><span class="token operator">-</span> foo<span class="token operator">-</span> bar参数                             结果<span class="token symbol">:year</span><span class="token operator">/</span><span class="token symbol">:month</span><span class="token operator">/</span><span class="token symbol">:day</span><span class="token operator">/</span><span class="token symbol">:title</span><span class="token operator">/</span>       <span class="token number">2013</span><span class="token operator">/</span><span class="token number">07</span><span class="token operator">/</span><span class="token number">14</span><span class="token operator">/</span>hello<span class="token operator">-</span>world<span class="token symbol">:year</span><span class="token operator">-</span><span class="token symbol">:month</span><span class="token operator">-</span><span class="token symbol">:day</span><span class="token operator">-</span><span class="token symbol">:title</span><span class="token punctuation">.</span>html   <span class="token number">2013</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token operator">-</span>hello<span class="token operator">-</span>world<span class="token punctuation">.</span>html<span class="token symbol">:category</span><span class="token operator">/</span><span class="token symbol">:title</span>                foo<span class="token operator">/</span>bar<span class="token operator">/</span>hello<span class="token operator">-</span>world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>15.               关于多语种</h2><p>修改 new_post_name 和 permalink 参数，如下：</p><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-ruby"><code class="  language-ruby">new_post_name<span class="token punctuation">:</span> <span class="token symbol">:lang</span><span class="token operator">/</span><span class="token symbol">:title</span><span class="token punctuation">.</span>mdpermalink<span class="token punctuation">:</span> <span class="token symbol">:lang</span><span class="token regex">/:title/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>建立文章时，文章会被储存到：</p><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewbox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"/></svg></i></button><pre class="line-numbers  language-csharp"><code class="  language-csharp">hexo <span class="token keyword">new</span> <span class="token string">"Hello World"</span> <span class="token operator">--</span>lang en<span class="token preprocessor property"># =source/_posts/en/Hello-World.md</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>而网址会是：<br><code>http://localhost:4000/en/hello-world/</code></p><hr><h2>16.                 关于Themes主题设置</h2><p>在 themes 文件夹内，下载<a href="https://hexo.io/themes/" target="_blank" rel="nofollow">主题</a>，并修改 _config.yml 内的 theme 设定，即可切换主题。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PROTEUS原理图元器件库详细说明</title>
      <link href="/2020/10/28/dan-pian-ji/"/>
      <url>/2020/10/28/dan-pian-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="Proteus-元件名称对照1"><a href="#Proteus-元件名称对照1" class="headerlink" title="Proteus 元件名称对照1"></a>Proteus 元件名称对照1</h1><p><strong><em>元件名称 中文名 说明</em></strong></p><p>7407        驱动门      </p><p>1N914        二极管      </p><p>74Ls00        与非门     </p><p>74LS04        非门     </p><p>74LS08        与门      </p><p>74LS390        TTL 双十进制计数器     </p><p>7SEG        4针BCD-LED 输出从0-9 对应于4根线的BCD码</p><p>7SEG        3-8译码器电路BCD-7SEG[size=+0]转换电路      </p><p>ALTERNATOR 交流发电机      </p><p>AMMETER-MILLI mA安培计      </p><p>AND        与门      </p><p>BATTERY        电池/电池组      </p><p>BUS        总线      </p><p>CAP        电容      </p><p>CAPACITOR 电容器      </p><p>CLOCK        时钟信号源      </p><p>CRYSTAL        晶振     </p><p>D-FLIPFLOP D触发器      </p><p>FUSE        保险丝      </p><p>GROUND        地     </p><p>LAMP        灯 </p><p>LED-RED        红色发光二极管     LM016L        2行16列液晶 可显示2行16列英文字符，有8位数据总线D0-D7，RS，R/W，EN三个控制端口（共14线），工作电压为5V。没背光，和常用的1602B功能和引脚一样（除了调背光的二个线脚）</p><p>LOGIC ANALYSER 逻辑分析器<br>LOGICPROBE 逻辑探针<br>LOGICPROBE[BIG] 逻辑探针 用来显示连接位置的逻辑状态<br>LOGICSTATE 逻辑状态 用鼠标点击,可改变该方框连接位置的逻辑状态<br>LOGICTOGGLE 逻辑触发<br>MASTERSWITCH 按钮 手动闭合,立即自动打开<br>MOTOR        马达<br>OR        或门<br>POT-LIN        三引线可变电阻器<br>POWER        电源<br>RES        电阻<br>RESISTOR 电阻器<br>SWITCH        按钮 手动按一下一个状态<br>SWITCH-SPDT 二选通一按钮<br>VOLTMETER 伏特计<br>VOLTMETER-MILLI mV伏特计<br>VTERM        串行口终端<br>Electromechanical 电机<br>Inductors 变压器<br>Laplace Primitives 拉普拉斯变换<br>Memory Ics<br>Microprocessor Ics<br>Miscellaneous 各种器件 AERIAL-天线；ATAHDD；ATMEGA64；BATTERY；CELL；CRYSTAL-晶振；FUSE；METER-仪表；<br>Modelling Primitives 各种仿真器件 是典型的基本元器模拟，不表示具体型号，只用于仿真，没有PCB<br>Optoelectronics 各种发光器件 发光二极管，LED，液晶等等<br>PLDs &amp; FPGAs<br>Resistors 各种电阻<br>Simulator Primitives 常用的器件<br>Speakers &amp; Sounders<br>Switches &amp; Relays 开关，继电器，键盘<br>Switching Devices 晶阊管<br>Transistors 晶体管（三极管，场效应管）<br>TTL 74 series<br>TTL 74ALS series<br>TTL 74AS series<br>TTL 74F series<br>TTL 74HC series<br>TTL 74HCT series<br>TTL 74LS series<br>TTL 74S series<br>Analog Ics 模拟电路集成芯片<br>Capacitors 电容集合<br>CMOS 4000 series<br>Connectors 排座，排插<br>Data Converters ADC,DAC<br>Debugging Tools 调试工具</p><h2 id="ECL-10000-Series"><a href="#ECL-10000-Series" class="headerlink" title="ECL 10000 Series"></a>ECL 10000 Series</h2><h1 id="PROTEUS元件库元件名称及中英对照"><a href="#PROTEUS元件库元件名称及中英对照" class="headerlink" title="PROTEUS元件库元件名称及中英对照"></a>PROTEUS元件库元件名称及中英对照</h1><p>AND  与门<br>ANTENNA 天线<br>BATTERY 直流电源<br>BELL 铃,钟<br>BVC 同轴电缆接插件<br>BRIDEG 1 整流桥(二极管)<br>BRIDEG 2 整流桥(集成块)<br>BUFFER 缓冲器<br>BUZZER 蜂鸣器<br>CAP 电容<br>CAPACITOR 电容<br>CAPACITOR POL 有极性电容<br>CAPVAR 可调电容<br>CIRCUIT BREAKER 熔断丝<br>COAX 同轴电缆<br>CON 插口<br>CRYSTAL 晶体整荡器<br>DB 并行插口<br>DIODE 二极管<br>DIODE SCHOTTKY 稳压二极管<br>DIODE VARACTOR 变容二极管<br>DPY_3-SEG 3段LED<br>DPY_7-SEG 7段LED<br>DPY_7-SEG_DP 7段LED(带小数点)<br>ELECTRO 电解电容<br>FUSE 熔断器<br>INDUCTOR 电感<br>INDUCTOR IRON 带铁芯电感<br>INDUCTOR3 可调电感<br>JFET N N沟道场效应管<br>JFET P P沟道场效应管<br>LAMP 灯泡<br>LAMP NEDN 起辉器<br>LED 发光二极管<br>METER 仪表<br>MICROPHONE 麦克风<br>MOSFET MOS管<br>MOTOR AC 交流电机<br>MOTOR SERVO 伺服电机<br>NAND 与非门<br>NOR 或非门<br>NOT 非门<br>NPN NPN三极管<br>NPN-PHOTO 感光三极管<br>OPAMP 运放<br>OR 或门<br>PHOTO 感光二极管<br>PNP 三极管<br>NPN DAR NPN三极管<br>PNP DAR PNP三极管<br>POT 滑线变阻器<br>PELAY-DPDT 双刀双掷继电器<br>RES1.2 电阻<br>RES3.4 可变电阻<br>RESISTOR BRIDGE ? 桥式电阻<br>RESPACK ? 电阻<br>SCR 晶闸管<br>PLUG ? 插头<br>PLUG AC FEMALE 三相交流插头<br>SOCKET ? 插座<br>SOURCE CURRENT 电流源<br>SOURCE VOLTAGE 电压源<br>SPEAKER 扬声器<br>SW ? 开关<br>SW-DPDY ? 双刀双掷开关<br>SW-SPST ? 单刀单掷开关<br>SW-PB 按钮<br>THERMISTOR 电热调节器<br>TRANS1 变压器<br>TRANS2 可调变压器<br>TRIAC ? 三端双向可控硅<br>TRIODE ? 三极真空管<br>VARISTOR 变阻器<br>ZENER ? 齐纳二极管<br>DPY_7-SEG_DP 数码管</p><h1 id="SW-PB-开关"><a href="#SW-PB-开关" class="headerlink" title="SW-PB 开关"></a>SW-PB 开关</h1><p>##PROTEUS原理图元器件库详细说明<br>Device.lib           包括电阻、电容、二极管、三极管和PCB的连接器符号<br>ACTIVE.LIB           包括虚拟仪器和有源器件<br>DIODE.LIB          包括二极管和整流桥<br>DISPLAY.LIB       包括LCD、LED<br>BIPOLAR.LIB       包括三极管<br>FET.LIB                 包括场效应管<br>ASIMMDLS.LIB    包括模拟元器件<br>VALVES .LIB           包括电子管<br>ANALOG.LIB           包括电源调节器、运放和数据采样IC<br>CAPACITORS.LIB 包括电容<br>COMS.LIB             包括   4000系列<br>ECL.LIB                包括ECL10000系列<br>MICRO.LIB             包括 通用微处理器<br>OPAMP.LIB              包括 运算放大器<br>RESISTORS.LIB    包括 电阻<br>FAIRCHLD .LIB        包括FAIRCHLD 半导体公司的分立器件<br>LINTEC.LIB             包括 LINTEC公司的运算放大器<br>NATDAC.LIB          包括 国家半导体公司的数字采样器件<br>NATOA.LIB             包括 国家半导体公司 的运算放大器<br>TECOOR.LIB          包括TECOOR公司的 SCR 和TRIAC<br>TEXOAC.LIB              包括 德州仪器公司的运算放大器和比较器<br>ZETEX .LIB                 包括ZETEX 公司的分立器件 </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proteus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫</title>
      <link href="/2020/10/27/python-pa-chong/"/>
      <url>/2020/10/27/python-pa-chong/</url>
      
        <content type="html"><![CDATA[<p><strong>养成习惯，先赞后看！！！</strong><br> 不用于任何商业价值，只是自己娱乐。<br> 否则 <strong>爬虫爬的好，牢饭吃到饱。</strong><br> 这是我们这次爬取的网址：<a href="https://www.vmgirls.com/" target="_blank" rel="noopener">https://www.vmgirls.com/</a></p> <p></p><div class="toc"> <h3><a name="t0"></a><a name="t0"></a>爬取并下载唯美女生</h3> <ul><li><a href="#1_6" target="_self">1.准备工作</a></li><li><a href="#2_14" target="_self">2.分析网页+实际操作</a></li><li><ul><li><a href="#211_16" target="_self">2.1分析页面1</a></li><li><a href="#222_89" target="_self">2.2分析页面2</a></li><li><a href="#23_117" target="_self">2.3分析首页</a></li><li><a href="#24_146" target="_self">2.4整合代码，准备起飞</a></li></ul>  </li><li><a href="#3_322" target="_self">3.效果展示</a></li></ul></div><p></p> <h1><a name="t1"></a><a name="t1"></a><a id="1_6"></a>1.准备工作</h1> <p>这次我们主要运用四个模块分别是</p> <blockquote>  <p>BeautifulSoup：主要用于我们来<strong>分析网页信息</strong><br> requests：主要是用于我们来<strong>请求网页</strong><br> re：正则表达式，帮组我们来<strong>匹配</strong>实际需要的信息<br> os：主要负责帮我们<strong>下载</strong>图片</p> </blockquote> <h1><a name="t2"></a><a name="t2"></a><a id="2_14"></a>2.分析网页+实际操作</h1> <p>一开始我们先分析单个页面进行爬取下载，之后我们在分析首页获取到所有页面的链接，最后对我们之前的代码进行整合规范化。</p> <h2><a name="t3"></a><a name="t3"></a><a id="211_16"></a>2.1分析页面1</h2> <p>页面网址：<a href="https://www.vmgirls.com/9384.html" target="_blank" rel="noopener">https://www.vmgirls.com/9384.html</a><br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812143546946.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p> <p>我们通过鼠标定位到我们需要爬取的图片的信息就在上图红色方框中，并且通过观察页面的格式我们发现大体格式基本一样，基本都是下面这种样式：</p> <pre class="prettyprint"><code class="prism language-html has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>酸酸的，甜甜的-唯美女生<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2904<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4356<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alignnone size-full loaded<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/2018/08/2018-08-10_13-52-47.jpg<span class="token punctuation">"</span></span><span class="token attr-name">data-nclazyload</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">data-pagespeed-url-hash</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1859759222<span class="token punctuation">"</span></span> <span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pagespeed.CriticalImages.checkImageForCriticality(this);<span class="token punctuation">"</span></span> <span class="token attr-name">data-pagespeed-lsc-url</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.vmgirls.com/image/2018/08/2018-08-10_13-52-47.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/2018/08/2018-08-10_13-52-47.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">data-was-processed</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li></ul></pre> <p>并且通过分析我们可以得到图片的链接其实就在img的<strong>data-pagespeed-lsc-url</strong>属性之中，那么我们就来尝试先将所有的img空间爬取下来</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<p>headers<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><br>    <span class="token string">“User-Agent”</span><span class="token punctuation">:</span> <span class="token string">“Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36”</span><br><span class="token punctuation">}</span><br>response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">‘<a href="https://www.vmgirls.com/9384.html'" target="_blank" rel="noopener">https://www.vmgirls.com/9384.html'</a></span><span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><br>html<span class="token operator">=</span>response<span class="token punctuation">.</span>text</p><p><span class="token triple-quoted-string string">“””解析网页”””</span><br>findImgsrc<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>r<span class="token string">‘data-src=”(.*?)”‘</span><span class="token punctuation">)</span><br>soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">“html.parser”</span><span class="token punctuation">)</span></p><p><span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">“img”</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">“alignnone size-full”</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></p><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li></ul></pre> <p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812144238908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 但是当我们爬取下来之后发现img控件中并没有<strong>data-pagespeed-lsc-url</strong>这个属性，那么我们怎么办呢？别急继续看我们发现虽然没有<strong>data-pagespeed-lsc-url</strong>但是<strong>data-src</strong>属性和<strong>data-pagespeed-lsc-url</strong>也差不多，只是缺少了部分请求头，这个我们完全可以通过后续的字符串操作进行修改得到，所以我们编写正则表达式进行匹配获取到我们需要的信息</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">findImgsrc<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>r<span class="token string">'data-src="(.*?)"'</span><span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li></ul></pre> <p>就这简单一句就行了，获取到了还不行，因为他还不符合我们图片链接的规范，所以我们还需要对该字符进行处理。</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"alignnone size-full"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>    item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>    link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findImgsrc<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"https://www.vmgirls.com/"</span><span class="token operator">+</span>link<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></ul></pre> <p>这样我们便能够获取到该页面所有的图片链接了<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812145336492.png#pic_center" alt="在这里插入图片描述"><br> 获取到图片链接之后我们就需要来下载图片，这里我们主要运用的就是os模块</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""创建文件夹名称"""</span>dir_name<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;h1 class="post-title h3"&gt;(.*?)&lt;/h1&gt;'</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><p><span class="token triple-quoted-string string">“””保存图片”””</span><br><span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span><br>     <span class="token comment"># 图片名称</span><br>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><br>    file_name<span class="token operator">=</span>data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">“/“</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><br>    response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>data<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><br>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>dir_name<span class="token operator">+</span><span class="token string">‘/‘</span><span class="token operator">+</span>file_name<span class="token punctuation">,</span><span class="token string">‘wb’</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span><br>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span><br>        <span class="token keyword">print</span><span class="token punctuation">(</span>file_name<span class="token operator">+</span><span class="token string">“下载成功”</span><span class="token punctuation">)</span></p><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li></ul></pre> <p>到此我们的第一个页面就分析结束了</p> <h2><a name="t4"></a><a name="t4"></a><a id="222_89"></a>2.2分析页面2</h2> <p>页面网址：<a href="https://www.vmgirls.com/12985.html" target="_blank" rel="noopener">https://www.vmgirls.com/12985.html</a><br> 按道理其实每个页面的布局以及设计基本上都应该是一样的，但是这个网站有点奇怪。他的页面之间有一些不同像下面这个：<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812150153793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 可能乍看上去大家觉得可能是一样的，但是通过对比图大家就能看出来了<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812151036804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 我选择的另一种方式就是直接通过他的a标签来获取图片的链接，我们分析它的a标签的结构，设计下面的正则表达式来进行匹配：</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;a href="(.*?)" alt=".*?" title=".*?"&gt;'</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li></ul></pre> <p>接下来我们爬取看看是不是我们需要的</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">for</span> item <span class="token keyword">in</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;a href="(.*?)" alt=".*?" title=".*?"&gt;'</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul></pre> <p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812152105980.png#pic_center" alt="在这里插入图片描述"><br> 显然爬出来的和上述的情况一样，我们还需要为他添加请求头</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">for</span> item <span class="token keyword">in</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;a href="(.*?)" alt=".*?" title=".*?"&gt;'</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"https://www.vmgirls.com/"</span> <span class="token operator">+</span> item<span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul></pre> <p>这样我们再看看如何<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812152231633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 这样就已经变成链接了。<br> 到这里第二个页面我们也已经分析完毕了。</p> <h2><a name="t5"></a><a name="t5"></a><a id="23_117"></a>2.3分析首页</h2> <p>如果只是单个页面的爬取，显然还是不能满足博主，毕竟只有一个小姐姐。博主我选择<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812152539667.gif#pic_center" alt="在这里插入图片描述"><br> 那么既然这样我们就需要来分析首页的网页结构，但是看完首页的网页结构，我们发现</p> <p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020081215265293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 他整个页面上并不存在任何分页的控件，所以像之前豆瓣那样的爬取是不行了，接着我们看<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812152830513.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 这里不就是我们需要的链接，所以我们可以分析整个网页，将他所有的链接全部保存下来，之后我们再去一个一个访问不就行了</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""解析网页获取到所有页面的URL"""</span><span class="token keyword">def</span> <span class="token function">getlink</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"media-content"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>        <span class="token operator">//</span>判断是否含有元素        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>            link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token operator">//</span>重新构造成我们需要的网页链接            newlink<span class="token operator">=</span><span class="token string">"https://www.vmgirls.com/"</span> <span class="token operator">+</span> link            <span class="token operator">//</span>并且进行去重操作            <span class="token keyword">if</span> newlink <span class="token operator">not</span> <span class="token keyword">in</span> datas<span class="token punctuation">:</span>                datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span>newlink<span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li></ul></pre> <p>之后我们来看结果<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812153222374.png#pic_center" alt="在这里插入图片描述"><br> 这样我们就爬取到了页面上的所有网址链接了。</p> <h2><a name="t6"></a><a name="t6"></a><a id="24_146"></a>2.4整合代码，准备起飞</h2> <p>上面的准备工作已经全部完成了，接下来我们就将各个模块的代码进行封装，方便我们调用，并且使代码更加的规范化。<br> <strong>8月13日更新一次代码，由于之前的请求头模拟的不够彻底，导致网站认定我们是爬虫，下载能下载，但是会出现图片打不开的情况，所以添加了部分请求头的信息</strong><br> <strong>8月25日更新一次代码，原因还是上面的原因，这次主要是针对请求头中的COOKIE数据，建议做好复制浏览器中自己的cookie，并且主要是针对下载文件时请求网页的请求头</strong><br> 整体流程;<br> 1.获取首页的所有页面链接</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""解析网页获取到所有页面的URL"""</span><span class="token keyword">def</span> <span class="token function">getlink</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"media-content"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>            link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            newlink<span class="token operator">=</span><span class="token string">"https://www.vmgirls.com/"</span> <span class="token operator">+</span> link            <span class="token keyword">if</span> newlink <span class="token operator">not</span> <span class="token keyword">in</span> datas<span class="token punctuation">:</span>                datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span>newlink<span class="token punctuation">)</span>    <span class="token comment"># print(datas)</span>    <span class="token keyword">return</span>  datas<div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li></ul></pre> <p>2.循环爬取各个页面的图片链接</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""解析网页获取到该页面的所有图片链接"""</span><span class="token keyword">def</span> <span class="token function">getdata</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"alignnone size-full"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># print(item)</span>        item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>        link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findImgsrc<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"https://www.vmgirls.com/"</span> <span class="token operator">+</span> link<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">)</span><pre><code>&lt;span class="token keyword"&gt;for&lt;/span&gt; item &lt;span class="token keyword"&gt;in&lt;/span&gt; re&lt;span class="token punctuation"&gt;.&lt;/span&gt;findall&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'&amp;lt;a href="(.*?)" alt=".*?" title=".*?"&amp;gt;'&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; html&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;    &lt;span class="token comment"&gt;# print(item)&lt;/span&gt;    datas&lt;span class="token punctuation"&gt;.&lt;/span&gt;append&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"https://www.vmgirls.com/"&lt;/span&gt; &lt;span class="token operator"&gt;+&lt;/span&gt; item&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token comment"&gt;# print(datas)&lt;/span&gt;&lt;span class="token keyword"&gt;return&lt;/span&gt;  datas</code></pre><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li></ul></pre> <p>3.根据链接创建相应的文件夹</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""创建文件夹名称"""</span><span class="token keyword">def</span> <span class="token function">createdir</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    dir_name<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;h1 class="post-title h3"&gt;(.*?)&lt;/h1&gt;'</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span>    <span class="token keyword">return</span> dir_name<div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></ul></pre> <p>4.在相应的文件夹中下载图片</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""保存图片"""</span><span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>datas<span class="token punctuation">,</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span>        file_name<span class="token operator">=</span>data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>data<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>dir_name<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>file_name<span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>file_name<span class="token operator">+</span><span class="token string">"下载成功"</span><span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li></ul></pre> <p>修改后的完整代码：</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">import</span> time<span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> os<p>findImgsrc<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>r<span class="token string">‘data-src=”(.<em>?)”‘</em></span><span class="token punctuation">)</span><br>findLink<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>r<span class="token string">‘href=”(.?)”‘</span><span class="token punctuation">)</span><br>headers<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><br>    <span class="token string">“cookie”</span><span class="token punctuation">:</span> <span class="token string">“_ga=GA1.2.1285440638.1596454858; verynginx_sign_javascript=9afce94d2a1677e47daf110997b372be; _gid=GA1.2.2085095474.1597149513; xcat_sign_cookie=2bf90ba8c55955f8cb9db86e256cf3f6; Hm_lvt_a5eba7a40c339f057e1c5b5ac4ab4cc9=1597149513,1597193455,1597218065,1597295111; _GPSLSC=; Hm_lpvt_a5eba7a40c339f057e1c5b5ac4ab4cc9=1597308777”</span><span class="token punctuation">,</span><br>    <span class="token string">“if-none-match”</span><span class="token punctuation">:</span> <span class="token string">‘W/“5dff458a-212202”‘</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-dest”</span><span class="token punctuation">:</span> <span class="token string">“document”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-mode”</span><span class="token punctuation">:</span> <span class="token string">“navigate”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-site”</span><span class="token punctuation">:</span> <span class="token string">“none”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-user”</span><span class="token punctuation">:</span> <span class="token string">“?1”</span><span class="token punctuation">,</span><br>    <span class="token string">“upgrade-insecure-requests”</span><span class="token punctuation">:</span> <span class="token string">“1”</span><span class="token punctuation">,</span><br>    <span class="token string">“User-Agent”</span><span class="token punctuation">:</span> <span class="token string">“Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36”</span><span class="token punctuation">}</span><br>headers2<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><br>    <span class="token string">“cookie”</span><span class="token punctuation">:</span> <span class="token string">“_ga=GA1.2.1285440638.1596454858; verynginx_sign_javascript=9afce94d2a1677e47daf110997b372be; xcat_sign_cookie=cfd666fa7ecf4e4a515ba54ea928d4b9; Hm_lvt_a5eba7a40c339f057e1c5b5ac4ab4cc9=1597218065,1597295111,1597374224,1598267245; _gid=GA1.2.1757491204.1598267245; _GPSLSC=; Hm_lpvt_a5eba7a40c339f057e1c5b5ac4ab4cc9=1598267370”</span><span class="token punctuation">,</span><br>    <span class="token string">“if-none-match”</span><span class="token punctuation">:</span> <span class="token string">‘W/“5dff458a-212202”‘</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-dest”</span><span class="token punctuation">:</span> <span class="token string">“document”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-mode”</span><span class="token punctuation">:</span> <span class="token string">“navigate”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-site”</span><span class="token punctuation">:</span> <span class="token string">“none”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-user”</span><span class="token punctuation">:</span> <span class="token string">“?1”</span><span class="token punctuation">,</span><br>    <span class="token string">“upgrade-insecure-requests”</span><span class="token punctuation">:</span> <span class="token string">“1”</span><span class="token punctuation">,</span><br>    <span class="token string">“user-agent”</span><span class="token punctuation">:</span> <span class="token string">“Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36”</span><span class="token punctuation">,</span><span class="token punctuation">}</span></p><p><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">“主程序入口”</span><span class="token punctuation">)</span><br>    urls <span class="token operator">=</span> getlink<span class="token punctuation">(</span>askURL<span class="token punctuation">(</span><span class="token string">‘<a href="https://www.vmgirls.com/'" target="_blank" rel="noopener">https://www.vmgirls.com/'</a></span><span class="token punctuation">)</span><span class="token punctuation">)</span><br>    <span class="token comment"># print(urls)</span><br>    <span class="token keyword">for</span> url <span class="token keyword">in</span> urls<span class="token punctuation">:</span><br>        html <span class="token operator">=</span> askURL<span class="token punctuation">(</span>url<span class="token punctuation">)</span><br>        dir_name <span class="token operator">=</span> createdir<span class="token punctuation">(</span>html<span class="token punctuation">)</span><br>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">“开始爬取”</span> <span class="token operator">+</span> dir_name<span class="token punctuation">)</span><br>        data <span class="token operator">=</span> getdata<span class="token punctuation">(</span>html<span class="token punctuation">)</span><br>        <span class="token comment"># print(data)</span><br>        download<span class="token punctuation">(</span>data<span class="token punctuation">,</span> dir_name<span class="token punctuation">)</span><br>        <span class="token keyword">print</span><span class="token punctuation">(</span>dir_name <span class="token operator">+</span> <span class="token string">“已经下载完毕”</span><span class="token punctuation">)</span></p><p><span class="token triple-quoted-string string">“””请求网页信息”””</span><br><span class="token keyword">def</span> <span class="token function">askURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span><br>    response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><br>    html<span class="token operator">=</span>response<span class="token punctuation">.</span>text<br>    <span class="token keyword">return</span> html<br><span class="token comment"># print(html)</span></p><p><span class="token triple-quoted-string string">“””解析网页获取到该页面的所有图片链接”””</span><br><span class="token keyword">def</span> <span class="token function">getdata</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span><br>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">“html.parser”</span><span class="token punctuation">)</span><br>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><br>    <span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">“img”</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">“alignnone size-full”</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>        <span class="token comment"># print(item)</span><br>        item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><br>        link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findImgsrc<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><br>        datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">“<a href="https://www.vmgirls.com/&quot;" target="_blank" rel="noopener">https://www.vmgirls.com/"</a></span> <span class="token operator">+</span> link<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">)</span></p><pre><code>&lt;span class="token keyword"&gt;for&lt;/span&gt; item &lt;span class="token keyword"&gt;in&lt;/span&gt; re&lt;span class="token punctuation"&gt;.&lt;/span&gt;findall&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'&amp;lt;a href="(.*?)" alt=".*?" title=".*?"&amp;gt;'&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; html&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;    &lt;span class="token comment"&gt;# print(item)&lt;/span&gt;    datas&lt;span class="token punctuation"&gt;.&lt;/span&gt;append&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"https://www.vmgirls.com/"&lt;/span&gt; &lt;span class="token operator"&gt;+&lt;/span&gt; item&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token comment"&gt;# print(datas)&lt;/span&gt;&lt;span class="token keyword"&gt;return&lt;/span&gt;  datas</code></pre><p><span class="token triple-quoted-string string">“””解析网页获取到所有页面的URL”””</span><br><span class="token keyword">def</span> <span class="token function">getlink</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span><br>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">“html.parser”</span><span class="token punctuation">)</span><br>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><br>    <span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">“a”</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">“media-content”</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>        item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><br>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span><br>            link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><br>            newlink<span class="token operator">=</span><span class="token string">“<a href="https://www.vmgirls.com/&quot;" target="_blank" rel="noopener">https://www.vmgirls.com/"</a></span> <span class="token operator">+</span> link<br>            <span class="token keyword">if</span> newlink <span class="token operator">not</span> <span class="token keyword">in</span> datas<span class="token punctuation">:</span><br>                datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span>newlink<span class="token punctuation">)</span><br>    <span class="token comment"># print(datas)</span><br>    <span class="token keyword">return</span>  datas</p><p><span class="token triple-quoted-string string">“””创建文件夹名称”””</span><br><span class="token keyword">def</span> <span class="token function">createdir</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span><br>    dir_name<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">‘&lt;h1 class=”post-title h3”&gt;(.*?)&lt;/h1&gt;’</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><br>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span><br>        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><br>    <span class="token keyword">return</span> dir_name</p><p><span class="token triple-quoted-string string">“””保存图片”””</span><br><span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>datas<span class="token punctuation">,</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span><br>    <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span><br>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><br>        file_name<span class="token operator">=</span>data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">“/“</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><br>        <span class="token comment"># print(data)</span><br>        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>data<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers2<span class="token punctuation">)</span><br>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>dir_name<span class="token operator">+</span><span class="token string">‘/‘</span><span class="token operator">+</span>file_name<span class="token punctuation">,</span><span class="token string">‘wb’</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span><br>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span><br>        <span class="token keyword">print</span><span class="token punctuation">(</span>file_name<span class="token operator">+</span><span class="token string">“下载成功”</span><span class="token punctuation">)</span></p><p><span class="token keyword">if</span> <strong>name</strong> <span class="token operator">==</span> <span class="token string">‘<strong>main</strong>‘</span><span class="token punctuation">:</span><br>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><br>    <span class="token comment"># init_db(“movietest.db”)</span><br>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">“爬取完毕”</span><span class="token punctuation">)</span></p><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li><li style="color: rgb(153, 153, 153);">67</li><li style="color: rgb(153, 153, 153);">68</li><li style="color: rgb(153, 153, 153);">69</li><li style="color: rgb(153, 153, 153);">70</li><li style="color: rgb(153, 153, 153);">71</li><li style="color: rgb(153, 153, 153);">72</li><li style="color: rgb(153, 153, 153);">73</li><li style="color: rgb(153, 153, 153);">74</li><li style="color: rgb(153, 153, 153);">75</li><li style="color: rgb(153, 153, 153);">76</li><li style="color: rgb(153, 153, 153);">77</li><li style="color: rgb(153, 153, 153);">78</li><li style="color: rgb(153, 153, 153);">79</li><li style="color: rgb(153, 153, 153);">80</li><li style="color: rgb(153, 153, 153);">81</li><li style="color: rgb(153, 153, 153);">82</li><li style="color: rgb(153, 153, 153);">83</li><li style="color: rgb(153, 153, 153);">84</li><li style="color: rgb(153, 153, 153);">85</li><li style="color: rgb(153, 153, 153);">86</li><li style="color: rgb(153, 153, 153);">87</li><li style="color: rgb(153, 153, 153);">88</li><li style="color: rgb(153, 153, 153);">89</li><li style="color: rgb(153, 153, 153);">90</li><li style="color: rgb(153, 153, 153);">91</li><li style="color: rgb(153, 153, 153);">92</li><li style="color: rgb(153, 153, 153);">93</li><li style="color: rgb(153, 153, 153);">94</li><li style="color: rgb(153, 153, 153);">95</li><li style="color: rgb(153, 153, 153);">96</li><li style="color: rgb(153, 153, 153);">97</li><li style="color: rgb(153, 153, 153);">98</li><li style="color: rgb(153, 153, 153);">99</li><li style="color: rgb(153, 153, 153);">100</li><li style="color: rgb(153, 153, 153);">101</li><li style="color: rgb(153, 153, 153);">102</li><li style="color: rgb(153, 153, 153);">103</li><li style="color: rgb(153, 153, 153);">104</li></ul></pre><h1><a name="t7"></a><a name="t7"></a><a id="3_322"></a>3.效果展示</h1> <p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200813202248516.gif#pic_center" alt="在这里插入图片描述"></p> <script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的一些基本操作</title>
      <link href="/2020/10/27/git/"/>
      <url>/2020/10/27/git/</url>
      
        <content type="html"><![CDATA[<h1 id="Git教程"><a href="#Git教程" class="headerlink" title="Git教程"></a>Git教程</h1><h2 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1.Git简介"></a>1.Git简介</h2><blockquote><p>Git是什么？</p></blockquote><p>Git是目前世界上最先进的分布式版本控制系统（没有之一）。</p><blockquote><p>Git有什么特点？</p></blockquote><p>简单来说就是：高端大气上档次！</p><h3 id="1-1Git的诞生"><a href="#1-1Git的诞生" class="headerlink" title="1.1Git的诞生"></a>1.1Git的诞生</h3><p>很多人都知道，Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。</p><p>Linus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？</p><p>事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！</p><p>你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。</p><p>不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。</p><p>安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。</p><p>Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：</p><p>Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。</p><p>Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。</p><p>历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了。</p><h3 id="1-2集中式vs分布式"><a href="#1-2集中式vs分布式" class="headerlink" title="1.2集中式vs分布式"></a>1.2集中式vs分布式</h3><p>集中式版本控制系统，版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆。<br>集中式版本控制系统最大的毛病就是必须联网才能工作，如果在局域网内还好，带宽够大，速度够快，可如果在互联网上，遇到网速慢的话，可能提交一个10M的文件就需要5分钟，这还不得把人给憋死啊。</p><p>那分布式版本控制系统与集中式版本控制系统有何不同呢？首先，分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样，你工作的时候，就不需要联网了，因为版本库就在你自己的电脑上。既然每个人电脑上都有一个完整的版本库，那多个人如何协作呢？比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p><p>和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。</p><p>在实际使用分布式版本控制系统的时候，其实很少在两人之间的电脑上推送版本库的修改，因为可能你们俩不在一个局域网内，两台电脑互相访问不了，也可能今天你的同事病了，他的电脑压根没有开机。因此，分布式版本控制系统通常也有一台充当“中央服务器”的电脑，但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活，只是交换修改不方便而已。</p><h2 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h2><p><strong>在Linux上安装Git</strong></p><pre class="line-numbers language-c"><code class="language-c">sudo apt<span class="token operator">-</span>get install git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果是其他Linux版本，可以直接通过源码安装。先从Git官网下载源码，然后解压，依次输入：</p><pre class="line-numbers language-c"><code class="language-c"><span class="token punctuation">.</span><span class="token operator">/</span>config，make，sudo make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这几个命令安装就好了。</p><p><strong>windows安装Git</strong></p><p>在Windows上使用Git，可以从Git官网直接下载安装程序，然后按默认选项安装即可。</p><p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</p><p>安装完成后，还需要最后一步设置，在命令行输入：</p><pre class="line-numbers language-c"><code class="language-c">$ git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>name <span class="token string">"Your Name"</span>$ git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>email <span class="token string">"email@example.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-创建版本库"><a href="#3-创建版本库" class="headerlink" title="3.创建版本库"></a>3.创建版本库</h2><p>初始化一个Git仓库，使用git init命令。</p><p>添加文件到Git仓库，分两步：</p><ol><li>使用命令git add <file>，注意，可反复多次使用，添加多个文件；</file></li><li>使用命令git commit -m <message>，完成。</message></li></ol><h2 id="4-时光穿梭机"><a href="#4-时光穿梭机" class="headerlink" title="4.时光穿梭机"></a>4.时光穿梭机</h2><h3 id="4-1版本回退"><a href="#4-1版本回退" class="headerlink" title="4.1版本回退"></a>4.1版本回退</h3><ul><li><p><code>HEAD</code>指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</p></li><li><p>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</p></li><li><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本。</p></li></ul><h3 id="4-2工作区和暂存区"><a href="#4-2工作区和暂存区" class="headerlink" title="4.2工作区和暂存区"></a>4.2工作区和暂存区</h3><p>Git和其他版本控制系统如SVN的一个不同之处就是有暂存区的概念。</p><p>先来看名词解释。<br><strong>工作区（Working Directory）</strong></p><p>就是你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://static.liaoxuefeng.com/files/attachments/919021113952544/0" alt></p><p><strong>版本库（Repository）</strong></p><p>工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。</p><p>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫</p><p>index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指</p><p>向master的一个指针叫HEAD。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://static.liaoxuefeng.com/files/attachments/919020037470528/0" alt></p><p>分支和HEAD的概念我们以后再讲。</p><p>前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：</p><p>第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；</p><p>第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p><p>因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。</p><p>你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p><p>俗话说，实践出真知。现在，我们再练习一遍，先对readme.txt做个修改，比如加上一行内容：</p><pre class="line-numbers language-c"><code class="language-c">Git is a distributed version control system<span class="token punctuation">.</span>Git is free software distributed under the GPL<span class="token punctuation">.</span>Git has a mutable index called stage<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后，在工作区新增一个LICENSE文本文件（内容随便写）。</p><p>先用git status查看一下状态：</p><pre class="line-numbers language-c"><code class="language-c">$ git statusOn branch masterChanges not staged <span class="token keyword">for</span> commit<span class="token punctuation">:</span>  <span class="token punctuation">(</span>use <span class="token string">"git add &lt;file>..."</span> to update what will be committed<span class="token punctuation">)</span>  <span class="token punctuation">(</span>use <span class="token string">"git checkout -- &lt;file>..."</span> to discard changes in working directory<span class="token punctuation">)</span>    modified<span class="token punctuation">:</span>   readme<span class="token punctuation">.</span>txtUntracked files<span class="token punctuation">:</span>  <span class="token punctuation">(</span>use <span class="token string">"git add &lt;file>..."</span> to include in what will be committed<span class="token punctuation">)</span>    LICENSEno changes added to <span class="token function">commit</span> <span class="token punctuation">(</span>use <span class="token string">"git add"</span> and<span class="token operator">/</span>or <span class="token string">"git commit -a"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Git非常清楚地告诉我们，readme.txt被修改了，而LICENSE还从来没有被添加过，所以它的状态是Untracked。</p><p>现在，使用两次命令git add，把readme.txt和LICENSE都添加后，用git status再查看一下：</p><pre class="line-numbers language-c"><code class="language-c">$ git statusOn branch masterChanges to be committed<span class="token punctuation">:</span>  <span class="token punctuation">(</span>use <span class="token string">"git reset HEAD &lt;file>..."</span> to unstage<span class="token punctuation">)</span>    new file<span class="token punctuation">:</span>   LICENSE    modified<span class="token punctuation">:</span>   readme<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在，暂存区的状态就变成这样了：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://static.liaoxuefeng.com/files/attachments/919020074026336/0" alt></p><p>所以，git add命令实际上就是把要提交的所有修改放到暂存区（Stage），然后，执行git commit就可以一次性把暂存区的所有修改提交到分支。</p><pre class="line-numbers language-c"><code class="language-c">$ git commit <span class="token operator">-</span>m <span class="token string">"understand how stage works"</span><span class="token punctuation">[</span>master e43a48b<span class="token punctuation">]</span> understand how stage works <span class="token number">2</span> files changed<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token function">insertions</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> create mode <span class="token number">100644</span> LICENSE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>一旦提交后，如果你又没有对工作区做任何修改，那么工作区就是“干净”的：</p><pre class="line-numbers language-c"><code class="language-c">$ git statusOn branch masternothing to commit<span class="token punctuation">,</span> working tree clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>现在版本库变成了这样，暂存区就没有任何内容了：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://static.liaoxuefeng.com/files/attachments/919020100829536/0" alt></p><h3 id="4-3管理修改"><a href="#4-3管理修改" class="headerlink" title="4.3管理修改"></a>4.3管理修改</h3><p>第一次修改 -&gt; <code>git add</code> -&gt; 第二次修改 -&gt; <code>git commit</code></p><p>Git管理的是修改，当你用<code>git add</code>命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在工作区的第二次修改并没有放入暂存区，所以，<code>git commit</code>只负责把暂存区的修改提交了，也就是第一次的修改被提交了，第二次的修改不会被提交。</p><p>那怎么提交第二次修改呢？你可以继续<code>git add</code>再<code>git commit</code>，也可以别着急提交第一次修改，先<code>git add</code>第二次修改，再<code>git commit</code>，就相当于把两次修改合并后一块提交了：</p><p>第一次修改 -&gt; git add -&gt; 第二次修改 -&gt; git add -&gt; git commit</p><h3 id="4-4撤销修改"><a href="#4-4撤销修改" class="headerlink" title="4.4撤销修改"></a>4.4撤销修改</h3><p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p><p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，就回到了场景1，第二步按场景1操作。</p><p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</p><h3 id="4-5删除文件"><a href="#4-5删除文件" class="headerlink" title="4.5删除文件"></a>4.5删除文件</h3><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</p><h2 id="5-远程仓库"><a href="#5-远程仓库" class="headerlink" title="5.远程仓库"></a>5.远程仓库</h2><h3 id="5-1添加远程库"><a href="#5-1添加远程库" class="headerlink" title="5.1添加远程库"></a>5.1添加远程库</h3><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>；</p><p>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容；</p><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；</p><p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！</p><h3 id="5-2从远程库克隆"><a href="#5-2从远程库克隆" class="headerlink" title="5.2从远程库克隆"></a>5.2从远程库克隆</h3><p>克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p><p>Git支持多种协议，包括<code>https</code>，但<code>ssh</code>协议速度最快。</p><pre class="line-numbers language-c"><code class="language-c">$ git clone git@github<span class="token punctuation">.</span>com<span class="token punctuation">:</span>michaelliao<span class="token operator">/</span>gitskills<span class="token punctuation">.</span>gitCloning into <span class="token string">'gitskills'</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>remote<span class="token punctuation">:</span> Counting objects<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> done<span class="token punctuation">.</span>remote<span class="token punctuation">:</span> Total <span class="token function">3</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reused <span class="token function">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pack<span class="token operator">-</span>reused <span class="token number">3</span>Receiving objects<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> done<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-分支管理"><a href="#6-分支管理" class="headerlink" title="6.分支管理"></a>6.分支管理</h2><h3 id="6-1创建与合并分支"><a href="#6-1创建与合并分支" class="headerlink" title="6.1创建与合并分支"></a>6.1创建与合并分支</h3><p>Git鼓励大量使用分支：</p><p>查看分支：<code>git branch</code></p><p>创建分支：<code>git branch &lt;name&gt;</code></p><p>切换分支：<code>git checkout &lt;name&gt;</code>或者<code>git switch &lt;name&gt;</code></p><p>创建+切换分支：<code>git checkout -b &lt;name&gt;</code>或者<code>git switch -c &lt;name&gt;</code></p><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code></p><p>删除分支：<code>git branch -d &lt;name&gt;</code></p><h3 id="6-2解决冲突"><a href="#6-2解决冲突" class="headerlink" title="6.2解决冲突"></a>6.2解决冲突</h3><p>当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。</p><p>解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。</p><p>用<code>git log --graph</code>命令可以看到分支合并图。</p><h3 id="6-3分支管理策略"><a href="#6-3分支管理策略" class="headerlink" title="6.3分支管理策略"></a>6.3分支管理策略</h3><p>Git分支十分强大，在团队开发中应该充分应用。</p><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fast forward</code>合并就看不出来曾经做过合并。</p><h3 id="6-4Bug分支"><a href="#6-4Bug分支" class="headerlink" title="6.4Bug分支"></a>6.4Bug分支</h3><p>修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；</p><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复bug，修复后，再<code>git stash pop</code>，回到工作现场；</p><p>在master分支上修复的bug，想要合并到当前dev分支，可以用<code>git cherry-pick &lt;commit&gt;</code>命令，把bug提交的修改“复制”到当前分支，避免重复劳动。</p><h3 id="6-5Feature分支"><a href="#6-5Feature分支" class="headerlink" title="6.5Feature分支"></a>6.5Feature分支</h3><p>开发一个新feature，最好新建一个分支；</p><p>如果要丢弃一个没有被合并过的分支，可以通过<code>git branch -D &lt;name&gt;</code>强行删除。</p><h3 id="6-6多人协作"><a href="#6-6多人协作" class="headerlink" title="6.6多人协作"></a>6.6多人协作</h3><ul><li><p>查看远程库信息，使用<code>git remote -v</code>；</p></li><li><p>本地新建的分支如果不推送到远程，对其他人就是不可见的；</p></li><li><p>从本地推送分支，使用<code>git push origin branch-name</code>，如果推送失败，先用<code>git pull</code>抓取远程的新提交；</p></li><li><p>在本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致；</p></li><li><p>建立本地分支和远程分支的关联，使用<code>git branch --set-upstream branch-name origin/branch-name</code>；</p></li><li><p>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</p></li></ul><h3 id="6-7Rebase"><a href="#6-7Rebase" class="headerlink" title="6.7Rebase"></a>6.7Rebase</h3><ul><li><p>rebase操作可以把本地未push的分叉提交历史整理成直线；</p></li><li><p>rebase的目的是使得我们在查看历史提交的变化时更容易，因为分叉的提交需要三方对比。</p></li></ul><h2 id="7-标签管理"><a href="#7-标签管理" class="headerlink" title="7.标签管理"></a>7.标签管理</h2><h3 id="7-1创建标签"><a href="#7-1创建标签" class="headerlink" title="7.1创建标签"></a>7.1创建标签</h3><ul><li><p>命令<code>git tag &lt;tagname&gt;</code>用于新建一个标签，默认为<code>HEAD</code>，也可以指定一个<code>commit id</code>；</p></li><li><p>命令<code>git tag -a &lt;tagname&gt; -m "blablabla..."</code>可以指定标签信息；</p></li><li><p>命令<code>git tag</code>可以查看所有标签。</p></li></ul><h3 id="7-2操作标签"><a href="#7-2操作标签" class="headerlink" title="7.2操作标签"></a>7.2操作标签</h3><ul><li><p>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签；</p></li><li><p>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签；</p></li><li><p>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签；</p></li><li><p>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</p></li></ul><h2 id="8-使用Github"><a href="#8-使用Github" class="headerlink" title="8.使用Github"></a>8.使用Github</h2><p>我们一直用GitHub作为免费的远程仓库，如果是个人的开源项目，放到GitHub上是完全没有问题的。其实GitHub还是一个开源协作社区，通过GitHub，既可以让别人参与你的开源项目，也可以参与别人的开源项目。</p><p>在GitHub出现以前，开源项目开源容易，但让广大人民群众参与进来比较困难，因为要参与，就要提交代码，而给每个想提交代码的群众都开一个账号那是不现实的，因此，群众也仅限于报个bug，即使能改掉bug，也只能把diff文件用邮件发过去，很不方便。</p><p>但是在GitHub上，利用Git极其强大的克隆和分支功能，广大人民群众真正可以第一次自由参与各种开源项目了。</p><p>如何参与一个开源项目呢？比如人气极高的bootstrap项目，这是一个非常强大的CSS框架，你可以访问它的项目主页<a href="https://github.com/twbs/bootstrap" target="_blank" rel="noopener">https://github.com/twbs/bootstrap</a>，点“Fork”就在自己的账号下克隆了一个bootstrap仓库，然后，从自己的账号下clone：</p><pre class="line-numbers language-c"><code class="language-c">git clone git@github<span class="token punctuation">.</span>com<span class="token punctuation">:</span>michaelliao<span class="token operator">/</span>bootstrap<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一定要从自己的账号下clone仓库，这样你才能推送修改。如果从bootstrap的作者的仓库地址<code>git@github.com:twbs/bootstrap.git</code>克隆，因为没有权限，你将不能推送修改。</p><p>如果你想修复bootstrap的一个bug，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送。</p><p>如果你希望bootstrap的官方库能接受你的修改，你就可以在GitHub上发起一个pull request。当然，对方是否接受你的pull request就不一定了。</p><h2 id="9-Gitee"><a href="#9-Gitee" class="headerlink" title="9.Gitee"></a>9.Gitee</h2><p>使用GitHub时，国内的用户经常遇到的问题是访问速度太慢，有时候还会出现无法连接的情况（原因你懂的）。</p><p>如果我们希望体验Git飞一般的速度，可以使用国内的Git托管服务——Gitee（gitee.com）。</p><p>和GitHub相比，Gitee也提供免费的Git仓库。此外，还集成了代码质量检测、项目演示等功能。对于团队协作开发，Gitee还提供了项目管理、代码托管、文档管理的服务，5人以下小团队免费。</p><h2 id="10-总结"><a href="#10-总结" class="headerlink" title="10.总结"></a>10.总结</h2><p>Git虽然极其强大，命令繁多，但常用的就那么十来个，掌握好这十几个常用命令，你已经可以得心应手地使用Git了。</p><p>友情附赠国外网友制作的Git Cheat Sheet，建议打印出来备用：<br><a href="https://gitee.com/liaoxuefeng/learn-java/raw/master/teach/git-cheatsheet.pdf" target="_blank" rel="noopener">https://gitee.com/liaoxuefeng/learn-java/raw/master/teach/git-cheatsheet.pdf</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 野生技术产业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑来语录</title>
      <link href="/2020/10/26/jian-lai-yu-lu/"/>
      <url>/2020/10/26/jian-lai-yu-lu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>1、某些人和事，哪怕是路边的风景，可是只要看一眼，依然会让人觉得很美好。</p></blockquote><blockquote><p>2、不要把陌生人的些许善意，视为珍稀的瑰宝；却把身边亲近人的全部付出，当做天经地义的事情，对其视而不见。</p></blockquote><blockquote><p>3、有些人心如花木，皆向阳而生。</p></blockquote><blockquote><p>4、言念君子，温其如玉。</p></blockquote><blockquote><p>5、遇事不决，可问春风。</p></blockquote><blockquote><p>6、是你的就好好抓住，不是你的就不要多想。 天底下没谁是欠你的，但是你欠了别人，就别不当回事。</p></blockquote><blockquote><p>7、认定一件事，即使拿十分力气都无法完成，也要拿出十二分力气去努力。</p></blockquote><blockquote><p>8、有心为善虽善不赏，无心为恶虽恶不罚。人力有穷尽之时，尽力又尽心了，就不用太愧疚。</p></blockquote><blockquote><p>9、总有些人，一眼看到就会心生好感，道理都讲不通。</p></blockquote><blockquote><p>10、有聚终有散，人生就是一场场折柳。 岁月长河里，仿佛存在着一座座杨柳依依的渡口，每一段光阴逆旅当中，会有人离船而去，有人登船作伴，然后在下一座渡口又有新的聚散离别。</p></blockquote><blockquote><p>11、真正的强者，愿意以弱者的自由为边界。</p></blockquote><blockquote><p>12、混吃等死，小富即安，飞黄腾达，是因为各有各的缘法，未必有高下之分。</p></blockquote><blockquote><p>13、该是你的，就拿好别丢。不该是你的，想都别想。</p></blockquote><blockquote><p>14、修心，亦是修行之一。顺境修力，逆境修心，缺一不可。</p></blockquote><blockquote><p>15、君子坐而论道，少年起而行之。</p></blockquote><blockquote><p>16、是非功过有人心，善恶斤两问阎王。为何有此说？因为每个人的道德修养、成长经历、眼界阅历都会不同，人心起伏不定，有几人敢自称自己的良心，最为中正平和？有些违心的事情，一步都不要走出去。</p></blockquote><blockquote><p>17、看似与人为善、心肠柔软之人，必然有一块坚硬如铁的心境土壤，在苦难人生中，死死支撑着那份看似愚蠢的善意。18、有些事情，死了也要做。但有些事情，是死也不能做的。</p></blockquote><blockquote><p>19、我想变成一棵树，开心时，在秋天开花；伤心时，在春天落叶。</p></blockquote><blockquote><p>20、对的就是对的，错的就是错的，好的就应该珍惜，怎么珍惜都不为过。</p></blockquote><blockquote><p>21、粗粮可以养胃，书籍可以养气，景致可以养心。</p></blockquote><blockquote><p>22、当我们对这个世界给予善意后，如果非但没有得到善意的回报，甚至只有恶意，这个时候，能够不失望，才是真正的希望。</p></blockquote><blockquote><p>23、有些善意，就跟春寒料峭的阳光一样，虽说在与不在，差别不是很大，可为什么要拒绝呢？</p></blockquote><blockquote><p>24、不被喜欢的姑娘喜欢，是一件很伤心的事情，可天没有塌下来，该怎么活，还得怎么活。</p></blockquote><blockquote><p>25、杀人放火金腰带，修路铺桥无骸骨。</p></blockquote><blockquote><p>26、命里八分，莫求一丈。</p></blockquote><blockquote><p>27、真正的强者不在于什么无敌，而在于活着，输得再惨都别死了，而是每次都能够站起来，再次愤然出拳出剑！</p></blockquote><blockquote><p>28、知而不行，谓之不诚。 行而不成，谓之不能。 知而行，是赤诚之心，行而能，是贯彻到底，已经很难被其他人和事影响了。 而知行合一的前提是，格物致知，将一件事研究到极致，变成自己的知识。 比如做菜，将做菜这门手艺做到尽善尽美，色香味无可挑剔；比如建筑，将楼宇亭台建得坚固美观使用，美轮美奂，风雨不倒地震不塌；比如造船，将造船原理吃透，用料坚固，风浪不沉。 这便是格物致知，将一件东西一件事情研究到极点，明白其中所有的道理。做到格物致知，方能知行合一。</p></blockquote><blockquote><p>29、当这个世界给予自己善意的时候，一定要好好珍惜，要惜福，无论大小。</p></blockquote><blockquote><p>30、凡夫俗子不下苦功夫、死力气去努力做成一件事，根本就没资格去谈什么天赋不天赋。</p></blockquote><blockquote><p>31、有些人，只是夹杂在稻谷之中的一株稗草，被人看过一眼，就再无第二眼。</p></blockquote><blockquote><p>32、与善人居，如入芝兰之室，久而自芳矣。</p></blockquote><blockquote><p>33、老天爷不给公道，没事，我自己去要，能要多少是多少。</p></blockquote><blockquote><p>34、人生在世，很多人做很多事，吃苦就是吃苦，只是吃苦而已。一分耕耘一分收获？得看喜欢打盹的老天爷答应不答应。</p></blockquote><blockquote><p>35、吃得苦中苦方为人上人，我辈武人，想要往上走，在登顶之前，就要去当一条路边刨食求活的野狗！要告诉自己，要想痛痛快快活着，就必须跟天地大道争！跟狗屁神仙争！跟同辈武夫争！最后还要跟自己争！争那一口气！</p></blockquote><blockquote><p>36、世间父亲皆英雄。</p></blockquote><blockquote><p>37、文字在有些时候，恰恰会是我们认识这个世界的无形障碍。所以你以后读书的时候，不要时时刻刻都去咬文嚼字，若是遇到了瓶颈，不妨先退一步，再登高数步，尽量往高处走一走，不登山峰，不显平地。</p></blockquote><blockquote><p>38、开玩笑没关系，但是切记言多必失。世间一个个文字，是有力量的。字眼组合成词，词汇串联成句，语句契合成文章。大道就在其中。</p></blockquote><blockquote><p>39、有些人总是这么不一样，看了一眼，就能让人记住很多年。而有些人，哪怕看了再多年，也没在心头住下。</p></blockquote><blockquote><p>40、不妨试试看，反正事情已经不能再糟糕了。而有些事，不是你想躲就躲得掉的。人生在世，遇到一个坎不怕，努力走过去就是了，过不过得去，两说，你好歹尝试过。41、人情送头牛，买卖不饶针。</p></blockquote><blockquote><p>42、有些人之间，注定只要相逢，就是对的。如果还能重逢，就是最好的。</p></blockquote><blockquote><p>43、一些美好事情，如果是在别人身上流露出来的，羡慕过后，那就去学，至于学不学得来，努力之后再说。多简单的事情。</p></blockquote><blockquote><p>44、自童年起，我就独自一人，照看历代星辰。</p></blockquote><blockquote><p>45、朋友之间提谢字，多伤感情，这就跟男女之间谈一个钱字，是一样的。</p></blockquote><blockquote><p>46、人在伤心的时候，千万不要喝酒，容易变烂酒鬼。快意的事情，可以喝酒，说不定喝着喝着，就成了酒仙。</p></blockquote><blockquote><p>47、该省之省，一文铜钱，即是家族根本。该花则花，一掷千金，根本无需眨眼。</p></blockquote><blockquote><p>48、百事忙千事忧，到头来万事休，天凉好个秋呀好个秋！</p></blockquote><blockquote><p>49、有些可惜，是没办法十全十美。有些可惜，是某些长久的遗憾。</p></blockquote><blockquote><p>50、人都会长大的，长大了之后，就会捡起一些新东西，丢掉一些旧东西，就这么丢丢捡捡，哗啦一下子，就老喽。</p></blockquote><blockquote><p>51、有些委屈，无论大小，只有受过同样委屈的人，才可以真正体会。否则旁人再好的善心善意，恐怕都无法让人真正心安。</p></blockquote><blockquote><p>52、如果你的朋友过得比你好，好很多，好到让你望尘莫及，一辈子追不上，那么你心里头会不会一点点别扭？</p></blockquote><blockquote><p>53、怎么挣钱是一回事，锱铢必较，哪怕一颗铜钱都需要跟人算清楚，可是有了钱怎么花，就看各自习惯了。像我，一年到头确实在拼命赚钱，图什么？就是为了自己能够不用在交朋友这种事上，太小气，还要计较一个钱字。</p></blockquote><blockquote><p>54、有些事情，不去做，心里不痛快。可有些事情，再不痛快，也只能忍着。</p></blockquote><blockquote><p>55、女子总爱在情爱一事上动脑筋，男子喜好在江山一事上花心思。</p></blockquote><blockquote><p>56、我们活在一个很复杂的世道里，很多人的言行，哪怕是学问极高的读书人，还是会自相矛盾，我们看多了没甚道理的事情，难免会问，是不是书上的道理，是错的，或者说，是那些道理还没有说透，没有说全。</p></blockquote><blockquote><p>57、我们该怎么看待这个许多嘴上讲道理、做事没道理的世界？办法是有的，一种是活得纯粹，我拳头很硬，剑术很强，道法很强，就用这些来打破一些东西。复杂问题给简单解决掉，只要我开心就好。天地有规矩约束我，我便一拳打破，世间有大道压我，我有一剑破万法。哪怕暂时做到如此酣畅淋漓，可总是如此想，坚定不移，一直朝这个方向走在道路上。这种人可以有，但是不能人人如此的。另一种是活得很聪明，怎么省心省力怎么来，规矩二字，就是用来钻漏洞的。</p></blockquote><blockquote><p>58、人间万事细如毛，我有小事大如斗。</p></blockquote><blockquote><p>59、归根结底，长得好，无论男女，怎么都是对的，长得不好看，大概就是万般皆罪。</p></blockquote><blockquote><p>60、人情世情，最难讲理。 因为一旦真要掰碎了讲道理，好像酒水分了家，没滋没味。所以说世间的祖荫福缘，哪怕送到了子孙手上，还是各人有各命，有些人抓得住，有些人抓不住，有人抓得多有人抓得少，而且这种事情，往往当事人在当下只会浑然不知，只能凭本心而为。</p></blockquote><blockquote><p>61、对世界不要失去希望，除了一定要好好活着之外，其实还有一层意思，就是当我们对这个世界给予善意后，如果非但没有得到善意的回报，甚至只有恶意，这个时候，能够不失望，才是真正的希望。</p></blockquote><blockquote><p>62、因为他从来懒得跟人讲道理。打不过人家，讲道理不管用；打得过人家，讲道理好像没必要。</p></blockquote><blockquote><p>63、男子下等眼光，只看女子脸面，中等眼光，看那身段，上等眼光，看女子神意。</p></blockquote><blockquote><p>64、一个随便把别人当朋友的人,往往不会有真正的朋友。一个喜欢嘴上称兄道弟的人,心里其实没有真正的兄弟。</p></blockquote><blockquote><p>65、一个人，哪能什么都不麻烦别人，偶尔有个一两次，不用太愧疚。66、有些离别，就不希望再碰面，但往往在不经意间就不期而遇了。有些明明希望可以再见的分别，却偏偏不会有再会了。</p></blockquote><blockquote><p>67、这个世界，一直亏欠着好人。对对错错，怎么会没有呢？只是我们不远去深究罢了。嘴上可以不谈，甚至故意颠倒黑白，可心里要有数啊。只可惜世事多无奈，聪明人越来越多，心眼心窍多如莲蓬者，往往喜欢讥讽醇厚，否认纯粹的善意，厌恶他人的赤诚。</p></blockquote><blockquote><p>68、你如何看待这个世界，世界就会如何看你。</p></blockquote><blockquote><p>69、苦难一事，世间何其多，有何奇怪？任何一个身世坎坷的孩子，谁缺这个？可奇怪之处，在于吃苦二字，怎么一个吃法。人间苦难，不消说也，说不得也。</p></blockquote><blockquote><p>70、人吃土一辈子，土吃人一回。</p></blockquote><blockquote><p>71、读过多少书，就敢说这个世道‘就是这样的’，见过多少人，就敢说男人女人‘都是这般德行’？你亲眼见过多少太平和苦难，就敢断言他人的善恶？</p></blockquote><blockquote><p>72、做生意，熟人登门，绝不可以杀熟，但是也不可以不收钱，不赚不亏，是最好的。否则越做生意，就越没朋友。你次次亏本，那人还喜欢时时登门，证明对方不把你当朋友。你次次赚得比平时还多，那就更明白了，你根本不曾将那人当做朋友，若是这般，反而爽利。若是前者，就要揪心了。</p></blockquote><blockquote><p>73、有些修士，要么清心寡欲，不问世事，要么恪守规矩，愿意为了人间的太平，让自己活得没那么痛快，不去追求绝对的自由。世间百态，各有所求，是非对错，一团浆糊。 因为有太多人，道理只是说给别人听的，而不是用来约束自己的本心。 山上山下皆如此。74、喝了酒，就敢想不敢想的，敢说不敢说的，敢做不敢做的。</p></blockquote><blockquote><p>75、万事莫走极端。与人讲道理，最怕“我要道理全占尽”。最怕一旦与人交恶，便全然不见其善。庙堂之上，党争，甚至是被后世视为君子之争的党争，为何还是遗祸极长，就在于君子贤人，在这些事情上，同样做得不对。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑来 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/2020/10/25/zheng-ze-biao-da-shi/"/>
      <url>/2020/10/25/zheng-ze-biao-da-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p><strong>目录 (Table of Contents)</strong></p><p> <em>L.jj</em></p><p>字符串是编程时涉及到的最多的一种数据结构，对字符串进行操作的需求几乎无处不在。比如判断一个字符串是否是合法的Email地址，虽然可以编程提取@前后的子串，再分别判断是否是单词和域名，但这样做不但麻烦，而且代码难以复用。</p><p>正则表达式是一种用来匹配字符串的强有力的武器。它的设计思想是用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，我们就认为它“匹配”了，否则，该字符串就是不合法的。</p><p>所以我们判断一个字符串是否是合法的Email的方法是：</p><p>  1.创建一个匹配Email的正则表达式；</p><p>  2.用该正则表达式去匹配用户的输入来判断是否合法。</p><p>因为正则表达式也是用字符串表示的，所以，我们要首先了解如何用字符来描述字符。</p><p>在正则表达式中，如果直接给出字符，就是精确匹配。用\d可以匹配一个数字，\w可以匹配一个字母或数字，所以：</p><ul><li><code>'00\d'</code>可以匹配<code>'007'</code>，但无法匹配<code>'00A'</code></li><li><code>'\d\d\d'</code>可以匹配<code>'010'</code></li><li><code>'\w\w\w'</code>可以匹配<code>'py3'</code></li></ul><p><code>.</code>可以匹配任意字符，所以：</p><ul><li><code>'py.'</code>可以匹配<code>'pyc'</code>，<code>'pyo'</code>，<code>'py!'</code>等等。</li></ul><p>要匹配变长的字符，在正则表达式中，用<code>*</code>表示任意个字符（包括0个），用<code>+</code>表示至少一个字符，用<code>?</code>表示0个或1个字符，用<code>{n}</code>表示n个字符，用<code>{n,m}</code>表示n-m个字符：</p><p>来看一个复杂的例子：<code>\d{3}\s+\d{3,8}</code>。</p><p>我们来从左到右解读一下：</p><p>   1.<code>\d{3}</code>表示匹配3个数字，例如<code>'010'</code>；</p><p>   2.<code>\s</code>可以匹配一个空格（也包括Tab等空白符），所以<code>\s+</code>表示至少有一个空格，例如匹配<code>' '</code>，<code>' '</code>等；</p><p>   3.<code>\d{3,8}</code>表示3-8个数字，例如<code>'1234567'</code>。</p><p>综合起来，上面的正则表达式可以匹配以任意个空格隔开的带区号的电话号码。</p><p>如果要匹配<code>'010-12345'</code>这样的号码呢？由于<code>'-'</code>是特殊字符，在正则表达式中，要用<code>'\'</code>转义，所以，上面的正则是<code>\d{3}\-\d{3,8}</code>。</p><p>但是，仍然无法匹配<code>'010 - 12345'</code>，因为带有空格。所以我们需要更复杂的匹配方式。<br>进阶</p><p>要做更精确地匹配，可以用<code>[]</code>表示范围，比如：</p><ul><li><p><code>[0-9a-zA-Z\_]</code>可以匹配一个数字、字母或者下划线；</p></li><li><p><code>[0-9a-zA-Z\_]+</code>可以匹配至少由一个数字、字母或者下划线组成的字符串，比如<code>'a100'</code>，<code>'0_Z'</code>，<code>'Py3000'</code>等等；</p></li><li><p><code>[a-zA-Z\_][0-9a-zA-Z\_]*</code>可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量；</p></li><li><p><code>[a-zA-Z\_][0-9a-zA-Z\_]{0, 19}</code>更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）。</p></li></ul><p><code>A|B</code>可以匹配A或B，所以<code>(P|p)ython</code>可以匹配<code>'Python'</code>或者<code>'python'</code>。</p><p><code>^</code>表示行的开头，<code>^\d</code>表示必须以数字开头。</p><p><code>$</code>表示行的结束，<code>\d$</code>表示必须以数字结束。</p><p>你可能注意到了，<code>py</code>也可以匹配<code>'python'</code>，但是加上<code>^py$</code>就变成了整行匹配，就只能匹配<code>'py'</code>了。</p><h1 id="re模块"><a href="#re模块" class="headerlink" title="re模块"></a>re模块</h1><p>有了准备知识，我们就可以在Python中使用正则表达式了。Python提供<code>re</code>模块，包含所有正则表达式的功能。由于Python的字符串本身也用<code>\</code>转义，所以要特别注意：</p><pre><code>s = 'ABC\\-001' # Python的字符串# 对应的正则表达式字符串变成：# 'ABC\-001'</code></pre><p>因此我们强烈建议使用Python的r前缀，就不用考虑转义的问题了：</p><pre><code>s = r'ABC\-001' # Python的字符串# 对应的正则表达式字符串不变：# 'ABC\-001'</code></pre><p>先看看如何判断正则表达式是否匹配：</p><pre><code>&gt;&gt;&gt; import re&gt;&gt;&gt; re.match(r'^\d{3}\-\d{3,8}$', '010-12345')&lt;_sre.SRE_Match object; span=(0, 9), match='010-12345'&gt;&gt;&gt;&gt; re.match(r'^\d{3}\-\d{3,8}$', '010 12345')&gt;&gt;&gt;</code></pre><p><code>match()</code>方法判断是否匹配，如果匹配成功，返回一个<code>Match</code>对象，否则返回<code>None</code>。常见的判断方法就是：</p><p>test = ‘用户输入的字符串’<br>    if re.match(r’正则表达式’, test):<br>        print(‘ok’)<br>    else:<br>        print(‘failed’)</p><h1 id="切分字符串"><a href="#切分字符串" class="headerlink" title="切分字符串"></a>切分字符串</h1><p>用正则表达式切分字符串比用固定的字符更灵活，请看正常的切分代码：</p><pre><code>&gt;&gt;&gt; 'a b   c'.split(' ')['a', 'b', '', '', 'c']</code></pre><p>嗯，无法识别连续的空格，用正则表达式试试：</p><pre><code>&gt;&gt;&gt; re.split(r'\s+', 'a b   c')['a', 'b', 'c']</code></pre><p>无论多少个空格都可以正常分割。加入<code>,</code>试试：</p><pre><code>&gt;&gt;&gt; re.split(r'[\s\,]+', 'a,b, c  d')['a', 'b', 'c', 'd']</code></pre><p>再加入<code>;</code>试试：</p><pre><code>&gt;&gt;&gt; re.split(r'[\s\,\;]+', 'a,b;; c  d')['a', 'b', 'c', 'd']</code></pre><p>如果用户输入了一组标签，下次记得用正则表达式来把不规范的输入转化成正确的数组。</p><h1 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h1><p>除了简单地判断是否匹配之外，正则表达式还有提取子串的强大功能。用<code>()</code>表示的就是要提取的分组（Group）。比如：</p><p><code>^(\d{3})-(\d{3,8})$</code>分别定义了两个组，可以直接从匹配的字符串中提取出区号和本地号码：</p><pre><code>&gt;&gt;&gt; m = re.match(r'^(\d{3})-(\d{3,8})$', '010-12345')&gt;&gt;&gt; m&lt;_sre.SRE_Match object; span=(0, 9), match='010-12345'&gt;&gt;&gt;&gt; m.group(0)'010-12345'&gt;&gt;&gt; m.group(1)'010'&gt;&gt;&gt; m.group(2)'12345'</code></pre><p>如果正则表达式中定义了组，就可以在<code>Match</code>对象上用<code>group()</code>方法提取出子串来。</p><p>注意到<code>group(0)</code>永远是原始字符串，<code>group(1)</code>、<code>group(2)</code>……表示第1、2、……个子串。</p><p>提取子串非常有用。来看一个更凶残的例子：</p><pre><code>&gt;&gt;&gt; t = '19:05:30'&gt;&gt;&gt; m = re.match(r'^(0[0-9]|1[0-9]|2[0-3]|[0-9])\:(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|[0-9])\:(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|[0-9])$', t)&gt;&gt;&gt; m.groups()('19', '05', '30')</code></pre><p>这个正则表达式可以直接识别合法的时间。但是有些时候，用正则表达式也无法做到完全验证，比如识别日期：</p><pre><code>'^(0[1-9]|1[0-2]|[0-9])-(0[1-9]|1[0-9]|2[0-9]|3[0-1]|[0-9])$'</code></pre><p>对于<code>'2-30'</code>，<code>'4-31'</code>这样的非法日期，用正则还是识别不了，或者说写出来非常困难，这时就需要程序配合识别了。</p><h1 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h1><p>最后需要特别指出的是，正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符。举例如下，匹配出数字后面的<code>0</code>：</p><pre><code>&gt;&gt;&gt; re.match(r'^(\d+)(0*)$', '102300').groups()('102300', '')</code></pre><p>由于<code>\d+</code>采用贪婪匹配，直接把后面的<code>0</code>全部匹配了，结果<code>0*</code>只能匹配空字符串了。</p><p>必须让<code>\d+</code>采用非贪婪匹配（也就是尽可能少匹配），才能把后面的0匹配出来，加个<code>?</code>就可以让<code>\d+</code>采用非贪婪匹配：</p><pre><code>&gt;&gt;&gt; re.match(r'^(\d+?)(0*)$', '102300').groups()('1023', '00')</code></pre><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>当我们在Python中使用正则表达式时，re模块内部会干两件事情：</p><p>   1.编译正则表达式，如果正则表达式的字符串本身不合法，会报错；</p><p>   2.用编译后的正则表达式去匹配字符串。</p><p>如果一个正则表达式要重复使用几千次，出于效率的考虑，我们可以预编译该正则表达式，接下来重复使用时就不需要编译这个步骤了，直接匹配：</p><pre><code>&gt;&gt;&gt; import re# 编译:&gt;&gt;&gt; re_telephone = re.compile(r'^(\d{3})-(\d{3,8})$')# 使用：&gt;&gt;&gt; re_telephone.match('010-12345').groups()('010', '12345')&gt;&gt;&gt; re_telephone.match('010-8086').groups()('010', '8086')</code></pre><p>编译后生成Regular Expression对象，由于该对象自己包含了正则表达式，所以调用对应的方法时不用给出正则字符串。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>正则表达式非常强大，要在短短的一节里讲完是不可能的。要讲清楚正则的所有内容，可以写一本厚厚的书了。如果你经常遇到正则表达式的问题，你可能需要一本正则表达式的参考书。</p><p>转载自：<br><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017639890281664" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/1016959663602400/1017639890281664</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown</title>
      <link href="/2020/10/25/hellow/"/>
      <url>/2020/10/25/hellow/</url>
      
        <content type="html"><![CDATA[<h3 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h3><ul><li>支持“标准”Markdown / CommonMark和Github风格的语法，也可变身为代码编辑器；</li><li>支持实时预览、图片（跨域）上传、预格式文本/代码/表格插入、代码折叠、搜索替换、只读模式、自定义样式主题和多语言语法高亮等功能；</li><li>支持ToC（Table of Contents）、Emoji表情、Task lists、@链接等Markdown扩展语法；</li><li>支持TeX科学公式（基于KaTeX）、流程图 Flowchart 和 时序图 Sequence Diagram;</li><li>支持识别和解析HTML标签，并且支持自定义过滤标签解析，具有可靠的安全性和几乎无限的扩展性；</li><li>支持 AMD / CMD 模块化加载（支持 Require.js &amp; Sea.js），并且支持自定义扩展插件；</li><li>兼容主流的浏览器（IE8+）和Zepto.js，且支持iPad等平板设备；</li><li>支持自定义主题样式；</li></ul><h1 id="Editor-md"><a href="#Editor-md" class="headerlink" title="Editor.md"></a>Editor.md</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/github/stars/pandao/editor.md.svg" alt> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/github/forks/pandao/editor.md.svg" alt> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/github/tag/pandao/editor.md.svg" alt> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/github/release/pandao/editor.md.svg" alt> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/github/issues/pandao/editor.md.svg" alt> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/bower/v/editor.md.svg" alt></p><p><strong>目录 (Table of Contents)</strong></p><p>[TOCM]</p><p>[TOC]</p><h1 id="Heading-1"><a href="#Heading-1" class="headerlink" title="Heading 1"></a>Heading 1</h1><h2 id="Heading-2"><a href="#Heading-2" class="headerlink" title="Heading 2"></a>Heading 2</h2><h3 id="Heading-3"><a href="#Heading-3" class="headerlink" title="Heading 3"></a>Heading 3</h3><h4 id="Heading-4"><a href="#Heading-4" class="headerlink" title="Heading 4"></a>Heading 4</h4><h5 id="Heading-5"><a href="#Heading-5" class="headerlink" title="Heading 5"></a>Heading 5</h5><h6 id="Heading-6"><a href="#Heading-6" class="headerlink" title="Heading 6"></a>Heading 6</h6><h1 id="Heading-1-link-Heading-link"><a href="#Heading-1-link-Heading-link" class="headerlink" title="Heading 1 link Heading link"></a>Heading 1 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h1><h2 id="Heading-2-link-Heading-link"><a href="#Heading-2-link-Heading-link" class="headerlink" title="Heading 2 link Heading link"></a>Heading 2 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h2><h3 id="Heading-3-link-Heading-link"><a href="#Heading-3-link-Heading-link" class="headerlink" title="Heading 3 link Heading link"></a>Heading 3 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h3><h4 id="Heading-4-link-Heading-link-Heading-link-Heading-link"><a href="#Heading-4-link-Heading-link-Heading-link-Heading-link" class="headerlink" title="Heading 4 link Heading link Heading link Heading link"></a>Heading 4 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a> Heading link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h4><h5 id="Heading-5-link-Heading-link"><a href="#Heading-5-link-Heading-link" class="headerlink" title="Heading 5 link Heading link"></a>Heading 5 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h5><h6 id="Heading-6-link-Heading-link"><a href="#Heading-6-link-Heading-link" class="headerlink" title="Heading 6 link Heading link"></a>Heading 6 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h6><h4 id="标题（用底线的形式）Heading-underline"><a href="#标题（用底线的形式）Heading-underline" class="headerlink" title="标题（用底线的形式）Heading (underline)"></a>标题（用底线的形式）Heading (underline)</h4><h1 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><h3 id="字符效果和横线等"><a href="#字符效果和横线等" class="headerlink" title="字符效果和横线等"></a>字符效果和横线等</h3><hr><p><del>删除线</del> <s>删除线（开启识别HTML标签时）</s><br><em>斜体字</em>      <em>斜体字</em><br><strong>粗体</strong>  <strong>粗体</strong><br><strong><em>粗斜体</em></strong> <strong><em>粗斜体</em></strong></p><p>上标：X<sub>2</sub>，下标：O<sup>2</sup></p><p><strong>缩写(同HTML的abbr标签)</strong></p><blockquote><p>即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启</p></blockquote><p>The <abbr title="Hyper Text Markup Language">HTML</abbr> specification is maintained by the <abbr title="World Wide Web Consortium">W3C</abbr>.</p><h3 id="引用-Blockquotes"><a href="#引用-Blockquotes" class="headerlink" title="引用 Blockquotes"></a>引用 Blockquotes</h3><blockquote><p>引用文本 Blockquotes</p></blockquote><p>引用的行内混合 Blockquotes</p><blockquote><p>引用：如果想要插入空白换行<code>即&lt;br /&gt;标签</code>，在插入处先键入两个以上的空格然后回车即可，<a href="http://localhost/" target="_blank" rel="noopener">普通链接</a>。</p></blockquote><h3 id="锚点与链接-Links"><a href="#锚点与链接-Links" class="headerlink" title="锚点与链接 Links"></a>锚点与链接 Links</h3><p><a href="http://localhost/" target="_blank" rel="noopener">普通链接</a></p><p><a href="http://localhost/" title="普通链接带标题" target="_blank" rel="noopener">普通链接带标题</a></p><p>直接链接：<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></p><p><a href="http://www.this-anchor-link.com/" target="_blank" rel="noopener">锚点链接</a> </p><p>GFM a-tail link @pandao</p><blockquote><p>@pandao</p></blockquote><h3 id="多语言代码高亮-Codes"><a href="#多语言代码高亮-Codes" class="headerlink" title="多语言代码高亮 Codes"></a>多语言代码高亮 Codes</h3><h4 id="行内代码-Inline-code"><a href="#行内代码-Inline-code" class="headerlink" title="行内代码 Inline code"></a>行内代码 Inline code</h4><p>执行命令：<code>npm install marked</code></p><h4 id="缩进风格"><a href="#缩进风格" class="headerlink" title="缩进风格"></a>缩进风格</h4><p>即缩进四个空格，也做为实现类似<code>&lt;pre&gt;</code>预格式化文本(Preformatted Text)的功能。</p><pre><code>&lt;?php    echo "Hello world!";?&gt;</code></pre><p>预格式化文本：</p><pre><code>| First Header  | Second Header || ------------- | ------------- || Content Cell  | Content Cell  || Content Cell  | Content Cell  |</code></pre><h4 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码　"></a>JS代码　</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Hello world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> box <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> box<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    box<span class="token punctuation">.</span>prototype <span class="token operator">=</span> box<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token punctuation">{</span>        init <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'box.init()'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        add <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"add"</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        remove <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"remove"</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    box<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>init<span class="token punctuation">.</span>prototype <span class="token operator">=</span> box<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>    window<span class="token punctuation">.</span>box <span class="token operator">=</span>box<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> testBox <span class="token operator">=</span> <span class="token function">box</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>testBox<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"jQuery"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"jQuery"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="HTML代码-HTML-codes"><a href="#HTML代码-HTML-codes" class="headerlink" title="HTML代码 HTML codes"></a>HTML代码 HTML codes</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mate</span> <span class="token attr-name">charest</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Hello world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Hello world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="图片-Images"><a href="#图片-Images" class="headerlink" title="图片 Images"></a>图片 Images</h3><p>Image:</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://pandao.github.io/editor.md/examples/images/4.jpg" alt></p><blockquote><p>Follow your heart.</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://pandao.github.io/editor.md/examples/images/8.jpg" alt></p><blockquote><p>图为：厦门白城沙滩</p></blockquote><p>图片加链接 (Image + Link)：</p><p><a href="https://pandao.github.io/editor.md/examples/images/7.jpg" title="李健首张专辑《似水流年》封面" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://pandao.github.io/editor.md/examples/images/7.jpg" alt></a></p><blockquote><p>图为：李健首张专辑《似水流年》封面</p></blockquote><hr><h3 id="列表-Lists"><a href="#列表-Lists" class="headerlink" title="列表 Lists"></a>列表 Lists</h3><h4 id="无序列表（减号）Unordered-Lists"><a href="#无序列表（减号）Unordered-Lists" class="headerlink" title="无序列表（减号）Unordered Lists (-)"></a>无序列表（减号）Unordered Lists (-)</h4><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表（星号）Unordered-Lists"><a href="#无序列表（星号）Unordered-Lists" class="headerlink" title="无序列表（星号）Unordered Lists (*)"></a>无序列表（星号）Unordered Lists (*)</h4><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表（加号和嵌套）Unordered-Lists"><a href="#无序列表（加号和嵌套）Unordered-Lists" class="headerlink" title="无序列表（加号和嵌套）Unordered Lists (+)"></a>无序列表（加号和嵌套）Unordered Lists (+)</h4><ul><li>列表一</li><li>列表二<ul><li>列表二-1</li><li>列表二-2</li><li>列表二-3</li></ul></li><li>列表三<ul><li>列表一</li><li>列表二</li><li>列表三</li></ul></li></ul><h4 id="有序列表-Ordered-Lists"><a href="#有序列表-Ordered-Lists" class="headerlink" title="有序列表 Ordered Lists (-)"></a>有序列表 Ordered Lists (-)</h4><ol><li>第一行</li><li>第二行</li><li>第三行</li></ol><h4 id="GFM-task-list"><a href="#GFM-task-list" class="headerlink" title="GFM task list"></a>GFM task list</h4><ul><li><input checked disabled type="checkbox"> GFM task list 1</li><li><input checked disabled type="checkbox"> GFM task list 2</li><li><input disabled type="checkbox"> GFM task list 3<ul><li><input disabled type="checkbox"> GFM task list 3-1</li><li><input disabled type="checkbox"> GFM task list 3-2</li><li><input disabled type="checkbox"> GFM task list 3-3</li></ul></li><li><input disabled type="checkbox"> GFM task list 4<ul><li><input disabled type="checkbox"> GFM task list 4-1</li><li><input disabled type="checkbox"> GFM task list 4-2</li></ul></li></ul><hr><h3 id="绘制表格-Tables"><a href="#绘制表格-Tables" class="headerlink" title="绘制表格 Tables"></a>绘制表格 Tables</h3><table><thead><tr><th>项目</th><th align="right">价格</th><th align="center">数量</th></tr></thead><tbody><tr><td>计算机</td><td align="right">$1600</td><td align="center">5</td></tr><tr><td>手机</td><td align="right">$12</td><td align="center">12</td></tr><tr><td>管线</td><td align="right">$1</td><td align="center">234</td></tr></tbody></table><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><table><thead><tr><th>Function name</th><th>Description</th></tr></thead><tbody><tr><td><code>help()</code></td><td>Display the help window.</td></tr><tr><td><code>destroy()</code></td><td><strong>Destroy your computer!</strong></td></tr></tbody></table><table><thead><tr><th align="left">Left-Aligned</th><th align="center">Center Aligned</th><th align="right">Right Aligned</th></tr></thead><tbody><tr><td align="left">col 3 is</td><td align="center">some wordy text</td><td align="right">$1600</td></tr><tr><td align="left">col 2 is</td><td align="center">centered</td><td align="right">$12</td></tr><tr><td align="left">zebra stripes</td><td align="center">are neat</td><td align="right">$1</td></tr></tbody></table><table><thead><tr><th>Item</th><th align="right">Value</th></tr></thead><tbody><tr><td>Computer</td><td align="right">$1600</td></tr><tr><td>Phone</td><td align="right">$12</td></tr><tr><td>Pipe</td><td align="right">$1</td></tr></tbody></table><hr><h4 id="特殊符号-HTML-Entities-Codes"><a href="#特殊符号-HTML-Entities-Codes" class="headerlink" title="特殊符号 HTML Entities Codes"></a>特殊符号 HTML Entities Codes</h4><p>© &amp;  ¨ ™ ¡ £<br>&amp; &lt; &gt; ¥ € ® ± ¶ § ¦ ¯ « · </p><p>X² Y³ ¾ ¼  ×  ÷   »</p><p>18ºC  "  '</p><h3 id="Emoji表情-smiley"><a href="#Emoji表情-smiley" class="headerlink" title="Emoji表情 :smiley:"></a>Emoji表情 :smiley:</h3><blockquote><p>Blockquotes :star:</p></blockquote><h4 id="GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x"><a href="#GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x" class="headerlink" title="GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:"></a>GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:</h4><ul><li><input checked disabled type="checkbox"> :smiley: @mentions, :smiley: #refs, <a href>links</a>, <strong>formatting</strong>, and <del>tags</del> supported :editormd-logo:;</li><li><input checked disabled type="checkbox"> list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;</li><li><input checked disabled type="checkbox"> [ ] :smiley: this is a complete item :smiley:;</li><li><input disabled type="checkbox"> []this is an incomplete item <a href="#">test link</a> :fa-star: @pandao; </li><li><input disabled type="checkbox"> [ ]this is an incomplete item :fa-star: :fa-gear:;<ul><li><input disabled type="checkbox"> :smiley: this is an incomplete item <a href="#">test link</a> :fa-star: :fa-gear:;</li><li><input disabled type="checkbox"> :smiley: this is  :fa-star: :fa-gear: an incomplete item <a href="#">test link</a>;</li></ul></li></ul><h4 id="反斜杠-Escape"><a href="#反斜杠-Escape" class="headerlink" title="反斜杠 Escape"></a>反斜杠 Escape</h4><p>*literal asterisks*</p><h3 id="科学公式-TeX-KaTeX"><a href="#科学公式-TeX-KaTeX" class="headerlink" title="科学公式 TeX(KaTeX)"></a>科学公式 TeX(KaTeX)</h3><p>$$E=mc^2$$</p><p>行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。</p><p>$$(\sqrt{3x-1}+(1+x)^2)$$</p><p>$$\sin(\alpha)^{\theta}=\sum_{i=0}^{n}(x^i + \cos(f))$$</p><p>多行公式：</p><pre class="line-numbers language-math"><code class="language-math">\displaystyle\left( \sum\_{k=1}^n a\_k b\_k \right)^2\leq\left( \sum\_{k=1}^n a\_k^2 \right)\left( \sum\_{k=1}^n b\_k^2 \right)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-katex"><code class="language-katex">\displaystyle     \frac{1}{        \Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{        \frac25 \pi}} = 1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {        1+\frac{e^{-6\pi}}        {1+\frac{e^{-8\pi}}         {1+\cdots} }        }     }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-latex"><code class="language-latex">f(x) = <span class="token function selector">\int</span>_<span class="token punctuation">{</span>-<span class="token function selector">\infty</span><span class="token punctuation">}</span>^<span class="token function selector">\infty</span>    <span class="token function selector">\hat</span> f(<span class="token function selector">\xi</span>)<span class="token function selector">\,</span>e^<span class="token punctuation">{</span>2 <span class="token function selector">\pi</span> i <span class="token function selector">\xi</span> x<span class="token punctuation">}</span>    <span class="token function selector">\,</span>d<span class="token function selector">\xi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="绘制流程图-Flowchart"><a href="#绘制流程图-Flowchart" class="headerlink" title="绘制流程图 Flowchart"></a>绘制流程图 Flowchart</h3><pre class="line-numbers language-flow"><code class="language-flow">st=>start: 用户登陆op=>operation: 登陆操作cond=>condition: 登陆成功 Yes or No?e=>end: 进入后台st->op->condcond(yes)->econd(no)->op<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="绘制序列图-Sequence-Diagram"><a href="#绘制序列图-Sequence-Diagram" class="headerlink" title="绘制序列图 Sequence Diagram"></a>绘制序列图 Sequence Diagram</h3><pre class="line-numbers language-seq"><code class="language-seq">Andrew->China: Says Hello Note right of China: China thinks\nabout it China-->Andrew: How are you? Andrew->>China: I am good thanks!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
