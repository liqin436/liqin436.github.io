<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>STM32软件开发</title>
      <link href="/2020/10/30/stm32-ruan-jian-kai-fa/"/>
      <url>/2020/10/30/stm32-ruan-jian-kai-fa/</url>
      
        <content type="html"><![CDATA[<p><strong><em>stm32f103c8t6</em></strong></p><h1 id="MDK-Keil开发环境"><a href="#MDK-Keil开发环境" class="headerlink" title="MDK Keil开发环境"></a>MDK Keil开发环境</h1><p>链接有很详细的讲解：</p><p><a href="https://blog.csdn.net/ChenGuiGan/article/details/80218875?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.edu_weight&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.edu_weight" target="_blank" rel="noopener">链接地址</a></p><h1 id="串口编程软件mcuisp"><a href="#串口编程软件mcuisp" class="headerlink" title="串口编程软件mcuisp"></a>串口编程软件mcuisp</h1><p><a href="http://www.downxia.com/downinfo/33043.html" target="_blank" rel="noopener">链接地址</a></p><h1 id="JLINK"><a href="#JLINK" class="headerlink" title="JLINK"></a>JLINK</h1><p>自行购买</p><h1 id="获得和理解固件库"><a href="#获得和理解固件库" class="headerlink" title="获得和理解固件库"></a>获得和理解固件库</h1><p>##获取固件库：</p><p><a href="https://lijj.xyz/2020/10/29/stm32-biao-zhun-ku-xia-zai/" target="_blank" rel="noopener">https://lijj.xyz/2020/10/29/stm32-biao-zhun-ku-xia-zai/</a></p><h2 id="固件库概述"><a href="#固件库概述" class="headerlink" title="固件库概述"></a>固件库概述</h2><p>在上面下载固件库解压后会有四个文件夹：</p><h3 id="文件树"><a href="#文件树" class="headerlink" title="文件树"></a>文件树</h3><p><strong>固件库可以理解记忆下关键目录</strong></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201030192350.png" alt></p><p>创建工程</p><ul><li>建立如下工作目录和子目录，复制库文件</li></ul><blockquote><p>firstproject</p></blockquote><blockquote><blockquote><ul><li>application</li></ul></blockquote><blockquote><ul><li>bpdriver</li></ul></blockquote><blockquote><ul><li>object</li></ul></blockquote><blockquote><ul><li>stm32lib</li></ul></blockquote></blockquote><blockquote><blockquote><blockquote><ul><li>inc</li><li>m3</li><li>src</li></ul></blockquote></blockquote></blockquote><blockquote><p>复制内核文件和驱动支持文件，启动文件</p></blockquote><ul><li>Libraries\CMSIS\CoreSupport 目录下的 core_cm3.c和core_cm3.h复制到stm32lib\m3 中</li><li>Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x  目录下的 stm32f10x.h, system_stm32f10x.c, system_stm32f10x.h 复制到stm32lib\m3 中</li><li>Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x \startup\arm 下的启动代码startup_stm32f10x_hd.s也复制到application中,是程序开始的地方</li></ul><blockquote><p>复制设备驱动程序</p></blockquote><blockquote><p>复制外设中断函数文件和固件库配置文件</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stm32标准库下载</title>
      <link href="/2020/10/29/stm32-biao-zhun-ku-xia-zai/"/>
      <url>/2020/10/29/stm32-biao-zhun-ku-xia-zai/</url>
      
        <content type="html"><![CDATA[<h1 id="STM32-Standard-Peripheral-Libraries"><a href="#STM32-Standard-Peripheral-Libraries" class="headerlink" title="STM32 Standard Peripheral Libraries"></a>STM32 Standard Peripheral Libraries</h1><h2 id="固件库函数下载"><a href="#固件库函数下载" class="headerlink" title="固件库函数下载"></a>固件库函数下载</h2><p>下载链接：<a href="https://pan.baidu.com/s/1rt8rkA2-2WBrLeFelhpzqw" target="_blank" rel="noopener">https://pan.baidu.com/s/1rt8rkA2-2WBrLeFelhpzqw</a><br>提取码：p9i0<br>嫌麻烦的可以直接下载</p><h3 id="进入官网切换为中文"><a href="#进入官网切换为中文" class="headerlink" title="进入官网切换为中文"></a>进入官网切换为中文</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029211334.png" alt=""></p><h3 id="选择工具与软件-gt-嵌入式软件-gt-stm32微控制"><a href="#选择工具与软件-gt-嵌入式软件-gt-stm32微控制" class="headerlink" title="选择工具与软件->嵌入式软件->stm32微控制"></a>选择工具与软件-&gt;嵌入式软件-&gt;stm32微控制</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029211616.png" alt=""></p><h3 id="选择stm32标准外设软件库-gt-stm32054"><a href="#选择stm32标准外设软件库-gt-stm32054" class="headerlink" title="选择stm32标准外设软件库->stm32054"></a>选择stm32标准外设软件库-&gt;stm32054</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029211855.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029211946.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029212016.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://gitee.com/the-light-of-the-world/blogimage/raw/master/img/20201029212035.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>截图工具Snipaste安装和使用</title>
      <link href="/2020/10/29/snipaste/"/>
      <url>/2020/10/29/snipaste/</url>
      
        <content type="html"><![CDATA[<p>软件下载：</p><p>Snipaste_32/64位中文版：【<span style="color: #008000;"><a style="color: #008000;" href="http://www.zhanshaoyi.com/12133.html" target="_blank" rel="noopener"><strong>点我下载</strong></a></span>】</p><p><strong>安装前须知</strong>：</p><p>1.Snipaste适用于<span style="color: #ff0000;">XP/Win7/8/10</span>系统，亲测可用！</p><p>2.本号提供的Snipaste为<span style="color: #ff0000;">免安装版</span>，解压即用，请勿移动或删除解压后的文件夹。</p><h3><strong>Snipaste WIN10 64</strong><strong>位安装步骤</strong>：</h3><p>1.先根据电脑系统位数下载对应Snipaste软件安装包到电脑磁盘<span style="color: #ff0000;">英文路径文件夹</span>下，并解压缩，然后双击打开Snipaste-1.16.1_x64文件夹</p><p></p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-1.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12137" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-1.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="680" height="159"></a></p><p>2.找到Snipaste.exe，鼠标右键选择【发送到】→【桌面快捷方式】，生成桌面图标，方便以后打开</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-2.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12138" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-2.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="680" height="791"></a></p><p>3.返回电脑桌面，找到Snipaste图标，鼠标右击选择【以管理员身份运行】</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-3.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12139" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-3.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="536" height="286"></a></p><p>4.在电脑桌面右下角弹出窗口提示：Snipaste正在运行，说明软件成功打开</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-4.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12134" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-4.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="455" height="125"></a></p><p>5.找到桌面右下角状态栏中的Snipaste小图标，鼠标右键选择【首选项】</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-5.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12140" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-5.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="382" height="356"></a></p><p>6.点击【快捷键】选项卡，默认按下【F1】来开始截图，若再按F3，截图就可将截图在桌面置顶显示了</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-6.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12141" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-6.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="545" height="485"></a></p><p>7.默认，按【F1】键后鼠标左键按住不放拖动即可截图，并支持对截图进行简单编辑</p><p style="text-align: center;"><a href="http://www.zhanshaoyi.com/wp-content/uploads/2019/09/1006-7.png" class="fancybox" data-fancybox-group="button" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-12142" src="http://images.zhanshaoyi.com/wp-content/uploads/2019/09/1006-7.png_ThumbnailsWatermark" alt="截图工具Snipaste安装教程和使用方法" width="672" height="383"></a></p><p>Snipaste使用很简单，但同时也有一些较高级的用法，感兴趣的可以探索一下进一步你的工作效率。</p><p>转载自：<a href="http://www.zhanshaoyi.com/12136.html" target="_blank" rel="noopener">http://www.zhanshaoyi.com/12136.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Snipaste </tag>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git简述</title>
      <link href="/2020/10/29/git-jian-shu/"/>
      <url>/2020/10/29/git-jian-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="注册gitee账号"><a href="#注册gitee账号" class="headerlink" title="注册gitee账号"></a>注册gitee账号</h2><p><a href="https://blog.csdn.net/qq_43567345/article/details/105416642" target="_blank" rel="noopener">https://blog.csdn.net/qq_43567345/article/details/105416642</a></p><h2 id="git下载安装"><a href="#git下载安装" class="headerlink" title="git下载安装"></a>git下载安装</h2><p>这里有详细的安装步骤，按照上面一步步来就可以了<br><a href="https://blog.csdn.net/qq_32786873/article/details/80570783" target="_blank" rel="noopener">https://blog.csdn.net/qq_32786873/article/details/80570783</a></p><h2 id="git相关配置-下载安装完后需要做的"><a href="#git相关配置-下载安装完后需要做的" class="headerlink" title="git相关配置(下载安装完后需要做的)"></a>git相关配置(下载安装完后需要做的)</h2><p>第一次使用需要配置这些，以后就不需要了</p><p>配置个人的用户名称和电子邮件地址（全局设置）：</p><pre><code>git config --global user.name "人间灯火阑珊"git config --global user.email "1106656864@qq.com"</code></pre><p><em>下面这一条请忽略（解决gitee和github共存问题，在最后会提到）</em><br>配置个人的用户名称和电子邮件地址（局部设置）：</p><pre><code>git config  user.name "人间灯火阑珊"git config  user.email "1106656864@qq.com"</code></pre><h2 id="Git创建仓库"><a href="#Git创建仓库" class="headerlink" title="Git创建仓库"></a>Git创建仓库</h2><ul><li>桌面或者哪里随便新建一个文件夹</li><li>进入文件夹，右键git bash here,会出现一个命令框</li><li>输入<code>git init</code>,生成<code>.git</code>目录</li></ul><h2 id="ssh公钥设置"><a href="#ssh公钥设置" class="headerlink" title="ssh公钥设置"></a>ssh公钥设置</h2><p><strong><em>公钥其实可以不设置，设置后会更安全</em></strong></p><p>由于你的本地 Git 仓库和 GitHub 仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息：</p><p>使用以下命令生成 SSH Key：<br><code>$ ssh-keygen -t rsa -C "youremail@example.com"</code></p><p>后面的 <a href="mailto:your_email@youremail.com" target="_blank" rel="noopener">your_email@youremail.com</a> 改为你在 gitee 上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。</p><p>成功的话会在当前文件夹生成一个id_rsa.pub文件，进去，打id_rsa.pub，复制里面的 key。<br>回到 github 上，进入 Account =&gt; Settings（账户配置）。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://m.runoob.com/wp-content/uploads/2015/03/48840BF0-992F-4CCC-A388-15CB74819D88.jpg" alt=""></p><blockquote><p>左边选择 SSH and GPG keys，然后点击 New SSH key 按钮,title 设置标题，可以随便填，粘贴在你电脑上生成的 key</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://www.runoob.com/wp-content/uploads/2015/03/B0589847-A498-4415-8700-252BDE1B20C0.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://m.runoob.com/wp-content/uploads/2015/03/106AD534-A38A-47F3-88A3-B7BE3F2FEEF1.jpg" alt=""></p><h2 id="与gitee建立连接"><a href="#与gitee建立连接" class="headerlink" title="与gitee建立连接"></a>与gitee建立连接</h2><ul><li>命令行输入</li><li><code>git remote add origin https://gitee.com/the-light-of-the-world/test2.git</code>，后面加的是你的gitee仓库地址，origin是该新建远程库的名称。</li><li><code>git remote -v</code>查看关联的远程库</li></ul><h2 id="上传本地代码到gitee"><a href="#上传本地代码到gitee" class="headerlink" title="上传本地代码到gitee"></a>上传本地代码到gitee</h2><ul><li>按照下面代码一步步来</li><li><code>git add 1.txt</code> （1.txt为要上传的文件名）</li><li>*请忽略这句 ，<code>git add .</code>( 添加目录下所有发生改变的文件)</li><li><code>git commit -m "ljj"</code> (分号里面的为备注，自己随意)</li><li><code>git remote add origin https://gitee.com/the-light-of-the-world/test2.git</code> (后面地址为你gitee上面仓库地址)</li><li><code>git push -u origin master</code> （至此文件上传成功，到gitee上面的仓库就可以查看到刚上传的文件了）</li></ul><p><strong><em>至此相关步骤已经完成，后面是我自己遇到的一些问题的记录。</em></strong></p><hr><hr><hr><p>删除远程仓库</p><p>删除远程仓库你可以使用命令：</p><pre><code>git remote rm [别名]</code></pre><p>实例</p><pre><code>$ git remote -vorigin    git@github.com:tianqixin/runoob-git-test.git (fetch)origin    git@github.com:tianqixin/runoob-git-test.git (push)</code></pre><h2 id="添加仓库-origin2"><a href="#添加仓库-origin2" class="headerlink" title="添加仓库 origin2"></a>添加仓库 origin2</h2><pre><code>$ git remote -vorigin    git@github.com:tianqixin/runoob-git-test.git (fetch)origin    git@github.com:tianqixin/runoob-git-test.git (push)origin2    git@github.com:tianqixin/runoob-git-test.git (fetch)origin2    git@github.com:tianqixin/runoob-git-test.git (push)</code></pre><h2 id="删除仓库-origin2"><a href="#删除仓库-origin2" class="headerlink" title="删除仓库 origin2"></a>删除仓库 origin2</h2><pre><code>$ git remote rm origin2$ git remote -vorigin    git@github.com:tianqixin/runoob-git-test.git (fetch)origin    git@github.com:tianqixin/runoob-git-test.git (push)</code></pre><p>##下载码云代码<br>新建一个目录，从码云上把上传的代码下载下来：</p><pre><code>git clone https://gitee.com/xxxxx/demo.git</code></pre><blockquote><p>关于gitee和github在同一台电脑共存的相关问题</p></blockquote><p>首先，一开始去连接一个远程库的时候都会用git生成一个ssh公钥用于安全连接gitee，后来的摸索中发现就先没生成公钥去连接也是可以的，可能就是安全性得不到保障。</p><p>有些东西我也没有搞懂后面会进一步更新。</p><p>就目前而言，我的github和gitee用的是同一个ssh公钥暂时没发生什么问题，<br>一切正常。</p><p>这里了附上连接有对ssh公钥的详细描述：<br><a href="https://blog.csdn.net/narutomst/article/details/106836495" target="_blank" rel="noopener">https://blog.csdn.net/narutomst/article/details/106836495</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 野生技术产业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【STM32】STM32 CubeMx使用教程一--安装教程</title>
      <link href="/2020/10/28/stm32/"/>
      <url>/2020/10/28/stm32/</url>
      
        <content type="html"><![CDATA[<p>#一、STM32CubeMX 简介</p><p>&nbsp;1、STM32CubeMX 是 ST 意法半导体近几年来大力推荐的STM32 芯片图形化配置工具，目的就是为了方便开发者， 允许用户使用图形化向导生成C 初始化代码，可以大大减轻开发工作，时间和费用，提高开发效率。STM32CubeMX几乎覆盖了STM32 全系列芯片。&nbsp;</p> <p>&nbsp;</p> <p>在CubeMX上，通过傻瓜化的操作便能实现相关配置，最终能够生成C语言代码，支持多种工具链，比如MDK、IAR For ARM、TrueStudio等&nbsp; 省去了我们配置各种外设的时间，大大的节省了时间</p> <p>&nbsp;</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdn.net/20161031103050516" alt=""></p><p>安装CubeMx一共需要三个</p> <ul><li>&nbsp;<strong>JRE </strong>（Java Runtime Environment）&nbsp;&nbsp;Java运行环境&nbsp;运行<em>JAVA</em>程序所必须的环境的集合</li><li>&nbsp;<strong>STM32CubeMX</strong></li><li><strong>HAL库&nbsp; &nbsp;</strong>STM32 HAL固件库&nbsp; &nbsp;ST官方推出的另一套库</li></ul><h3><a name="t1"></a><a name="t1"></a><span style="color:#86ca5e;"><strong>1安装JRE</strong></span></h3> <p>由于 STM32CubeMX 软件是基于 JAVA 环境运行的，所以需要安装 JRE （Java Runtime Environment）才能使用，&nbsp;</p> <p>官网：&nbsp;&nbsp;<a href="https://www.java.com/en/download/manual.jsp" target="_blank" rel="noopener">https://www.java.com/en/download/manual.jsp</a></p> <p>百度云：<a href="https://pan.baidu.com/s/1WD5E4enEZ_mw0-NGBl_bUw" target="_blank" rel="noopener">https://pan.baidu.com/s/1WD5E4enEZ_mw0-NGBl_bUw</a> 提取码: e8gs&nbsp; &nbsp; (定时更新最新版本)</p> <p>&nbsp;</p> <p>1点击安装</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808215245694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="546" height="297"></p> <p>2 修改路径 点下一步</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/2019080821543193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="547" height="297"></p> <p>3 等待安装完成，关闭界面</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808215501606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="546" height="296"></p> <p>&nbsp;</p> <h3><a name="t2"></a><a name="t2"></a><span style="color:#86ca5e;">2安装<strong>STM32CubeMX</strong></span></h3> <p>&nbsp;官网：<a href="http://www.st.com/stm32cubemx" target="_blank" rel="noopener">www.st.com/stm32cubemx</a></p> <p>百度云：<a href="https://pan.baidu.com/s/1dm83PbIsq7Vk9bAyFNinag" target="_blank" rel="noopener">https://pan.baidu.com/s/1dm83PbIsq7Vk9bAyFNinag</a> 提取码: wjmd&nbsp;</p> <p>&nbsp;</p> <p>官网下载：</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808221316432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="537" height="302"></p> <p>在官网下载需要注册下ST官网账号,目前最新为5.3.0版本，不想在官网下可以在百度云盘下载，</p> <p>&nbsp;</p> <p>1打开安装包&nbsp;</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808215815695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="532" height="400"></p> <p>2同意协议，下一步</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808220044650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="531" height="399"></p> <p>3 勾选第一个即可，第二个选项是是否同意ST公司收集你的个人使用信息等。</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808220146434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="531" height="399"></p> <p>4 点YES&nbsp; 这句话是安装本软件可能会与文件夹之前文件冲突，导致文件夹之前文件丢失 是否继续&nbsp;</p> <p>点继续即可</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808220302910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="558" height="331"></p> <p>5 直接点NEXT，其他不用设置 之后开始安装</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808220742381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="567" height="426"></p> <p>6 安装完成，点Done退出</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808220846664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="566" height="425"></p> <p>&nbsp;</p> <h3><a name="t3"></a><a name="t3"></a><span style="color:#86ca5e;"><strong>3安装HAL库</strong></span></h3> <p>什么是HAL固件库？</p> <p>STM32 HAL固件库是Hardware Abstraction Layer的缩写，中文名称是：硬件抽象层。HAL库是ST公司为STM32的MCU最新推出的抽象层嵌入式软件，为更方便的实现跨STM32产品的最大可移植性。HAL库的推出，可以说ST也慢慢的抛弃了原来的标准固件库，这也使得很多老用户不满。但是HAL库推出的同时，也加入了很多第三方的中间件，有RTOS，USB，TCP / IP和图形等等。</p> <p>&nbsp;</p> <p>和标准库对比起来，STM32的HAL库更加的抽象，ST最终的目的是要实现在STM32系列MCU之间无缝移植，甚至在其他MCU也能实现快速移植。</p> <p>并且从16年开始，ST公司就逐渐停止了对标准固件库的更新，转而倾向于HAL固件库和 Low-layer底层库的更新，停止标准库更新，也就表示了以后使用STM32CubeMX配置HAL/LL库是主流配置环境；</p> <p>&nbsp;</p> <p>HAL库，有<strong>在线安装、离线安装</strong>两种方式。</p> <p>&nbsp;</p> <h3 id="3-3-1-在线安装"><a name="t4"></a><a name="t4"></a>在线安装</h3> <p>打开安装好的 STM32CubeMX 软件&nbsp; 点上面的Help -&gt; Manage embedded software packages&nbsp;</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808222604905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="714" height="402"></p> <p>会跳出来一个选择型号界面&nbsp;&nbsp; 勾选上你要安装的HAL库， 点击“Install Now” 直到安装成功。 如下图：</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808223241593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="714" height="402"></p> <h3><a name="t5"></a><a name="t5"></a>离线安装</h3> <p>离线安装需要下载安装包，这里提供百度云和ST官方下载方式&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <strong>&nbsp;PS：建议在线安装&nbsp; 速度快，又稳定</strong></p> <p>官网：<a href="http://www.st.com/stm32cubemx" target="_blank" rel="noopener">www.st.com/stm32cubemx</a></p> <p>软件下载旁边一栏就是HAL库下载&nbsp; 下载对应芯片的安装包</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808221822509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="524" height="258"></p> <p>&nbsp;</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190808221843712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="542" height="424"></p> <p>&nbsp;</p> <p>百度云：<a href="https://pan.baidu.com/s/1dm83PbIsq7Vk9bAyFNinag" target="_blank" rel="noopener">https://pan.baidu.com/s/1dm83PbIsq7Vk9bAyFNinag</a> 提取码: wjmd&nbsp; &nbsp;&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> <p>1直接导入安装包&nbsp; &nbsp;Help -&gt; Manage embedded software packages -&gt;From Local&nbsp; 选择离线包即可</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190809085042881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="510" height="372"></p> <p>2直接解压</p> <p><strong>Help-&gt;Updater Settings...&nbsp; &nbsp; &nbsp;可以选择HAL库安装包路径 </strong>，默认在C盘 可以自行修改</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/20190809084531361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="714" height="402"></p> <p>解压到相对应路径即可</p> <p><img alt="" class="has" src="https://img-blog.csdnimg.cn/2019080908584173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" width="768" height="361"></p> <p>&nbsp;</p> <p>到此，恭喜你的STM32 CubeMx安装成功了。</p> <script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo文件参数及其相关说明</title>
      <link href="/2020/10/28/hexo-wen-jian-can-shu-ji-qi-xiang-guan-shuo-ming/"/>
      <url>/2020/10/28/hexo-wen-jian-can-shu-ji-qi-xiang-guan-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h2>1.        _config.yml</h2><p><em>注意：这里面的东西不一定都要设置的，如果全部设置也是完全可以的，甚至你没必要在这个_config.yml设置，你可以自定义多个</em></p><p><strong>SITE</strong><br><code>title</code>                    网站标题<br><code>subtitle</code>             网站副标题<br><code>description</code>              网站描述,告诉搜索引擎站点的简单描述<br><code>keywords</code>             关键字,便于搜索引擎的搜索<br><code>author</code>                   作者名字，用于显示文章的作者<br><code>language</code>             网站使用的语言,默认是英语，可设置的语言见<a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes" target="_blank" rel="nofollow">语言列表</a><br><code>timezone</code>             网站时区，Hexo 默认使用电脑的时区，可设置的时区见<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="nofollow">时区列表</a></p><p><strong>URL</strong><br><code>url</code>                       网址<br><code>root</code>                      网站根目录<br><code>permalink</code>                 文章的永久链接格式<br><code>permalink_defaults</code>        设置永久链接中各部分的默认值</p><p><strong>DIRECTORY</strong><br><code>source_dir</code>                资源文件夹，这个文件夹用来存放内容，默认是source<br><code>public_dir</code>                公共文件夹，这个文件夹用于存放生成的站点文件，默认是public<br><code>tag_dir</code>                   标签文件夹，默认是tags<br><code>archive_dir</code>               归档文件夹，默认是archives<br><code>category_dir</code>              分类文件夹，默认是categories<br><code>code_dir</code>                  Include code 文件夹，默认是downloads/code<br><code>i18n_dir</code>                  国际化（i18n）文件夹，默认是lang<br><code>skip_render</code>               跳过指定文件的渲染。比如source/mypage/hello.md 将会输出为index.html，而source/mypage/code.js不会渲染它，更多请移步我的其他文章</p><p><strong>WRITING</strong><br><code>new_post_name</code>             新文章的文件名称格式  <code>:title.md</code>或者<code>:year-:month-:day-:title.md</code><br><code>default_layout</code>            预设布局,默认是post<br><code>auto_spacing</code>              在中文和英文之间加入空格，默认是false<br><code>titlecase</code>                 把标题转换为title case,默认是false<br><code>external_link</code>             在新标签中打开链接,默认是true<br><code>filename_case</code>             把文件名称转换为小写(1)或大写(2),默认是0不转换<br><code>render_drafts</code>             显示草稿，默认是false<br><code>post_asset_folder</code>         启动资源文件夹，默认是 false，表示source文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在source/images 文件夹中。<br><code>relative_link</code>             把链接改为与根目录的相对位址，默认是false，默认情况下，Hexo生成的超链接都是绝对地址。例如，如果你的网站域名为<a href="http://example.com" target="_blank" rel="nofollow">example.com</a>,您有一篇文章名为hello，那么绝对链接可能像这样：<a href="http://example.com/hello.html" target="_blank" rel="nofollow">http://example.com/hello.html</a>，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点,一般建议用绝对路径<br><code>future</code>                    显示未来的文章，默认是true<br><code>highlight</code>                 代码块的设置<br>&nbsp; &nbsp;<code>enable: true</code> 启动高亮<br>&nbsp; &nbsp;<code>line_number: true</code> 显示行号<br>&nbsp; &nbsp;<code>auto_detect: false</code> 自动检查<br>&nbsp; &nbsp;<code>tab_replace:</code> 缩进大小</p><p><strong>HOME PAGE SETTING</strong><br><code>path</code>                      博客默认页面的路径，默认为空<br><code>per_page</code>                  主页中每页显示的贴子，0表示禁止分页<br><code>order_by</code>                  按时间倒序排列</p><p><strong>CATEGORY &amp; TAG</strong><br><code>default_category</code>          默认分类，默认为没有分类uncategorized<br><code>category_map</code>              分类别名，默认为空<br><code>tag_map</code>                   标签别名，默认为空</p><p><strong>DATE / TIME FORMAT</strong><br><code>date_format</code>               日期格式    YYYY-MM-DD<br><code>time_format</code>               时间格式    H:mm:ss<br>按照<a href="http://momentjs.com/docs/#/displaying/format/" target="_blank" rel="nofollow">格式列表</a>设置格式</p><p><strong>PAGINATION</strong><br><code>per_page</code>                  每页显示的文章量（0表示关闭分页），默认是10<br><code>pagination_dir</code>            分页目录，默认是page</p><p><strong>EXTENSIONS</strong><br><code>plugins</code>                   插件，<a href="https://hexo.io/plugins/" target="_blank" rel="nofollow">插件列表</a><br><code>theme</code>                     当前主题名称,为false时禁用主题,<a href="https://hexo.io/themes/" target="_blank" rel="nofollow">主题列表</a><br><code>theme_config</code>              自定义主题配置，这和全局的_config.yml文件是分离的，你可以写themes/my-theme/_config.yml，如果全局的_config.yml文件是<br><code>theme_config:</code><br>&nbsp;&nbsp;<code>bio: "hello_world"</code></p><p>而在你的<code>themes/my-theme/_config.yml</code>是<br><code>bio: "HELLO_WORLD"</code><br><code>logo: "hi.png"</code><br>那么结果是<br><code>bio: "hello_world"</code><br><code>logo: "hi.png"</code><br>也就是说如果在<code>themes/my-theme/_config.yml</code>中修改了全局<code>_config.yml</code>中的定义的参数，那么是无效的，但是可以添加全局<code>_config.yml</code>中没有的参数，如这里的logo</p><p><strong>DEPLOYMENT</strong><br><code>deploy:</code>                   部署格式如下<br>&nbsp; &nbsp;<code>type: git</code><br>&nbsp; &nbsp;<code>repository: https://github.com/xxx/xxx.github.io.git</code><br>&nbsp; &nbsp;<code>branch: master</code></p><p><strong>INCLUDE/EXCLUDE FILES OR FOLDERS</strong><br>设置键值使hexo显式或忽略某些文件<br><code>include</code><br>&nbsp;<code>-Impo</code>               包含Impo这个文件，include参数一般不使用，需要包含的文件hexo都做好了<br><code>exclude</code><br>&nbsp;<code>-.Igno</code>              忽略.Igno这个文件</p><p><strong>USING AN ALTERNATE CONFIG</strong><br>自定义配置文件，使用<code>hexo server</code>启动时是默认加载_config.yml里面的配置，如果我们自定义文件custom.yml，那么启动时使用<code>hexo server --config custom.yml</code>,甚至是多个自定义文件custom1.yml,custom2.json,启动时使用<code>hexo server --config custom1.yml,custom2.json</code>，注意默认后面文件的优先级高，也就是先加载.json，多个自定义文件可以写入<code>_multiconfig.yml</code>中，同样最后一个文件优先加载</p><hr><h2>2.        package.json</h2><p>这是一些应用程序的信息，json格式，建议不要改动</p><hr><h2>3.        scaffolds</h2><p>这是一个模板文件夹，当你新写了一片文章时，其显示格式都会以scaffolds中post.md的内容来加载。</p><hr><h2>4.        source</h2><p>这是一个资源文件夹。以_开头的文件都会被忽略，.md和.html文件会被解析并放到public，其他文件也会被拷贝过去 (如果文件可以被渲染的话，会经过解析然后储存到 public 文件夹，否则会直接拷贝到 public 文件夹)</p><hr><h2>5.        themes</h2><p>主题文件夹，这部分请移步到其他文章。</p><hr><h2>6.        关于文件名</h2><p>Hexo 默认以标题做为文件名称，编辑 new_post_name 参数来改变默认的文件名称,提供以下参数</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-css"><code class="  language-css"><span class="token punctuation">:</span>title    <span class="token property">标题（小写，空格将会被替换为短杠）</span><span class="token punctuation">:</span>year 建立的年份，比如， 2015<span class="token punctuation">:</span>month    建立的月份（有前导零），比如， 04<span class="token punctuation">:</span>i_month  建立的月份（无前导零），比如， 4<span class="token punctuation">:</span>day  建立的日期（有前导零），比如， 07<span class="token punctuation">:</span>i_day    建立的日期（无前导零），比如， 7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>7.        关于模板</h2><p>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如：<code>hexo new photo "My Gallery"</code>，在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md模板，并根据其内容建立文章，默认使用 _config.yml 中的 default_layout 参数post代替，模板文件中的参数有</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-undefined"><code class="  language-undefined">layout    布局title 标题date  文件建立日期<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>8.        关于Front-matter</h2><p>Front-matter 是文件最上方以 --- 分隔的区域，用于指定个别文件的变量，举例来说：</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-undefined"><code class="  language-undefined">title: Hello Worlddate: 2013/7/13 20:46:25---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></blockquote><p>以下是预先定义的参数，在模板中使用这些参数值并加以利用。</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-bash"><code class="  language-bash">参数           描述                   默认值layout       布局   title        标题date         建立日期              文件建立日期updated      更新日期              文件更新日期comments     开启文章的评论功能     truetags         标签（不适用于分页）categories   分类（不适用于分页）permalink    覆盖文章网址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>9.        关于分类和标签</h2><blockquote><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次</p></blockquote><p>示例</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-undefined"><code class="  language-undefined">categories:- Diarytags:- PS3- Games<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></blockquote><p><strong>注意</strong> 下面的方法会使分类Life成为Diary的子分类，而不是并列分类</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-undefined"><code class="  language-undefined">categories:- Diary- Life<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>10.        关于.json和.yml配置文件的区别</h2><p>两者都可以来编写front-matter,只要将<code>---</code>换成<code>;;;</code>即可<br>例如</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-bash"><code class="  language-bash">"title": "Hello World","date": "2013/7/13 20:46:25";;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>11.        关于文章内部的标签引用</h2><p>1，引用块<br>格式</p><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-bash"><code class="  language-bash"><blockquote><p>content</p><footer><strong>[author[</strong><cite>source]] [link] [source_link_title]</cite></footer></blockquote><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>示例1</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-dart"><code class="  language-dart"><span class="token punctuation">{</span><span class="token operator">%</span> blockquote <span class="token metadata symbol">@DevDocs</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>twitter<span class="token punctuation">.</span>com<span class="token operator">/</span>devdocs<span class="token operator">/</span>status<span class="token operator">/</span><span class="token number">356095192085962752</span> <span class="token operator">%</span><span class="token punctuation">}</span>NEW<span class="token punctuation">:</span> DevDocs now comes <span class="token keyword">with</span> syntax highlighting<span class="token punctuation">.</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>devdocs<span class="token punctuation">.</span>io<span class="token punctuation">{</span><span class="token operator">%</span> endblockquote <span class="token operator">%</span><span class="token punctuation">}</span><p>输出</p><p>NEW<span class="token punctuation">:</span> DevDocs now comes <span class="token keyword">with</span> syntax highlighting<span class="token punctuation">.</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>devdocs<span class="token punctuation">.</span>io</p><p><span class="token metadata symbol">@DevDocst</span><span class="token operator">–</span>witter<span class="token punctuation">.</span>com<span class="token operator">/</span>devdocs<span class="token operator">/</span>status<span class="token operator">/</span><span class="token number">356095192085962752</span><br><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre></div><p></p></blockquote><p>示例2</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-csharp"><code class="  language-csharp"><span class="token punctuation">{</span><span class="token operator">%</span> blockquote <span class="token class-name">Seth</span> <span class="token class-name">Godin</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>sethgodin<span class="token punctuation">.</span>typepad<span class="token punctuation">.</span>com<span class="token operator">/</span>seths_blog<span class="token operator">/</span><span class="token number">2009</span><span class="token operator">/</span><span class="token number">07</span><span class="token operator">/</span>welcome<span class="token operator">-</span>to<span class="token operator">-</span>island<span class="token operator">-</span>marketing<span class="token punctuation">.</span>html <span class="token class-name">Welcome</span> to <span class="token class-name">Island</span> Marketing <span class="token operator">%</span><span class="token punctuation">}</span><span class="token class-name">Every</span> interaction <span class="token keyword">is</span> both precious and an opportunity to delight<span class="token punctuation">.</span><span class="token punctuation">{</span><span class="token operator">%</span> endblockquote <span class="token operator">%</span><span class="token punctuation">}</span><p>输出</p><p><span class="token class-name">Every</span> interaction <span class="token keyword">is</span> both precious and an opportunity to delight<span class="token punctuation">.</span></p><p><span class="token class-name">Seth</span> <span class="token class-name">GodinWelcome</span> to <span class="token class-name">Island</span> Marketing<br><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre></div><p></p></blockquote><p><strong>注意：对应关系</strong></p><p>2，代码块</p><p>示例1</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-bash"><code class="  language-bash"><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert('Hello World!');</span><br></pre></td></tr></tbody></table></figure><p>输出</p><p>alert(‘Hello World!’);<br><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></p></code></pre></div><p></p></blockquote><p>3，在文章中插入指定大小的图片。</p><p><code><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/.io//to/image" class="[class names]" title="[width] [height] [title text [alt text]]"></code></p><hr><h2>12.        关于Asset资源文件夹</h2><p>资源（Asset）代表 source 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 source/images 文件夹中。然后通过类似于 <code>[图片上传失败...(image-22899b-1541302947970)]</code> 的方法访问它们。<br>当资源文件管理功能打开后(<code>post_asset_folder: true</code>)，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code>命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p><hr><h2>13.         关于图片的显示</h2><p>当你打开文章资源文件夹功能后，你把一个 example.jpg 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>[图片上传失败...(image-9a9526-1541302947971)]</code> ，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作）<br>正确的引用图片方式是使用下列的标签插件而不是 markdown ：<code></code>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p><hr><h2>14.         关于Permalinks永久链接</h2><p>在 _config.yml 配置中调整网站的永久链接或者在每篇文章的 Front-matter 中指定。<br>除了下列变量外，您还可使用 Front-matter 中的所有属性。</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-css"><code class="  language-css">变量            <span class="token property">描述</span><span class="token punctuation">:</span>year          文章的发表年份（4 <span class="token property">位数）</span><span class="token punctuation">:</span>month         文章的发表月份（2 <span class="token property">位数）</span><span class="token punctuation">:</span>i_month       <span class="token property">文章的发表月份（去掉开头的零）</span><span class="token punctuation">:</span>day           文章的发表日期 <span class="token punctuation">(</span>2 位数<span class="token punctuation">)</span><span class="token punctuation">:</span>i_day         <span class="token property">文章的发表日期（去掉开头的零）</span><span class="token punctuation">:</span>title         <span class="token property">文件名称</span><span class="token punctuation">:</span>post_title    <span class="token property">文章标题</span><span class="token punctuation">:</span>id            文章 <span class="token property">ID</span><span class="token punctuation">:</span>category      分类。如果文章没有分类，则是 default_category 配置信息。permalink_defaults 参数调整永久链接中各变量的默认值：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></blockquote><p>示例<br>假设 source/_posts 文件夹中有个 hello-world.md，包含以下内容：</p><blockquote><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-ruby"><code class="  language-ruby">title<span class="token punctuation">:</span> <span class="token constant">Hello</span> <span class="token constant">World</span>date<span class="token punctuation">:</span> <span class="token number">2013</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">17</span><span class="token punctuation">:</span><span class="token number">01</span><span class="token punctuation">:</span><span class="token number">34</span>categories<span class="token punctuation">:</span><span class="token operator">-</span> foo<span class="token operator">-</span> bar参数                             结果<span class="token symbol">:year</span><span class="token operator">/</span><span class="token symbol">:month</span><span class="token operator">/</span><span class="token symbol">:day</span><span class="token operator">/</span><span class="token symbol">:title</span><span class="token operator">/</span>       <span class="token number">2013</span><span class="token operator">/</span><span class="token number">07</span><span class="token operator">/</span><span class="token number">14</span><span class="token operator">/</span>hello<span class="token operator">-</span>world<span class="token symbol">:year</span><span class="token operator">-</span><span class="token symbol">:month</span><span class="token operator">-</span><span class="token symbol">:day</span><span class="token operator">-</span><span class="token symbol">:title</span><span class="token punctuation">.</span>html   <span class="token number">2013</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token operator">-</span>hello<span class="token operator">-</span>world<span class="token punctuation">.</span>html<span class="token symbol">:category</span><span class="token operator">/</span><span class="token symbol">:title</span>                foo<span class="token operator">/</span>bar<span class="token operator">/</span>hello<span class="token operator">-</span>world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></blockquote><hr><h2>15.               关于多语种</h2><p>修改 new_post_name 和 permalink 参数，如下：</p><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-ruby"><code class="  language-ruby">new_post_name<span class="token punctuation">:</span> <span class="token symbol">:lang</span><span class="token operator">/</span><span class="token symbol">:title</span><span class="token punctuation">.</span>mdpermalink<span class="token punctuation">:</span> <span class="token symbol">:lang</span><span class="token regex">/:title/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>建立文章时，文章会被储存到：</p><div class="_2Uzcx_"><button class="VJbwyy" type="button" aria-label="复制代码"><i aria-label="icon: copy" class="anticon anticon-copy"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="copy" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z"></path></svg></i></button><pre class="line-numbers  language-csharp"><code class="  language-csharp">hexo <span class="token keyword">new</span> <span class="token string">"Hello World"</span> <span class="token operator">--</span>lang en<span class="token preprocessor property"># =source/_posts/en/Hello-World.md</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>而网址会是：<br><code>http://localhost:4000/en/hello-world/</code></p><hr><h2>16.                 关于Themes主题设置</h2><p>在 themes 文件夹内，下载<a href="https://hexo.io/themes/" target="_blank" rel="nofollow">主题</a>，并修改 _config.yml 内的 theme 设定，即可切换主题。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PROTEUS原理图元器件库详细说明</title>
      <link href="/2020/10/28/dan-pian-ji/"/>
      <url>/2020/10/28/dan-pian-ji/</url>
      
        <content type="html"><![CDATA[<p>#Proteus 元件名称对照1<br><strong><em>元件名称 中文名 说明</em></strong></p><p>7407        驱动门<br>1N914        二极管<br>74Ls00        与非门<br>74LS04        非门<br>74LS08        与门<br>74LS390        TTL 双十进制计数器<br>7SEG        4针BCD-LED 输出从0-9 对应于4根线的BCD码<br>7SEG        3-8译码器电路BCD-7SEG[size=+0]转换电路<br>ALTERNATOR 交流发电机<br>AMMETER-MILLI mA安培计<br>AND        与门<br>BATTERY        电池/电池组<br>BUS        总线<br>CAP        电容<br>CAPACITOR 电容器<br>CLOCK        时钟信号源<br>CRYSTAL        晶振<br>D-FLIPFLOP D触发器<br>FUSE        保险丝<br>GROUND        地<br>LAMP        灯<br>LED-RED        红色发光二极管<br>LM016L        2行16列液晶 可显示2行16列英文字符，有8位数据总线D0-D7，RS，R/W，EN三个控制端口（共14线），工作电压为5V。没背光，和常用的1602B功能和引脚一样（除了调背光的二个线脚）</p><p>LOGIC ANALYSER 逻辑分析器<br>LOGICPROBE 逻辑探针<br>LOGICPROBE[BIG] 逻辑探针 用来显示连接位置的逻辑状态<br>LOGICSTATE 逻辑状态 用鼠标点击,可改变该方框连接位置的逻辑状态<br>LOGICTOGGLE 逻辑触发<br>MASTERSWITCH 按钮 手动闭合,立即自动打开<br>MOTOR        马达<br>OR        或门<br>POT-LIN        三引线可变电阻器<br>POWER        电源<br>RES        电阻<br>RESISTOR 电阻器<br>SWITCH        按钮 手动按一下一个状态<br>SWITCH-SPDT 二选通一按钮<br>VOLTMETER 伏特计<br>VOLTMETER-MILLI mV伏特计<br>VTERM        串行口终端<br>Electromechanical 电机<br>Inductors 变压器<br>Laplace Primitives 拉普拉斯变换<br>Memory Ics<br>Microprocessor Ics<br>Miscellaneous 各种器件 AERIAL-天线；ATAHDD；ATMEGA64；BATTERY；CELL；CRYSTAL-晶振；FUSE；METER-仪表；<br>Modelling Primitives 各种仿真器件 是典型的基本元器模拟，不表示具体型号，只用于仿真，没有PCB<br>Optoelectronics 各种发光器件 发光二极管，LED，液晶等等<br>PLDs &amp; FPGAs<br>Resistors 各种电阻<br>Simulator Primitives 常用的器件<br>Speakers &amp; Sounders<br>Switches &amp; Relays 开关，继电器，键盘<br>Switching Devices 晶阊管<br>Transistors 晶体管（三极管，场效应管）<br>TTL 74 series<br>TTL 74ALS series<br>TTL 74AS series<br>TTL 74F series<br>TTL 74HC series<br>TTL 74HCT series<br>TTL 74LS series<br>TTL 74S series<br>Analog Ics 模拟电路集成芯片<br>Capacitors 电容集合<br>CMOS 4000 series<br>Connectors 排座，排插<br>Data Converters ADC,DAC<br>Debugging Tools 调试工具<br>ECL 10000 Series</p><hr><p>#PROTEUS元件库元件名称及中英对照</p><p>AND  与门<br>ANTENNA 天线<br>BATTERY 直流电源<br>BELL 铃,钟<br>BVC 同轴电缆接插件<br>BRIDEG 1 整流桥(二极管)<br>BRIDEG 2 整流桥(集成块)<br>BUFFER 缓冲器<br>BUZZER 蜂鸣器<br>CAP 电容<br>CAPACITOR 电容<br>CAPACITOR POL 有极性电容<br>CAPVAR 可调电容<br>CIRCUIT BREAKER 熔断丝<br>COAX 同轴电缆<br>CON 插口<br>CRYSTAL 晶体整荡器<br>DB 并行插口<br>DIODE 二极管<br>DIODE SCHOTTKY 稳压二极管<br>DIODE VARACTOR 变容二极管<br>DPY_3-SEG 3段LED<br>DPY_7-SEG 7段LED<br>DPY_7-SEG_DP 7段LED(带小数点)<br>ELECTRO 电解电容<br>FUSE 熔断器<br>INDUCTOR 电感<br>INDUCTOR IRON 带铁芯电感<br>INDUCTOR3 可调电感<br>JFET N N沟道场效应管<br>JFET P P沟道场效应管<br>LAMP 灯泡<br>LAMP NEDN 起辉器<br>LED 发光二极管<br>METER 仪表<br>MICROPHONE 麦克风<br>MOSFET MOS管<br>MOTOR AC 交流电机<br>MOTOR SERVO 伺服电机<br>NAND 与非门<br>NOR 或非门<br>NOT 非门<br>NPN NPN三极管<br>NPN-PHOTO 感光三极管<br>OPAMP 运放<br>OR 或门<br>PHOTO 感光二极管<br>PNP 三极管<br>NPN DAR NPN三极管<br>PNP DAR PNP三极管<br>POT 滑线变阻器<br>PELAY-DPDT 双刀双掷继电器<br>RES1.2 电阻<br>RES3.4 可变电阻<br>RESISTOR BRIDGE ? 桥式电阻<br>RESPACK ? 电阻<br>SCR 晶闸管<br>PLUG ? 插头<br>PLUG AC FEMALE 三相交流插头<br>SOCKET ? 插座<br>SOURCE CURRENT 电流源<br>SOURCE VOLTAGE 电压源<br>SPEAKER 扬声器<br>SW ? 开关<br>SW-DPDY ? 双刀双掷开关<br>SW-SPST ? 单刀单掷开关<br>SW-PB 按钮<br>THERMISTOR 电热调节器<br>TRANS1 变压器<br>TRANS2 可调变压器<br>TRIAC ? 三端双向可控硅<br>TRIODE ? 三极真空管<br>VARISTOR 变阻器<br>ZENER ? 齐纳二极管<br>DPY_7-SEG_DP 数码管<br>#SW-PB 开关 </p><hr><p>##PROTEUS原理图元器件库详细说明<br>Device.lib           包括电阻、电容、二极管、三极管和PCB的连接器符号<br>ACTIVE.LIB           包括虚拟仪器和有源器件<br>DIODE.LIB          包括二极管和整流桥<br>DISPLAY.LIB       包括LCD、LED<br>BIPOLAR.LIB       包括三极管<br>FET.LIB                 包括场效应管<br>ASIMMDLS.LIB    包括模拟元器件<br>VALVES .LIB           包括电子管<br>ANALOG.LIB           包括电源调节器、运放和数据采样IC<br>CAPACITORS.LIB 包括电容<br>COMS.LIB             包括   4000系列<br>ECL.LIB                包括ECL10000系列<br>MICRO.LIB             包括 通用微处理器<br>OPAMP.LIB              包括 运算放大器<br>RESISTORS.LIB    包括 电阻<br>FAIRCHLD .LIB        包括FAIRCHLD 半导体公司的分立器件<br>LINTEC.LIB             包括 LINTEC公司的运算放大器<br>NATDAC.LIB          包括 国家半导体公司的数字采样器件<br>NATOA.LIB             包括 国家半导体公司 的运算放大器<br>TECOOR.LIB          包括TECOOR公司的 SCR 和TRIAC<br>TEXOAC.LIB              包括 德州仪器公司的运算放大器和比较器<br>ZETEX .LIB                 包括ZETEX 公司的分立器件 </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proteus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫</title>
      <link href="/2020/10/27/python-pa-chong/"/>
      <url>/2020/10/27/python-pa-chong/</url>
      
        <content type="html"><![CDATA[<p><strong>养成习惯，先赞后看！！！</strong><br> 不用于任何商业价值，只是自己娱乐。<br> 否则 <strong>爬虫爬的好，牢饭吃到饱。</strong><br> 这是我们这次爬取的网址：<a href="https://www.vmgirls.com/" target="_blank" rel="noopener">https://www.vmgirls.com/</a></p> <p></p><div class="toc"> <h3><a name="t0"></a><a name="t0"></a>爬取并下载唯美女生</h3> <ul><li><a href="#1_6" target="_self">1.准备工作</a></li><li><a href="#2_14" target="_self">2.分析网页+实际操作</a></li><li><ul><li><a href="#211_16" target="_self">2.1分析页面1</a></li><li><a href="#222_89" target="_self">2.2分析页面2</a></li><li><a href="#23_117" target="_self">2.3分析首页</a></li><li><a href="#24_146" target="_self">2.4整合代码，准备起飞</a></li></ul>  </li><li><a href="#3_322" target="_self">3.效果展示</a></li></ul></div><p></p> <h1><a name="t1"></a><a name="t1"></a><a id="1_6"></a>1.准备工作</h1> <p>这次我们主要运用四个模块分别是</p> <blockquote>  <p>BeautifulSoup：主要用于我们来<strong>分析网页信息</strong><br> requests：主要是用于我们来<strong>请求网页</strong><br> re：正则表达式，帮组我们来<strong>匹配</strong>实际需要的信息<br> os：主要负责帮我们<strong>下载</strong>图片</p> </blockquote> <h1><a name="t2"></a><a name="t2"></a><a id="2_14"></a>2.分析网页+实际操作</h1> <p>一开始我们先分析单个页面进行爬取下载，之后我们在分析首页获取到所有页面的链接，最后对我们之前的代码进行整合规范化。</p> <h2><a name="t3"></a><a name="t3"></a><a id="211_16"></a>2.1分析页面1</h2> <p>页面网址：<a href="https://www.vmgirls.com/9384.html" target="_blank" rel="noopener">https://www.vmgirls.com/9384.html</a><br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812143546946.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p> <p>我们通过鼠标定位到我们需要爬取的图片的信息就在上图红色方框中，并且通过观察页面的格式我们发现大体格式基本一样，基本都是下面这种样式：</p> <pre class="prettyprint"><code class="prism language-html has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>酸酸的，甜甜的-唯美女生<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2904<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4356<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alignnone size-full loaded<span class="token punctuation">"</span></span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/2018/08/2018-08-10_13-52-47.jpg<span class="token punctuation">"</span></span><span class="token attr-name">data-nclazyload</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">data-pagespeed-url-hash</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1859759222<span class="token punctuation">"</span></span> <span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pagespeed.CriticalImages.checkImageForCriticality(this);<span class="token punctuation">"</span></span> <span class="token attr-name">data-pagespeed-lsc-url</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.vmgirls.com/image/2018/08/2018-08-10_13-52-47.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/2018/08/2018-08-10_13-52-47.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">data-was-processed</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li></ul></pre> <p>并且通过分析我们可以得到图片的链接其实就在img的<strong>data-pagespeed-lsc-url</strong>属性之中，那么我们就来尝试先将所有的img空间爬取下来</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<p>headers<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><br>    <span class="token string">“User-Agent”</span><span class="token punctuation">:</span> <span class="token string">“Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36”</span><br><span class="token punctuation">}</span><br>response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">‘<a href="https://www.vmgirls.com/9384.html'" target="_blank" rel="noopener">https://www.vmgirls.com/9384.html'</a></span><span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><br>html<span class="token operator">=</span>response<span class="token punctuation">.</span>text</p><p><span class="token triple-quoted-string string">“””解析网页”””</span><br>findImgsrc<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>r<span class="token string">‘data-src=”(.*?)”‘</span><span class="token punctuation">)</span><br>soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">“html.parser”</span><span class="token punctuation">)</span></p><p><span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">“img”</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">“alignnone size-full”</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></p><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li></ul></pre> <p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812144238908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 但是当我们爬取下来之后发现img控件中并没有<strong>data-pagespeed-lsc-url</strong>这个属性，那么我们怎么办呢？别急继续看我们发现虽然没有<strong>data-pagespeed-lsc-url</strong>但是<strong>data-src</strong>属性和<strong>data-pagespeed-lsc-url</strong>也差不多，只是缺少了部分请求头，这个我们完全可以通过后续的字符串操作进行修改得到，所以我们编写正则表达式进行匹配获取到我们需要的信息</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">findImgsrc<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>r<span class="token string">'data-src="(.*?)"'</span><span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul></pre> <p>就这简单一句就行了，获取到了还不行，因为他还不符合我们图片链接的规范，所以我们还需要对该字符进行处理。</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"alignnone size-full"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>    item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>    link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findImgsrc<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"https://www.vmgirls.com/"</span><span class="token operator">+</span>link<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></ul></pre> <p>这样我们便能够获取到该页面所有的图片链接了<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812145336492.png#pic_center" alt="在这里插入图片描述"><br> 获取到图片链接之后我们就需要来下载图片，这里我们主要运用的就是os模块</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""创建文件夹名称"""</span>dir_name<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;h1 class="post-title h3"&gt;(.*?)&lt;/h1&gt;'</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><p><span class="token triple-quoted-string string">“””保存图片”””</span><br><span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span><br>     <span class="token comment"># 图片名称</span><br>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><br>    file_name<span class="token operator">=</span>data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">“/“</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><br>    response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>data<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><br>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>dir_name<span class="token operator">+</span><span class="token string">‘/‘</span><span class="token operator">+</span>file_name<span class="token punctuation">,</span><span class="token string">‘wb’</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span><br>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span><br>        <span class="token keyword">print</span><span class="token punctuation">(</span>file_name<span class="token operator">+</span><span class="token string">“下载成功”</span><span class="token punctuation">)</span></p><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li></ul></pre> <p>到此我们的第一个页面就分析结束了</p> <h2><a name="t4"></a><a name="t4"></a><a id="222_89"></a>2.2分析页面2</h2> <p>页面网址：<a href="https://www.vmgirls.com/12985.html" target="_blank" rel="noopener">https://www.vmgirls.com/12985.html</a><br> 按道理其实每个页面的布局以及设计基本上都应该是一样的，但是这个网站有点奇怪。他的页面之间有一些不同像下面这个：<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812150153793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 可能乍看上去大家觉得可能是一样的，但是通过对比图大家就能看出来了<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812151036804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 我选择的另一种方式就是直接通过他的a标签来获取图片的链接，我们分析它的a标签的结构，设计下面的正则表达式来进行匹配：</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;a href="(.*?)" alt=".*?" title=".*?"&gt;'</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul></pre> <p>接下来我们爬取看看是不是我们需要的</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">for</span> item <span class="token keyword">in</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;a href="(.*?)" alt=".*?" title=".*?"&gt;'</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul></pre> <p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812152105980.png#pic_center" alt="在这里插入图片描述"><br> 显然爬出来的和上述的情况一样，我们还需要为他添加请求头</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">for</span> item <span class="token keyword">in</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;a href="(.*?)" alt=".*?" title=".*?"&gt;'</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"https://www.vmgirls.com/"</span> <span class="token operator">+</span> item<span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul></pre> <p>这样我们再看看如何<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812152231633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 这样就已经变成链接了。<br> 到这里第二个页面我们也已经分析完毕了。</p> <h2><a name="t5"></a><a name="t5"></a><a id="23_117"></a>2.3分析首页</h2> <p>如果只是单个页面的爬取，显然还是不能满足博主，毕竟只有一个小姐姐。博主我选择<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812152539667.gif#pic_center" alt="在这里插入图片描述"><br> 那么既然这样我们就需要来分析首页的网页结构，但是看完首页的网页结构，我们发现</p> <p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020081215265293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 他整个页面上并不存在任何分页的控件，所以像之前豆瓣那样的爬取是不行了，接着我们看<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812152830513.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvdmVseV9fUlI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 这里不就是我们需要的链接，所以我们可以分析整个网页，将他所有的链接全部保存下来，之后我们再去一个一个访问不就行了</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""解析网页获取到所有页面的URL"""</span><span class="token keyword">def</span> <span class="token function">getlink</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"media-content"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>        <span class="token operator">//</span>判断是否含有元素        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>            link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token operator">//</span>重新构造成我们需要的网页链接            newlink<span class="token operator">=</span><span class="token string">"https://www.vmgirls.com/"</span> <span class="token operator">+</span> link            <span class="token operator">//</span>并且进行去重操作            <span class="token keyword">if</span> newlink <span class="token operator">not</span> <span class="token keyword">in</span> datas<span class="token punctuation">:</span>                datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span>newlink<span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li></ul></pre> <p>之后我们来看结果<br> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200812153222374.png#pic_center" alt="在这里插入图片描述"><br> 这样我们就爬取到了页面上的所有网址链接了。</p> <h2><a name="t6"></a><a name="t6"></a><a id="24_146"></a>2.4整合代码，准备起飞</h2> <p>上面的准备工作已经全部完成了，接下来我们就将各个模块的代码进行封装，方便我们调用，并且使代码更加的规范化。<br> <strong>8月13日更新一次代码，由于之前的请求头模拟的不够彻底，导致网站认定我们是爬虫，下载能下载，但是会出现图片打不开的情况，所以添加了部分请求头的信息</strong><br> <strong>8月25日更新一次代码，原因还是上面的原因，这次主要是针对请求头中的COOKIE数据，建议做好复制浏览器中自己的cookie，并且主要是针对下载文件时请求网页的请求头</strong><br> 整体流程;<br> 1.获取首页的所有页面链接</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""解析网页获取到所有页面的URL"""</span><span class="token keyword">def</span> <span class="token function">getlink</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"media-content"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>            link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            newlink<span class="token operator">=</span><span class="token string">"https://www.vmgirls.com/"</span> <span class="token operator">+</span> link            <span class="token keyword">if</span> newlink <span class="token operator">not</span> <span class="token keyword">in</span> datas<span class="token punctuation">:</span>                datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span>newlink<span class="token punctuation">)</span>    <span class="token comment"># print(datas)</span>    <span class="token keyword">return</span>  datas<div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li></ul></pre> <p>2.循环爬取各个页面的图片链接</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""解析网页获取到该页面的所有图片链接"""</span><span class="token keyword">def</span> <span class="token function">getdata</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"alignnone size-full"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># print(item)</span>        item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>        link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findImgsrc<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"https://www.vmgirls.com/"</span> <span class="token operator">+</span> link<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">)</span><pre><code>&lt;span class="token keyword"&gt;for&lt;/span&gt; item &lt;span class="token keyword"&gt;in&lt;/span&gt; re&lt;span class="token punctuation"&gt;.&lt;/span&gt;findall&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'&amp;lt;a href="(.*?)" alt=".*?" title=".*?"&amp;gt;'&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; html&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;    &lt;span class="token comment"&gt;# print(item)&lt;/span&gt;    datas&lt;span class="token punctuation"&gt;.&lt;/span&gt;append&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"https://www.vmgirls.com/"&lt;/span&gt; &lt;span class="token operator"&gt;+&lt;/span&gt; item&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token comment"&gt;# print(datas)&lt;/span&gt;&lt;span class="token keyword"&gt;return&lt;/span&gt;  datas</code></pre><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li></ul></pre> <p>3.根据链接创建相应的文件夹</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""创建文件夹名称"""</span><span class="token keyword">def</span> <span class="token function">createdir</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    dir_name<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'&lt;h1 class="post-title h3"&gt;(.*?)&lt;/h1&gt;'</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span>    <span class="token keyword">return</span> dir_name<div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></ul></pre> <p>4.在相应的文件夹中下载图片</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token triple-quoted-string string">"""保存图片"""</span><span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>datas<span class="token punctuation">,</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span>        file_name<span class="token operator">=</span>data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>data<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>dir_name<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>file_name<span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>file_name<span class="token operator">+</span><span class="token string">"下载成功"</span><span class="token punctuation">)</span><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li></ul></pre> <p>修改后的完整代码：</p> <pre class="prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">import</span> time<span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> os<p>findImgsrc<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>r<span class="token string">‘data-src=”(.<em>?)”‘</em></span><span class="token punctuation">)</span><br>findLink<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>r<span class="token string">‘href=”(.?)”‘</span><span class="token punctuation">)</span><br>headers<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><br>    <span class="token string">“cookie”</span><span class="token punctuation">:</span> <span class="token string">“_ga=GA1.2.1285440638.1596454858; verynginx_sign_javascript=9afce94d2a1677e47daf110997b372be; _gid=GA1.2.2085095474.1597149513; xcat_sign_cookie=2bf90ba8c55955f8cb9db86e256cf3f6; Hm_lvt_a5eba7a40c339f057e1c5b5ac4ab4cc9=1597149513,1597193455,1597218065,1597295111; _GPSLSC=; Hm_lpvt_a5eba7a40c339f057e1c5b5ac4ab4cc9=1597308777”</span><span class="token punctuation">,</span><br>    <span class="token string">“if-none-match”</span><span class="token punctuation">:</span> <span class="token string">‘W/“5dff458a-212202”‘</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-dest”</span><span class="token punctuation">:</span> <span class="token string">“document”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-mode”</span><span class="token punctuation">:</span> <span class="token string">“navigate”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-site”</span><span class="token punctuation">:</span> <span class="token string">“none”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-user”</span><span class="token punctuation">:</span> <span class="token string">“?1”</span><span class="token punctuation">,</span><br>    <span class="token string">“upgrade-insecure-requests”</span><span class="token punctuation">:</span> <span class="token string">“1”</span><span class="token punctuation">,</span><br>    <span class="token string">“User-Agent”</span><span class="token punctuation">:</span> <span class="token string">“Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36”</span><span class="token punctuation">}</span><br>headers2<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><br>    <span class="token string">“cookie”</span><span class="token punctuation">:</span> <span class="token string">“_ga=GA1.2.1285440638.1596454858; verynginx_sign_javascript=9afce94d2a1677e47daf110997b372be; xcat_sign_cookie=cfd666fa7ecf4e4a515ba54ea928d4b9; Hm_lvt_a5eba7a40c339f057e1c5b5ac4ab4cc9=1597218065,1597295111,1597374224,1598267245; _gid=GA1.2.1757491204.1598267245; _GPSLSC=; Hm_lpvt_a5eba7a40c339f057e1c5b5ac4ab4cc9=1598267370”</span><span class="token punctuation">,</span><br>    <span class="token string">“if-none-match”</span><span class="token punctuation">:</span> <span class="token string">‘W/“5dff458a-212202”‘</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-dest”</span><span class="token punctuation">:</span> <span class="token string">“document”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-mode”</span><span class="token punctuation">:</span> <span class="token string">“navigate”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-site”</span><span class="token punctuation">:</span> <span class="token string">“none”</span><span class="token punctuation">,</span><br>    <span class="token string">“sec-fetch-user”</span><span class="token punctuation">:</span> <span class="token string">“?1”</span><span class="token punctuation">,</span><br>    <span class="token string">“upgrade-insecure-requests”</span><span class="token punctuation">:</span> <span class="token string">“1”</span><span class="token punctuation">,</span><br>    <span class="token string">“user-agent”</span><span class="token punctuation">:</span> <span class="token string">“Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36”</span><span class="token punctuation">,</span><span class="token punctuation">}</span></p><p><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">“主程序入口”</span><span class="token punctuation">)</span><br>    urls <span class="token operator">=</span> getlink<span class="token punctuation">(</span>askURL<span class="token punctuation">(</span><span class="token string">‘<a href="https://www.vmgirls.com/'" target="_blank" rel="noopener">https://www.vmgirls.com/'</a></span><span class="token punctuation">)</span><span class="token punctuation">)</span><br>    <span class="token comment"># print(urls)</span><br>    <span class="token keyword">for</span> url <span class="token keyword">in</span> urls<span class="token punctuation">:</span><br>        html <span class="token operator">=</span> askURL<span class="token punctuation">(</span>url<span class="token punctuation">)</span><br>        dir_name <span class="token operator">=</span> createdir<span class="token punctuation">(</span>html<span class="token punctuation">)</span><br>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">“开始爬取”</span> <span class="token operator">+</span> dir_name<span class="token punctuation">)</span><br>        data <span class="token operator">=</span> getdata<span class="token punctuation">(</span>html<span class="token punctuation">)</span><br>        <span class="token comment"># print(data)</span><br>        download<span class="token punctuation">(</span>data<span class="token punctuation">,</span> dir_name<span class="token punctuation">)</span><br>        <span class="token keyword">print</span><span class="token punctuation">(</span>dir_name <span class="token operator">+</span> <span class="token string">“已经下载完毕”</span><span class="token punctuation">)</span></p><p><span class="token triple-quoted-string string">“””请求网页信息”””</span><br><span class="token keyword">def</span> <span class="token function">askURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span><br>    response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><br>    html<span class="token operator">=</span>response<span class="token punctuation">.</span>text<br>    <span class="token keyword">return</span> html<br><span class="token comment"># print(html)</span></p><p><span class="token triple-quoted-string string">“””解析网页获取到该页面的所有图片链接”””</span><br><span class="token keyword">def</span> <span class="token function">getdata</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span><br>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">“html.parser”</span><span class="token punctuation">)</span><br>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><br>    <span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">“img”</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">“alignnone size-full”</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>        <span class="token comment"># print(item)</span><br>        item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><br>        link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findImgsrc<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><br>        datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">“<a href="https://www.vmgirls.com/&quot;" target="_blank" rel="noopener">https://www.vmgirls.com/"</a></span> <span class="token operator">+</span> link<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">)</span></p><pre><code>&lt;span class="token keyword"&gt;for&lt;/span&gt; item &lt;span class="token keyword"&gt;in&lt;/span&gt; re&lt;span class="token punctuation"&gt;.&lt;/span&gt;findall&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;'&amp;lt;a href="(.*?)" alt=".*?" title=".*?"&amp;gt;'&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; html&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;    &lt;span class="token comment"&gt;# print(item)&lt;/span&gt;    datas&lt;span class="token punctuation"&gt;.&lt;/span&gt;append&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token string"&gt;"https://www.vmgirls.com/"&lt;/span&gt; &lt;span class="token operator"&gt;+&lt;/span&gt; item&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token comment"&gt;# print(datas)&lt;/span&gt;&lt;span class="token keyword"&gt;return&lt;/span&gt;  datas</code></pre><p><span class="token triple-quoted-string string">“””解析网页获取到所有页面的URL”””</span><br><span class="token keyword">def</span> <span class="token function">getlink</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span><br>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">“html.parser”</span><span class="token punctuation">)</span><br>    datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><br>    <span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">“a”</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">“media-content”</span><span class="token punctuation">)</span><span class="token punctuation">:</span><br>        item <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><br>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span><br>            link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>findLink<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><br>            newlink<span class="token operator">=</span><span class="token string">“<a href="https://www.vmgirls.com/&quot;" target="_blank" rel="noopener">https://www.vmgirls.com/"</a></span> <span class="token operator">+</span> link<br>            <span class="token keyword">if</span> newlink <span class="token operator">not</span> <span class="token keyword">in</span> datas<span class="token punctuation">:</span><br>                datas<span class="token punctuation">.</span>append<span class="token punctuation">(</span>newlink<span class="token punctuation">)</span><br>    <span class="token comment"># print(datas)</span><br>    <span class="token keyword">return</span>  datas</p><p><span class="token triple-quoted-string string">“””创建文件夹名称”””</span><br><span class="token keyword">def</span> <span class="token function">createdir</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span><br>    dir_name<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">‘&lt;h1 class=”post-title h3”&gt;(.*?)&lt;/h1&gt;’</span><span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><br>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span><br>        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><br>    <span class="token keyword">return</span> dir_name</p><p><span class="token triple-quoted-string string">“””保存图片”””</span><br><span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>datas<span class="token punctuation">,</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span><br>    <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span><br>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><br>        file_name<span class="token operator">=</span>data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">“/“</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><br>        <span class="token comment"># print(data)</span><br>        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>data<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers2<span class="token punctuation">)</span><br>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>dir_name<span class="token operator">+</span><span class="token string">‘/‘</span><span class="token operator">+</span>file_name<span class="token punctuation">,</span><span class="token string">‘wb’</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span><br>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span><br>        <span class="token keyword">print</span><span class="token punctuation">(</span>file_name<span class="token operator">+</span><span class="token string">“下载成功”</span><span class="token punctuation">)</span></p><p><span class="token keyword">if</span> <strong>name</strong> <span class="token operator">==</span> <span class="token string">‘<strong>main</strong>‘</span><span class="token punctuation">:</span><br>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><br>    <span class="token comment"># init_db(“movietest.db”)</span><br>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">“爬取完毕”</span><span class="token punctuation">)</span></p><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li><li style="color: rgb(153, 153, 153);">67</li><li style="color: rgb(153, 153, 153);">68</li><li style="color: rgb(153, 153, 153);">69</li><li style="color: rgb(153, 153, 153);">70</li><li style="color: rgb(153, 153, 153);">71</li><li style="color: rgb(153, 153, 153);">72</li><li style="color: rgb(153, 153, 153);">73</li><li style="color: rgb(153, 153, 153);">74</li><li style="color: rgb(153, 153, 153);">75</li><li style="color: rgb(153, 153, 153);">76</li><li style="color: rgb(153, 153, 153);">77</li><li style="color: rgb(153, 153, 153);">78</li><li style="color: rgb(153, 153, 153);">79</li><li style="color: rgb(153, 153, 153);">80</li><li style="color: rgb(153, 153, 153);">81</li><li style="color: rgb(153, 153, 153);">82</li><li style="color: rgb(153, 153, 153);">83</li><li style="color: rgb(153, 153, 153);">84</li><li style="color: rgb(153, 153, 153);">85</li><li style="color: rgb(153, 153, 153);">86</li><li style="color: rgb(153, 153, 153);">87</li><li style="color: rgb(153, 153, 153);">88</li><li style="color: rgb(153, 153, 153);">89</li><li style="color: rgb(153, 153, 153);">90</li><li style="color: rgb(153, 153, 153);">91</li><li style="color: rgb(153, 153, 153);">92</li><li style="color: rgb(153, 153, 153);">93</li><li style="color: rgb(153, 153, 153);">94</li><li style="color: rgb(153, 153, 153);">95</li><li style="color: rgb(153, 153, 153);">96</li><li style="color: rgb(153, 153, 153);">97</li><li style="color: rgb(153, 153, 153);">98</li><li style="color: rgb(153, 153, 153);">99</li><li style="color: rgb(153, 153, 153);">100</li><li style="color: rgb(153, 153, 153);">101</li><li style="color: rgb(153, 153, 153);">102</li><li style="color: rgb(153, 153, 153);">103</li><li style="color: rgb(153, 153, 153);">104</li></ul></pre><h1><a name="t7"></a><a name="t7"></a><a id="3_322"></a>3.效果展示</h1> <p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20200813202248516.gif#pic_center" alt="在这里插入图片描述"></p> <script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的一些基本操作</title>
      <link href="/2020/10/27/git/"/>
      <url>/2020/10/27/git/</url>
      
        <content type="html"><![CDATA[<h1 id="Git教程"><a href="#Git教程" class="headerlink" title="Git教程"></a>Git教程</h1><h2 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1.Git简介"></a>1.Git简介</h2><blockquote><p>Git是什么？</p></blockquote><p>Git是目前世界上最先进的分布式版本控制系统（没有之一）。</p><blockquote><p>Git有什么特点？</p></blockquote><p>简单来说就是：高端大气上档次！</p><h3 id="1-1Git的诞生"><a href="#1-1Git的诞生" class="headerlink" title="1.1Git的诞生"></a>1.1Git的诞生</h3><p>很多人都知道，Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。</p><p>Linus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？</p><p>事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！</p><p>你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。</p><p>不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。</p><p>安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。</p><p>Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：</p><p>Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。</p><p>Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。</p><p>历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了。</p><h3 id="1-2集中式vs分布式"><a href="#1-2集中式vs分布式" class="headerlink" title="1.2集中式vs分布式"></a>1.2集中式vs分布式</h3><p>集中式版本控制系统，版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆。<br>集中式版本控制系统最大的毛病就是必须联网才能工作，如果在局域网内还好，带宽够大，速度够快，可如果在互联网上，遇到网速慢的话，可能提交一个10M的文件就需要5分钟，这还不得把人给憋死啊。</p><p>那分布式版本控制系统与集中式版本控制系统有何不同呢？首先，分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样，你工作的时候，就不需要联网了，因为版本库就在你自己的电脑上。既然每个人电脑上都有一个完整的版本库，那多个人如何协作呢？比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p><p>和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。</p><p>在实际使用分布式版本控制系统的时候，其实很少在两人之间的电脑上推送版本库的修改，因为可能你们俩不在一个局域网内，两台电脑互相访问不了，也可能今天你的同事病了，他的电脑压根没有开机。因此，分布式版本控制系统通常也有一台充当“中央服务器”的电脑，但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活，只是交换修改不方便而已。</p><h2 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h2><p><strong>在Linux上安装Git</strong></p><pre><code>sudo apt-get install git</code></pre><p>如果是其他Linux版本，可以直接通过源码安装。先从Git官网下载源码，然后解压，依次输入：</p><pre><code>./config，make，sudo make install</code></pre><p>这几个命令安装就好了。</p><p><strong>windows安装Git</strong></p><p>在Windows上使用Git，可以从Git官网直接下载安装程序，然后按默认选项安装即可。</p><p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</p><p>安装完成后，还需要最后一步设置，在命令行输入：</p><pre><code>$ git config --global user.name "Your Name"$ git config --global user.email "email@example.com"</code></pre><h2 id="3-创建版本库"><a href="#3-创建版本库" class="headerlink" title="3.创建版本库"></a>3.创建版本库</h2><p>初始化一个Git仓库，使用git init命令。</p><p>添加文件到Git仓库，分两步：</p><ol><li>使用命令git add <file>，注意，可反复多次使用，添加多个文件；</file></li><li>使用命令git commit -m <message>，完成。</message></li></ol><h2 id="4-时光穿梭机"><a href="#4-时光穿梭机" class="headerlink" title="4.时光穿梭机"></a>4.时光穿梭机</h2><h3 id="4-1版本回退"><a href="#4-1版本回退" class="headerlink" title="4.1版本回退"></a>4.1版本回退</h3><ul><li><p><code>HEAD</code>指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</p></li><li><p>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</p></li><li><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本。</p></li></ul><h3 id="4-2工作区和暂存区"><a href="#4-2工作区和暂存区" class="headerlink" title="4.2工作区和暂存区"></a>4.2工作区和暂存区</h3><p>Git和其他版本控制系统如SVN的一个不同之处就是有暂存区的概念。</p><p>先来看名词解释。<br><strong>工作区（Working Directory）</strong></p><p>就是你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://static.liaoxuefeng.com/files/attachments/919021113952544/0" alt=""></p><p><strong>版本库（Repository）</strong></p><p>工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。</p><p>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫</p><p>index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指</p><p>向master的一个指针叫HEAD。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://static.liaoxuefeng.com/files/attachments/919020037470528/0" alt=""></p><p>分支和HEAD的概念我们以后再讲。</p><p>前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：</p><p>第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；</p><p>第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p><p>因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。</p><p>你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p><p>俗话说，实践出真知。现在，我们再练习一遍，先对readme.txt做个修改，比如加上一行内容：</p><pre><code>Git is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.</code></pre><p>然后，在工作区新增一个LICENSE文本文件（内容随便写）。</p><p>先用git status查看一下状态：</p><pre><code>$ git statusOn branch masterChanges not staged for commit:  (use "git add &lt;file&gt;..." to update what will be committed)  (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)    modified:   readme.txtUntracked files:  (use "git add &lt;file&gt;..." to include in what will be committed)    LICENSEno changes added to commit (use "git add" and/or "git commit -a")</code></pre><p>Git非常清楚地告诉我们，readme.txt被修改了，而LICENSE还从来没有被添加过，所以它的状态是Untracked。</p><p>现在，使用两次命令git add，把readme.txt和LICENSE都添加后，用git status再查看一下：</p><pre><code>$ git statusOn branch masterChanges to be committed:  (use "git reset HEAD &lt;file&gt;..." to unstage)    new file:   LICENSE    modified:   readme.txt</code></pre><p>现在，暂存区的状态就变成这样了：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://static.liaoxuefeng.com/files/attachments/919020074026336/0" alt=""></p><p>所以，git add命令实际上就是把要提交的所有修改放到暂存区（Stage），然后，执行git commit就可以一次性把暂存区的所有修改提交到分支。</p><pre><code>$ git commit -m "understand how stage works"[master e43a48b] understand how stage works 2 files changed, 2 insertions(+) create mode 100644 LICENSE</code></pre><p>一旦提交后，如果你又没有对工作区做任何修改，那么工作区就是“干净”的：</p><pre><code>$ git statusOn branch masternothing to commit, working tree clean</code></pre><p>现在版本库变成了这样，暂存区就没有任何内容了：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://static.liaoxuefeng.com/files/attachments/919020100829536/0" alt=""></p><h3 id="4-3管理修改"><a href="#4-3管理修改" class="headerlink" title="4.3管理修改"></a>4.3管理修改</h3><p>第一次修改 -&gt; <code>git add</code> -&gt; 第二次修改 -&gt; <code>git commit</code></p><p>Git管理的是修改，当你用<code>git add</code>命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在工作区的第二次修改并没有放入暂存区，所以，<code>git commit</code>只负责把暂存区的修改提交了，也就是第一次的修改被提交了，第二次的修改不会被提交。</p><p>那怎么提交第二次修改呢？你可以继续<code>git add</code>再<code>git commit</code>，也可以别着急提交第一次修改，先<code>git add</code>第二次修改，再<code>git commit</code>，就相当于把两次修改合并后一块提交了：</p><p>第一次修改 -&gt; git add -&gt; 第二次修改 -&gt; git add -&gt; git commit</p><h3 id="4-4撤销修改"><a href="#4-4撤销修改" class="headerlink" title="4.4撤销修改"></a>4.4撤销修改</h3><p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p><p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，就回到了场景1，第二步按场景1操作。</p><p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</p><h3 id="4-5删除文件"><a href="#4-5删除文件" class="headerlink" title="4.5删除文件"></a>4.5删除文件</h3><p>命令<code>git rm</code>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</p><h2 id="5-远程仓库"><a href="#5-远程仓库" class="headerlink" title="5.远程仓库"></a>5.远程仓库</h2><h3 id="5-1添加远程库"><a href="#5-1添加远程库" class="headerlink" title="5.1添加远程库"></a>5.1添加远程库</h3><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>；</p><p>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容；</p><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；</p><p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！</p><h3 id="5-2从远程库克隆"><a href="#5-2从远程库克隆" class="headerlink" title="5.2从远程库克隆"></a>5.2从远程库克隆</h3><p>克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p><p>Git支持多种协议，包括<code>https</code>，但<code>ssh</code>协议速度最快。</p><pre><code>$ git clone git@github.com:michaelliao/gitskills.gitCloning into 'gitskills'...remote: Counting objects: 3, done.remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 3Receiving objects: 100% (3/3), done.</code></pre><h2 id="6-分支管理"><a href="#6-分支管理" class="headerlink" title="6.分支管理"></a>6.分支管理</h2><h3 id="6-1创建与合并分支"><a href="#6-1创建与合并分支" class="headerlink" title="6.1创建与合并分支"></a>6.1创建与合并分支</h3><p>Git鼓励大量使用分支：</p><p>查看分支：<code>git branch</code></p><p>创建分支：<code>git branch &lt;name&gt;</code></p><p>切换分支：<code>git checkout &lt;name&gt;</code>或者<code>git switch &lt;name&gt;</code></p><p>创建+切换分支：<code>git checkout -b &lt;name&gt;</code>或者<code>git switch -c &lt;name&gt;</code></p><p>合并某分支到当前分支：<code>git merge &lt;name&gt;</code></p><p>删除分支：<code>git branch -d &lt;name&gt;</code></p><h3 id="6-2解决冲突"><a href="#6-2解决冲突" class="headerlink" title="6.2解决冲突"></a>6.2解决冲突</h3><p>当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。</p><p>解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。</p><p>用<code>git log --graph</code>命令可以看到分支合并图。</p><h3 id="6-3分支管理策略"><a href="#6-3分支管理策略" class="headerlink" title="6.3分支管理策略"></a>6.3分支管理策略</h3><p>Git分支十分强大，在团队开发中应该充分应用。</p><p>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fast forward</code>合并就看不出来曾经做过合并。</p><h3 id="6-4Bug分支"><a href="#6-4Bug分支" class="headerlink" title="6.4Bug分支"></a>6.4Bug分支</h3><p>修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；</p><p>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复bug，修复后，再<code>git stash pop</code>，回到工作现场；</p><p>在master分支上修复的bug，想要合并到当前dev分支，可以用<code>git cherry-pick &lt;commit&gt;</code>命令，把bug提交的修改“复制”到当前分支，避免重复劳动。</p><h3 id="6-5Feature分支"><a href="#6-5Feature分支" class="headerlink" title="6.5Feature分支"></a>6.5Feature分支</h3><p>开发一个新feature，最好新建一个分支；</p><p>如果要丢弃一个没有被合并过的分支，可以通过<code>git branch -D &lt;name&gt;</code>强行删除。</p><h3 id="6-6多人协作"><a href="#6-6多人协作" class="headerlink" title="6.6多人协作"></a>6.6多人协作</h3><ul><li><p>查看远程库信息，使用<code>git remote -v</code>；</p></li><li><p>本地新建的分支如果不推送到远程，对其他人就是不可见的；</p></li><li><p>从本地推送分支，使用<code>git push origin branch-name</code>，如果推送失败，先用<code>git pull</code>抓取远程的新提交；</p></li><li><p>在本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致；</p></li><li><p>建立本地分支和远程分支的关联，使用<code>git branch --set-upstream branch-name origin/branch-name</code>；</p></li><li><p>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</p></li></ul><h3 id="6-7Rebase"><a href="#6-7Rebase" class="headerlink" title="6.7Rebase"></a>6.7Rebase</h3><ul><li><p>rebase操作可以把本地未push的分叉提交历史整理成直线；</p></li><li><p>rebase的目的是使得我们在查看历史提交的变化时更容易，因为分叉的提交需要三方对比。</p></li></ul><h2 id="7-标签管理"><a href="#7-标签管理" class="headerlink" title="7.标签管理"></a>7.标签管理</h2><h3 id="7-1创建标签"><a href="#7-1创建标签" class="headerlink" title="7.1创建标签"></a>7.1创建标签</h3><ul><li><p>命令<code>git tag &lt;tagname&gt;</code>用于新建一个标签，默认为<code>HEAD</code>，也可以指定一个<code>commit id</code>；</p></li><li><p>命令<code>git tag -a &lt;tagname&gt; -m "blablabla..."</code>可以指定标签信息；</p></li><li><p>命令<code>git tag</code>可以查看所有标签。</p></li></ul><h3 id="7-2操作标签"><a href="#7-2操作标签" class="headerlink" title="7.2操作标签"></a>7.2操作标签</h3><ul><li><p>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签；</p></li><li><p>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签；</p></li><li><p>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签；</p></li><li><p>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</p></li></ul><h2 id="8-使用Github"><a href="#8-使用Github" class="headerlink" title="8.使用Github"></a>8.使用Github</h2><p>我们一直用GitHub作为免费的远程仓库，如果是个人的开源项目，放到GitHub上是完全没有问题的。其实GitHub还是一个开源协作社区，通过GitHub，既可以让别人参与你的开源项目，也可以参与别人的开源项目。</p><p>在GitHub出现以前，开源项目开源容易，但让广大人民群众参与进来比较困难，因为要参与，就要提交代码，而给每个想提交代码的群众都开一个账号那是不现实的，因此，群众也仅限于报个bug，即使能改掉bug，也只能把diff文件用邮件发过去，很不方便。</p><p>但是在GitHub上，利用Git极其强大的克隆和分支功能，广大人民群众真正可以第一次自由参与各种开源项目了。</p><p>如何参与一个开源项目呢？比如人气极高的bootstrap项目，这是一个非常强大的CSS框架，你可以访问它的项目主页<a href="https://github.com/twbs/bootstrap" target="_blank" rel="noopener">https://github.com/twbs/bootstrap</a>，点“Fork”就在自己的账号下克隆了一个bootstrap仓库，然后，从自己的账号下clone：</p><pre><code>git clone git@github.com:michaelliao/bootstrap.git</code></pre><p>一定要从自己的账号下clone仓库，这样你才能推送修改。如果从bootstrap的作者的仓库地址<code>git@github.com:twbs/bootstrap.git</code>克隆，因为没有权限，你将不能推送修改。</p><p>如果你想修复bootstrap的一个bug，或者新增一个功能，立刻就可以开始干活，干完后，往自己的仓库推送。</p><p>如果你希望bootstrap的官方库能接受你的修改，你就可以在GitHub上发起一个pull request。当然，对方是否接受你的pull request就不一定了。</p><h2 id="9-Gitee"><a href="#9-Gitee" class="headerlink" title="9.Gitee"></a>9.Gitee</h2><p>使用GitHub时，国内的用户经常遇到的问题是访问速度太慢，有时候还会出现无法连接的情况（原因你懂的）。</p><p>如果我们希望体验Git飞一般的速度，可以使用国内的Git托管服务——Gitee（gitee.com）。</p><p>和GitHub相比，Gitee也提供免费的Git仓库。此外，还集成了代码质量检测、项目演示等功能。对于团队协作开发，Gitee还提供了项目管理、代码托管、文档管理的服务，5人以下小团队免费。</p><h2 id="10-总结"><a href="#10-总结" class="headerlink" title="10.总结"></a>10.总结</h2><p>Git虽然极其强大，命令繁多，但常用的就那么十来个，掌握好这十几个常用命令，你已经可以得心应手地使用Git了。</p><p>友情附赠国外网友制作的Git Cheat Sheet，建议打印出来备用：<br><a href="https://gitee.com/liaoxuefeng/learn-java/raw/master/teach/git-cheatsheet.pdf" target="_blank" rel="noopener">https://gitee.com/liaoxuefeng/learn-java/raw/master/teach/git-cheatsheet.pdf</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 野生技术产业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑来语录</title>
      <link href="/2020/10/26/jian-lai-yu-lu/"/>
      <url>/2020/10/26/jian-lai-yu-lu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>1、某些人和事，哪怕是路边的风景，可是只要看一眼，依然会让人觉得很美好。</p></blockquote><blockquote><p>2、不要把陌生人的些许善意，视为珍稀的瑰宝；却把身边亲近人的全部付出，当做天经地义的事情，对其视而不见。</p></blockquote><blockquote><p>3、有些人心如花木，皆向阳而生。</p></blockquote><blockquote><p>4、言念君子，温其如玉。</p></blockquote><blockquote><p>5、遇事不决，可问春风。</p></blockquote><blockquote><p>6、是你的就好好抓住，不是你的就不要多想。 天底下没谁是欠你的，但是你欠了别人，就别不当回事。</p></blockquote><blockquote><p>7、认定一件事，即使拿十分力气都无法完成，也要拿出十二分力气去努力。</p></blockquote><blockquote><p>8、有心为善虽善不赏，无心为恶虽恶不罚。人力有穷尽之时，尽力又尽心了，就不用太愧疚。</p></blockquote><blockquote><p>9、总有些人，一眼看到就会心生好感，道理都讲不通。</p></blockquote><blockquote><p>10、有聚终有散，人生就是一场场折柳。 岁月长河里，仿佛存在着一座座杨柳依依的渡口，每一段光阴逆旅当中，会有人离船而去，有人登船作伴，然后在下一座渡口又有新的聚散离别。</p></blockquote><blockquote><p>11、真正的强者，愿意以弱者的自由为边界。</p></blockquote><blockquote><p>12、混吃等死，小富即安，飞黄腾达，是因为各有各的缘法，未必有高下之分。</p></blockquote><blockquote><p>13、该是你的，就拿好别丢。不该是你的，想都别想。</p></blockquote><blockquote><p>14、修心，亦是修行之一。顺境修力，逆境修心，缺一不可。</p></blockquote><blockquote><p>15、君子坐而论道，少年起而行之。</p></blockquote><blockquote><p>16、是非功过有人心，善恶斤两问阎王。为何有此说？因为每个人的道德修养、成长经历、眼界阅历都会不同，人心起伏不定，有几人敢自称自己的良心，最为中正平和？有些违心的事情，一步都不要走出去。</p></blockquote><blockquote><p>17、看似与人为善、心肠柔软之人，必然有一块坚硬如铁的心境土壤，在苦难人生中，死死支撑着那份看似愚蠢的善意。18、有些事情，死了也要做。但有些事情，是死也不能做的。</p></blockquote><blockquote><p>19、我想变成一棵树，开心时，在秋天开花；伤心时，在春天落叶。</p></blockquote><blockquote><p>20、对的就是对的，错的就是错的，好的就应该珍惜，怎么珍惜都不为过。</p></blockquote><blockquote><p>21、粗粮可以养胃，书籍可以养气，景致可以养心。</p></blockquote><blockquote><p>22、当我们对这个世界给予善意后，如果非但没有得到善意的回报，甚至只有恶意，这个时候，能够不失望，才是真正的希望。</p></blockquote><blockquote><p>23、有些善意，就跟春寒料峭的阳光一样，虽说在与不在，差别不是很大，可为什么要拒绝呢？</p></blockquote><blockquote><p>24、不被喜欢的姑娘喜欢，是一件很伤心的事情，可天没有塌下来，该怎么活，还得怎么活。</p></blockquote><blockquote><p>25、杀人放火金腰带，修路铺桥无骸骨。</p></blockquote><blockquote><p>26、命里八分，莫求一丈。</p></blockquote><blockquote><p>27、真正的强者不在于什么无敌，而在于活着，输得再惨都别死了，而是每次都能够站起来，再次愤然出拳出剑！</p></blockquote><blockquote><p>28、知而不行，谓之不诚。 行而不成，谓之不能。 知而行，是赤诚之心，行而能，是贯彻到底，已经很难被其他人和事影响了。 而知行合一的前提是，格物致知，将一件事研究到极致，变成自己的知识。 比如做菜，将做菜这门手艺做到尽善尽美，色香味无可挑剔；比如建筑，将楼宇亭台建得坚固美观使用，美轮美奂，风雨不倒地震不塌；比如造船，将造船原理吃透，用料坚固，风浪不沉。 这便是格物致知，将一件东西一件事情研究到极点，明白其中所有的道理。做到格物致知，方能知行合一。</p></blockquote><blockquote><p>29、当这个世界给予自己善意的时候，一定要好好珍惜，要惜福，无论大小。</p></blockquote><blockquote><p>30、凡夫俗子不下苦功夫、死力气去努力做成一件事，根本就没资格去谈什么天赋不天赋。</p></blockquote><blockquote><p>31、有些人，只是夹杂在稻谷之中的一株稗草，被人看过一眼，就再无第二眼。</p></blockquote><blockquote><p>32、与善人居，如入芝兰之室，久而自芳矣。</p></blockquote><blockquote><p>33、老天爷不给公道，没事，我自己去要，能要多少是多少。</p></blockquote><blockquote><p>34、人生在世，很多人做很多事，吃苦就是吃苦，只是吃苦而已。一分耕耘一分收获？得看喜欢打盹的老天爷答应不答应。</p></blockquote><blockquote><p>35、吃得苦中苦方为人上人，我辈武人，想要往上走，在登顶之前，就要去当一条路边刨食求活的野狗！要告诉自己，要想痛痛快快活着，就必须跟天地大道争！跟狗屁神仙争！跟同辈武夫争！最后还要跟自己争！争那一口气！</p></blockquote><blockquote><p>36、世间父亲皆英雄。</p></blockquote><blockquote><p>37、文字在有些时候，恰恰会是我们认识这个世界的无形障碍。所以你以后读书的时候，不要时时刻刻都去咬文嚼字，若是遇到了瓶颈，不妨先退一步，再登高数步，尽量往高处走一走，不登山峰，不显平地。</p></blockquote><blockquote><p>38、开玩笑没关系，但是切记言多必失。世间一个个文字，是有力量的。字眼组合成词，词汇串联成句，语句契合成文章。大道就在其中。</p></blockquote><blockquote><p>39、有些人总是这么不一样，看了一眼，就能让人记住很多年。而有些人，哪怕看了再多年，也没在心头住下。</p></blockquote><blockquote><p>40、不妨试试看，反正事情已经不能再糟糕了。而有些事，不是你想躲就躲得掉的。人生在世，遇到一个坎不怕，努力走过去就是了，过不过得去，两说，你好歹尝试过。41、人情送头牛，买卖不饶针。</p></blockquote><blockquote><p>42、有些人之间，注定只要相逢，就是对的。如果还能重逢，就是最好的。</p></blockquote><blockquote><p>43、一些美好事情，如果是在别人身上流露出来的，羡慕过后，那就去学，至于学不学得来，努力之后再说。多简单的事情。</p></blockquote><blockquote><p>44、自童年起，我就独自一人，照看历代星辰。</p></blockquote><blockquote><p>45、朋友之间提谢字，多伤感情，这就跟男女之间谈一个钱字，是一样的。</p></blockquote><blockquote><p>46、人在伤心的时候，千万不要喝酒，容易变烂酒鬼。快意的事情，可以喝酒，说不定喝着喝着，就成了酒仙。</p></blockquote><blockquote><p>47、该省之省，一文铜钱，即是家族根本。该花则花，一掷千金，根本无需眨眼。</p></blockquote><blockquote><p>48、百事忙千事忧，到头来万事休，天凉好个秋呀好个秋！</p></blockquote><blockquote><p>49、有些可惜，是没办法十全十美。有些可惜，是某些长久的遗憾。</p></blockquote><blockquote><p>50、人都会长大的，长大了之后，就会捡起一些新东西，丢掉一些旧东西，就这么丢丢捡捡，哗啦一下子，就老喽。</p></blockquote><blockquote><p>51、有些委屈，无论大小，只有受过同样委屈的人，才可以真正体会。否则旁人再好的善心善意，恐怕都无法让人真正心安。</p></blockquote><blockquote><p>52、如果你的朋友过得比你好，好很多，好到让你望尘莫及，一辈子追不上，那么你心里头会不会一点点别扭？</p></blockquote><blockquote><p>53、怎么挣钱是一回事，锱铢必较，哪怕一颗铜钱都需要跟人算清楚，可是有了钱怎么花，就看各自习惯了。像我，一年到头确实在拼命赚钱，图什么？就是为了自己能够不用在交朋友这种事上，太小气，还要计较一个钱字。</p></blockquote><blockquote><p>54、有些事情，不去做，心里不痛快。可有些事情，再不痛快，也只能忍着。</p></blockquote><blockquote><p>55、女子总爱在情爱一事上动脑筋，男子喜好在江山一事上花心思。</p></blockquote><blockquote><p>56、我们活在一个很复杂的世道里，很多人的言行，哪怕是学问极高的读书人，还是会自相矛盾，我们看多了没甚道理的事情，难免会问，是不是书上的道理，是错的，或者说，是那些道理还没有说透，没有说全。</p></blockquote><blockquote><p>57、我们该怎么看待这个许多嘴上讲道理、做事没道理的世界？办法是有的，一种是活得纯粹，我拳头很硬，剑术很强，道法很强，就用这些来打破一些东西。复杂问题给简单解决掉，只要我开心就好。天地有规矩约束我，我便一拳打破，世间有大道压我，我有一剑破万法。哪怕暂时做到如此酣畅淋漓，可总是如此想，坚定不移，一直朝这个方向走在道路上。这种人可以有，但是不能人人如此的。另一种是活得很聪明，怎么省心省力怎么来，规矩二字，就是用来钻漏洞的。</p></blockquote><blockquote><p>58、人间万事细如毛，我有小事大如斗。</p></blockquote><blockquote><p>59、归根结底，长得好，无论男女，怎么都是对的，长得不好看，大概就是万般皆罪。</p></blockquote><blockquote><p>60、人情世情，最难讲理。 因为一旦真要掰碎了讲道理，好像酒水分了家，没滋没味。所以说世间的祖荫福缘，哪怕送到了子孙手上，还是各人有各命，有些人抓得住，有些人抓不住，有人抓得多有人抓得少，而且这种事情，往往当事人在当下只会浑然不知，只能凭本心而为。</p></blockquote><blockquote><p>61、对世界不要失去希望，除了一定要好好活着之外，其实还有一层意思，就是当我们对这个世界给予善意后，如果非但没有得到善意的回报，甚至只有恶意，这个时候，能够不失望，才是真正的希望。</p></blockquote><blockquote><p>62、因为他从来懒得跟人讲道理。打不过人家，讲道理不管用；打得过人家，讲道理好像没必要。</p></blockquote><blockquote><p>63、男子下等眼光，只看女子脸面，中等眼光，看那身段，上等眼光，看女子神意。</p></blockquote><blockquote><p>64、一个随便把别人当朋友的人,往往不会有真正的朋友。一个喜欢嘴上称兄道弟的人,心里其实没有真正的兄弟。</p></blockquote><blockquote><p>65、一个人，哪能什么都不麻烦别人，偶尔有个一两次，不用太愧疚。66、有些离别，就不希望再碰面，但往往在不经意间就不期而遇了。有些明明希望可以再见的分别，却偏偏不会有再会了。</p></blockquote><blockquote><p>67、这个世界，一直亏欠着好人。对对错错，怎么会没有呢？只是我们不远去深究罢了。嘴上可以不谈，甚至故意颠倒黑白，可心里要有数啊。只可惜世事多无奈，聪明人越来越多，心眼心窍多如莲蓬者，往往喜欢讥讽醇厚，否认纯粹的善意，厌恶他人的赤诚。</p></blockquote><blockquote><p>68、你如何看待这个世界，世界就会如何看你。</p></blockquote><blockquote><p>69、苦难一事，世间何其多，有何奇怪？任何一个身世坎坷的孩子，谁缺这个？可奇怪之处，在于吃苦二字，怎么一个吃法。人间苦难，不消说也，说不得也。</p></blockquote><blockquote><p>70、人吃土一辈子，土吃人一回。</p></blockquote><blockquote><p>71、读过多少书，就敢说这个世道‘就是这样的’，见过多少人，就敢说男人女人‘都是这般德行’？你亲眼见过多少太平和苦难，就敢断言他人的善恶？</p></blockquote><blockquote><p>72、做生意，熟人登门，绝不可以杀熟，但是也不可以不收钱，不赚不亏，是最好的。否则越做生意，就越没朋友。你次次亏本，那人还喜欢时时登门，证明对方不把你当朋友。你次次赚得比平时还多，那就更明白了，你根本不曾将那人当做朋友，若是这般，反而爽利。若是前者，就要揪心了。</p></blockquote><blockquote><p>73、有些修士，要么清心寡欲，不问世事，要么恪守规矩，愿意为了人间的太平，让自己活得没那么痛快，不去追求绝对的自由。世间百态，各有所求，是非对错，一团浆糊。 因为有太多人，道理只是说给别人听的，而不是用来约束自己的本心。 山上山下皆如此。74、喝了酒，就敢想不敢想的，敢说不敢说的，敢做不敢做的。</p></blockquote><blockquote><p>75、万事莫走极端。与人讲道理，最怕“我要道理全占尽”。最怕一旦与人交恶，便全然不见其善。庙堂之上，党争，甚至是被后世视为君子之争的党争，为何还是遗祸极长，就在于君子贤人，在这些事情上，同样做得不对。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑来 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/2020/10/25/zheng-ze-biao-da-shi/"/>
      <url>/2020/10/25/zheng-ze-biao-da-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p><strong>目录 (Table of Contents)</strong></p><p>#L.jj<br>字符串是编程时涉及到的最多的一种数据结构，对字符串进行操作的需求几乎无处不在。比如判断一个字符串是否是合法的Email地址，虽然可以编程提取@前后的子串，再分别判断是否是单词和域名，但这样做不但麻烦，而且代码难以复用。</p><p>正则表达式是一种用来匹配字符串的强有力的武器。它的设计思想是用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，我们就认为它“匹配”了，否则，该字符串就是不合法的。</p><p>所以我们判断一个字符串是否是合法的Email的方法是：</p><p>  1.创建一个匹配Email的正则表达式；</p><p>  2.用该正则表达式去匹配用户的输入来判断是否合法。</p><p>因为正则表达式也是用字符串表示的，所以，我们要首先了解如何用字符来描述字符。</p><p>在正则表达式中，如果直接给出字符，就是精确匹配。用\d可以匹配一个数字，\w可以匹配一个字母或数字，所以：</p><ul><li><code>'00\d'</code>可以匹配<code>'007'</code>，但无法匹配<code>'00A'</code></li><li><code>'\d\d\d'</code>可以匹配<code>'010'</code></li><li><code>'\w\w\w'</code>可以匹配<code>'py3'</code></li></ul><p><code>.</code>可以匹配任意字符，所以：</p><ul><li><code>'py.'</code>可以匹配<code>'pyc'</code>，<code>'pyo'</code>，<code>'py!'</code>等等。</li></ul><p>要匹配变长的字符，在正则表达式中，用<code>*</code>表示任意个字符（包括0个），用<code>+</code>表示至少一个字符，用<code>?</code>表示0个或1个字符，用<code>{n}</code>表示n个字符，用<code>{n,m}</code>表示n-m个字符：</p><p>来看一个复杂的例子：<code>\d{3}\s+\d{3,8}</code>。</p><p>我们来从左到右解读一下：</p><p>   1.<code>\d{3}</code>表示匹配3个数字，例如<code>'010'</code>；</p><p>   2.<code>\s</code>可以匹配一个空格（也包括Tab等空白符），所以<code>\s+</code>表示至少有一个空格，例如匹配<code>' '</code>，<code>' '</code>等；</p><p>   3.<code>\d{3,8}</code>表示3-8个数字，例如<code>'1234567'</code>。</p><p>综合起来，上面的正则表达式可以匹配以任意个空格隔开的带区号的电话号码。</p><p>如果要匹配<code>'010-12345'</code>这样的号码呢？由于<code>'-'</code>是特殊字符，在正则表达式中，要用<code>'\'</code>转义，所以，上面的正则是<code>\d{3}\-\d{3,8}</code>。</p><p>但是，仍然无法匹配<code>'010 - 12345'</code>，因为带有空格。所以我们需要更复杂的匹配方式。<br>进阶</p><p>要做更精确地匹配，可以用<code>[]</code>表示范围，比如：</p><ul><li><p><code>[0-9a-zA-Z\_]</code>可以匹配一个数字、字母或者下划线；</p></li><li><p><code>[0-9a-zA-Z\_]+</code>可以匹配至少由一个数字、字母或者下划线组成的字符串，比如<code>'a100'</code>，<code>'0_Z'</code>，<code>'Py3000'</code>等等；</p></li><li><p><code>[a-zA-Z\_][0-9a-zA-Z\_]*</code>可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量；</p></li><li><p><code>[a-zA-Z\_][0-9a-zA-Z\_]{0, 19}</code>更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）。</p></li></ul><p><code>A|B</code>可以匹配A或B，所以<code>(P|p)ython</code>可以匹配<code>'Python'</code>或者<code>'python'</code>。</p><p><code>^</code>表示行的开头，<code>^\d</code>表示必须以数字开头。</p><p><code>$</code>表示行的结束，<code>\d$</code>表示必须以数字结束。</p><p>你可能注意到了，<code>py</code>也可以匹配<code>'python'</code>，但是加上<code>^py$</code>就变成了整行匹配，就只能匹配<code>'py'</code>了。</p><h1 id="re模块"><a href="#re模块" class="headerlink" title="re模块"></a>re模块</h1><p>有了准备知识，我们就可以在Python中使用正则表达式了。Python提供<code>re</code>模块，包含所有正则表达式的功能。由于Python的字符串本身也用<code>\</code>转义，所以要特别注意：</p><pre><code>s = 'ABC\\-001' # Python的字符串# 对应的正则表达式字符串变成：# 'ABC\-001'</code></pre><p>因此我们强烈建议使用Python的r前缀，就不用考虑转义的问题了：</p><pre><code>s = r'ABC\-001' # Python的字符串# 对应的正则表达式字符串不变：# 'ABC\-001'</code></pre><p>先看看如何判断正则表达式是否匹配：</p><pre><code>&gt;&gt;&gt; import re&gt;&gt;&gt; re.match(r'^\d{3}\-\d{3,8}$', '010-12345')&lt;_sre.SRE_Match object; span=(0, 9), match='010-12345'&gt;&gt;&gt;&gt; re.match(r'^\d{3}\-\d{3,8}$', '010 12345')&gt;&gt;&gt;</code></pre><p><code>match()</code>方法判断是否匹配，如果匹配成功，返回一个<code>Match</code>对象，否则返回<code>None</code>。常见的判断方法就是：</p><p>test = ‘用户输入的字符串’<br>    if re.match(r’正则表达式’, test):<br>        print(‘ok’)<br>    else:<br>        print(‘failed’)</p><h1 id="切分字符串"><a href="#切分字符串" class="headerlink" title="切分字符串"></a>切分字符串</h1><p>用正则表达式切分字符串比用固定的字符更灵活，请看正常的切分代码：</p><pre><code>&gt;&gt;&gt; 'a b   c'.split(' ')['a', 'b', '', '', 'c']</code></pre><p>嗯，无法识别连续的空格，用正则表达式试试：</p><pre><code>&gt;&gt;&gt; re.split(r'\s+', 'a b   c')['a', 'b', 'c']</code></pre><p>无论多少个空格都可以正常分割。加入<code>,</code>试试：</p><pre><code>&gt;&gt;&gt; re.split(r'[\s\,]+', 'a,b, c  d')['a', 'b', 'c', 'd']</code></pre><p>再加入<code>;</code>试试：</p><pre><code>&gt;&gt;&gt; re.split(r'[\s\,\;]+', 'a,b;; c  d')['a', 'b', 'c', 'd']</code></pre><p>如果用户输入了一组标签，下次记得用正则表达式来把不规范的输入转化成正确的数组。</p><h1 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h1><p>除了简单地判断是否匹配之外，正则表达式还有提取子串的强大功能。用<code>()</code>表示的就是要提取的分组（Group）。比如：</p><p><code>^(\d{3})-(\d{3,8})$</code>分别定义了两个组，可以直接从匹配的字符串中提取出区号和本地号码：</p><pre><code>&gt;&gt;&gt; m = re.match(r'^(\d{3})-(\d{3,8})$', '010-12345')&gt;&gt;&gt; m&lt;_sre.SRE_Match object; span=(0, 9), match='010-12345'&gt;&gt;&gt;&gt; m.group(0)'010-12345'&gt;&gt;&gt; m.group(1)'010'&gt;&gt;&gt; m.group(2)'12345'</code></pre><p>如果正则表达式中定义了组，就可以在<code>Match</code>对象上用<code>group()</code>方法提取出子串来。</p><p>注意到<code>group(0)</code>永远是原始字符串，<code>group(1)</code>、<code>group(2)</code>……表示第1、2、……个子串。</p><p>提取子串非常有用。来看一个更凶残的例子：</p><pre><code>&gt;&gt;&gt; t = '19:05:30'&gt;&gt;&gt; m = re.match(r'^(0[0-9]|1[0-9]|2[0-3]|[0-9])\:(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|[0-9])\:(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|[0-9])$', t)&gt;&gt;&gt; m.groups()('19', '05', '30')</code></pre><p>这个正则表达式可以直接识别合法的时间。但是有些时候，用正则表达式也无法做到完全验证，比如识别日期：</p><pre><code>'^(0[1-9]|1[0-2]|[0-9])-(0[1-9]|1[0-9]|2[0-9]|3[0-1]|[0-9])$'</code></pre><p>对于<code>'2-30'</code>，<code>'4-31'</code>这样的非法日期，用正则还是识别不了，或者说写出来非常困难，这时就需要程序配合识别了。</p><h1 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h1><p>最后需要特别指出的是，正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符。举例如下，匹配出数字后面的<code>0</code>：</p><pre><code>&gt;&gt;&gt; re.match(r'^(\d+)(0*)$', '102300').groups()('102300', '')</code></pre><p>由于<code>\d+</code>采用贪婪匹配，直接把后面的<code>0</code>全部匹配了，结果<code>0*</code>只能匹配空字符串了。</p><p>必须让<code>\d+</code>采用非贪婪匹配（也就是尽可能少匹配），才能把后面的0匹配出来，加个<code>?</code>就可以让<code>\d+</code>采用非贪婪匹配：</p><pre><code>&gt;&gt;&gt; re.match(r'^(\d+?)(0*)$', '102300').groups()('1023', '00')</code></pre><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>当我们在Python中使用正则表达式时，re模块内部会干两件事情：</p><p>   1.编译正则表达式，如果正则表达式的字符串本身不合法，会报错；</p><p>   2.用编译后的正则表达式去匹配字符串。</p><p>如果一个正则表达式要重复使用几千次，出于效率的考虑，我们可以预编译该正则表达式，接下来重复使用时就不需要编译这个步骤了，直接匹配：</p><pre><code>&gt;&gt;&gt; import re# 编译:&gt;&gt;&gt; re_telephone = re.compile(r'^(\d{3})-(\d{3,8})$')# 使用：&gt;&gt;&gt; re_telephone.match('010-12345').groups()('010', '12345')&gt;&gt;&gt; re_telephone.match('010-8086').groups()('010', '8086')</code></pre><p>编译后生成Regular Expression对象，由于该对象自己包含了正则表达式，所以调用对应的方法时不用给出正则字符串。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>正则表达式非常强大，要在短短的一节里讲完是不可能的。要讲清楚正则的所有内容，可以写一本厚厚的书了。如果你经常遇到正则表达式的问题，你可能需要一本正则表达式的参考书。</p><p>转载自：<br><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017639890281664" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/1016959663602400/1017639890281664</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown</title>
      <link href="/2020/10/25/hellow/"/>
      <url>/2020/10/25/hellow/</url>
      
        <content type="html"><![CDATA[<h3 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h3><ul><li>支持“标准”Markdown / CommonMark和Github风格的语法，也可变身为代码编辑器；</li><li>支持实时预览、图片（跨域）上传、预格式文本/代码/表格插入、代码折叠、搜索替换、只读模式、自定义样式主题和多语言语法高亮等功能；</li><li>支持ToC（Table of Contents）、Emoji表情、Task lists、@链接等Markdown扩展语法；</li><li>支持TeX科学公式（基于KaTeX）、流程图 Flowchart 和 时序图 Sequence Diagram;</li><li>支持识别和解析HTML标签，并且支持自定义过滤标签解析，具有可靠的安全性和几乎无限的扩展性；</li><li>支持 AMD / CMD 模块化加载（支持 Require.js &amp; Sea.js），并且支持自定义扩展插件；</li><li>兼容主流的浏览器（IE8+）和Zepto.js，且支持iPad等平板设备；</li><li>支持自定义主题样式；</li></ul><h1 id="Editor-md"><a href="#Editor-md" class="headerlink" title="Editor.md"></a>Editor.md</h1><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/github/stars/pandao/editor.md.svg" alt=""> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/github/forks/pandao/editor.md.svg" alt=""> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/github/tag/pandao/editor.md.svg" alt=""> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/github/release/pandao/editor.md.svg" alt=""> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/github/issues/pandao/editor.md.svg" alt=""> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img.shields.io/bower/v/editor.md.svg" alt=""></p><p><strong>目录 (Table of Contents)</strong></p><p>[TOCM]</p><p>[TOC]</p><h1 id="Heading-1"><a href="#Heading-1" class="headerlink" title="Heading 1"></a>Heading 1</h1><h2 id="Heading-2"><a href="#Heading-2" class="headerlink" title="Heading 2"></a>Heading 2</h2><h3 id="Heading-3"><a href="#Heading-3" class="headerlink" title="Heading 3"></a>Heading 3</h3><h4 id="Heading-4"><a href="#Heading-4" class="headerlink" title="Heading 4"></a>Heading 4</h4><h5 id="Heading-5"><a href="#Heading-5" class="headerlink" title="Heading 5"></a>Heading 5</h5><h6 id="Heading-6"><a href="#Heading-6" class="headerlink" title="Heading 6"></a>Heading 6</h6><h1 id="Heading-1-link-Heading-link"><a href="#Heading-1-link-Heading-link" class="headerlink" title="Heading 1 link Heading link"></a>Heading 1 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h1><h2 id="Heading-2-link-Heading-link"><a href="#Heading-2-link-Heading-link" class="headerlink" title="Heading 2 link Heading link"></a>Heading 2 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h2><h3 id="Heading-3-link-Heading-link"><a href="#Heading-3-link-Heading-link" class="headerlink" title="Heading 3 link Heading link"></a>Heading 3 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h3><h4 id="Heading-4-link-Heading-link-Heading-link-Heading-link"><a href="#Heading-4-link-Heading-link-Heading-link-Heading-link" class="headerlink" title="Heading 4 link Heading link Heading link Heading link"></a>Heading 4 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a> Heading link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h4><h5 id="Heading-5-link-Heading-link"><a href="#Heading-5-link-Heading-link" class="headerlink" title="Heading 5 link Heading link"></a>Heading 5 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h5><h6 id="Heading-6-link-Heading-link"><a href="#Heading-6-link-Heading-link" class="headerlink" title="Heading 6 link Heading link"></a>Heading 6 link <a href="https://github.com/pandao/editor.md" title="Heading link" target="_blank" rel="noopener">Heading link</a></h6><h4 id="标题（用底线的形式）Heading-underline"><a href="#标题（用底线的形式）Heading-underline" class="headerlink" title="标题（用底线的形式）Heading (underline)"></a>标题（用底线的形式）Heading (underline)</h4><h1 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><h3 id="字符效果和横线等"><a href="#字符效果和横线等" class="headerlink" title="字符效果和横线等"></a>字符效果和横线等</h3><hr><p><del>删除线</del> <s>删除线（开启识别HTML标签时）</s><br><em>斜体字</em>      <em>斜体字</em><br><strong>粗体</strong>  <strong>粗体</strong><br><strong><em>粗斜体</em></strong> <strong><em>粗斜体</em></strong></p><p>上标：X<sub>2</sub>，下标：O<sup>2</sup></p><p><strong>缩写(同HTML的abbr标签)</strong></p><blockquote><p>即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启</p></blockquote><p>The <abbr title="Hyper Text Markup Language">HTML</abbr> specification is maintained by the <abbr title="World Wide Web Consortium">W3C</abbr>.</p><h3 id="引用-Blockquotes"><a href="#引用-Blockquotes" class="headerlink" title="引用 Blockquotes"></a>引用 Blockquotes</h3><blockquote><p>引用文本 Blockquotes</p></blockquote><p>引用的行内混合 Blockquotes</p><blockquote><p>引用：如果想要插入空白换行<code>即&lt;br /&gt;标签</code>，在插入处先键入两个以上的空格然后回车即可，<a href="http://localhost/" target="_blank" rel="noopener">普通链接</a>。</p></blockquote><h3 id="锚点与链接-Links"><a href="#锚点与链接-Links" class="headerlink" title="锚点与链接 Links"></a>锚点与链接 Links</h3><p><a href="http://localhost/" target="_blank" rel="noopener">普通链接</a></p><p><a href="http://localhost/" title="普通链接带标题" target="_blank" rel="noopener">普通链接带标题</a></p><p>直接链接：<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></p><p><a href="http://www.this-anchor-link.com/" target="_blank" rel="noopener">锚点链接</a> </p><p>GFM a-tail link @pandao</p><blockquote><p>@pandao</p></blockquote><h3 id="多语言代码高亮-Codes"><a href="#多语言代码高亮-Codes" class="headerlink" title="多语言代码高亮 Codes"></a>多语言代码高亮 Codes</h3><h4 id="行内代码-Inline-code"><a href="#行内代码-Inline-code" class="headerlink" title="行内代码 Inline code"></a>行内代码 Inline code</h4><p>执行命令：<code>npm install marked</code></p><h4 id="缩进风格"><a href="#缩进风格" class="headerlink" title="缩进风格"></a>缩进风格</h4><p>即缩进四个空格，也做为实现类似<code>&lt;pre&gt;</code>预格式化文本(Preformatted Text)的功能。</p><pre><code>&lt;?php    echo "Hello world!";?&gt;</code></pre><p>预格式化文本：</p><pre><code>| First Header  | Second Header || ------------- | ------------- || Content Cell  | Content Cell  || Content Cell  | Content Cell  |</code></pre><h4 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码　"></a>JS代码　</h4><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Hello world!"</span>);</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">    <span class="keyword">var</span> box = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">        <span class="keyword">return</span> box.fn.init();</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    box.prototype = box.fn = {</span><br><span class="line">        init : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'box.init()'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        },</span><br><span class="line"></span><br><span class="line">add : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>{</span><br><span class="line">alert(<span class="string">"add"</span>, str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">},</span><br><span class="line"></span><br><span class="line">remove : <span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>{</span><br><span class="line">alert(<span class="string">"remove"</span>, str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">}</span><br><span class="line">    };</span><br><span class="line">    </span><br><span class="line">    box.fn.init.prototype = box.fn;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">window</span>.box =box;</span><br><span class="line">})();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> testBox = box();</span><br><span class="line">testBox.add(<span class="string">"jQuery"</span>).remove(<span class="string">"jQuery"</span>);</span><br></pre></td></tr></tbody></table></figure><h4 id="HTML代码-HTML-codes"><a href="#HTML代码-HTML-codes" class="headerlink" title="HTML代码 HTML codes"></a>HTML代码 HTML codes</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mate</span> <span class="attr">charest</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="图片-Images"><a href="#图片-Images" class="headerlink" title="图片 Images"></a>图片 Images</h3><p>Image:</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://pandao.github.io/editor.md/examples/images/4.jpg" alt=""></p><blockquote><p>Follow your heart.</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://pandao.github.io/editor.md/examples/images/8.jpg" alt=""></p><blockquote><p>图为：厦门白城沙滩</p></blockquote><p>图片加链接 (Image + Link)：</p><p><a href="https://pandao.github.io/editor.md/examples/images/7.jpg" title="李健首张专辑《似水流年》封面" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://pandao.github.io/editor.md/examples/images/7.jpg" alt=""></a></p><blockquote><p>图为：李健首张专辑《似水流年》封面</p></blockquote><hr><h3 id="列表-Lists"><a href="#列表-Lists" class="headerlink" title="列表 Lists"></a>列表 Lists</h3><h4 id="无序列表（减号）Unordered-Lists"><a href="#无序列表（减号）Unordered-Lists" class="headerlink" title="无序列表（减号）Unordered Lists (-)"></a>无序列表（减号）Unordered Lists (-)</h4><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表（星号）Unordered-Lists"><a href="#无序列表（星号）Unordered-Lists" class="headerlink" title="无序列表（星号）Unordered Lists (*)"></a>无序列表（星号）Unordered Lists (*)</h4><ul><li>列表一</li><li>列表二</li><li>列表三</li></ul><h4 id="无序列表（加号和嵌套）Unordered-Lists"><a href="#无序列表（加号和嵌套）Unordered-Lists" class="headerlink" title="无序列表（加号和嵌套）Unordered Lists (+)"></a>无序列表（加号和嵌套）Unordered Lists (+)</h4><ul><li>列表一</li><li>列表二<ul><li>列表二-1</li><li>列表二-2</li><li>列表二-3</li></ul></li><li>列表三<ul><li>列表一</li><li>列表二</li><li>列表三</li></ul></li></ul><h4 id="有序列表-Ordered-Lists"><a href="#有序列表-Ordered-Lists" class="headerlink" title="有序列表 Ordered Lists (-)"></a>有序列表 Ordered Lists (-)</h4><ol><li>第一行</li><li>第二行</li><li>第三行</li></ol><h4 id="GFM-task-list"><a href="#GFM-task-list" class="headerlink" title="GFM task list"></a>GFM task list</h4><ul><li><input checked="" disabled="" type="checkbox"> GFM task list 1</li><li><input checked="" disabled="" type="checkbox"> GFM task list 2</li><li><input disabled="" type="checkbox"> GFM task list 3<ul><li><input disabled="" type="checkbox"> GFM task list 3-1</li><li><input disabled="" type="checkbox"> GFM task list 3-2</li><li><input disabled="" type="checkbox"> GFM task list 3-3</li></ul></li><li><input disabled="" type="checkbox"> GFM task list 4<ul><li><input disabled="" type="checkbox"> GFM task list 4-1</li><li><input disabled="" type="checkbox"> GFM task list 4-2</li></ul></li></ul><hr><h3 id="绘制表格-Tables"><a href="#绘制表格-Tables" class="headerlink" title="绘制表格 Tables"></a>绘制表格 Tables</h3><table><thead><tr><th>项目</th><th align="right">价格</th><th align="center">数量</th></tr></thead><tbody><tr><td>计算机</td><td align="right">$1600</td><td align="center">5</td></tr><tr><td>手机</td><td align="right">$12</td><td align="center">12</td></tr><tr><td>管线</td><td align="right">$1</td><td align="center">234</td></tr></tbody></table><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><table><thead><tr><th>Function name</th><th>Description</th></tr></thead><tbody><tr><td><code>help()</code></td><td>Display the help window.</td></tr><tr><td><code>destroy()</code></td><td><strong>Destroy your computer!</strong></td></tr></tbody></table><table><thead><tr><th align="left">Left-Aligned</th><th align="center">Center Aligned</th><th align="right">Right Aligned</th></tr></thead><tbody><tr><td align="left">col 3 is</td><td align="center">some wordy text</td><td align="right">$1600</td></tr><tr><td align="left">col 2 is</td><td align="center">centered</td><td align="right">$12</td></tr><tr><td align="left">zebra stripes</td><td align="center">are neat</td><td align="right">$1</td></tr></tbody></table><table><thead><tr><th>Item</th><th align="right">Value</th></tr></thead><tbody><tr><td>Computer</td><td align="right">$1600</td></tr><tr><td>Phone</td><td align="right">$12</td></tr><tr><td>Pipe</td><td align="right">$1</td></tr></tbody></table><hr><h4 id="特殊符号-HTML-Entities-Codes"><a href="#特殊符号-HTML-Entities-Codes" class="headerlink" title="特殊符号 HTML Entities Codes"></a>特殊符号 HTML Entities Codes</h4><p>© &amp;  ¨ ™ ¡ £<br>&amp; &lt; &gt; ¥ € ® ± ¶ § ¦ ¯ « · </p><p>X² Y³ ¾ ¼  ×  ÷   »</p><p>18ºC  "  '</p><h3 id="Emoji表情-smiley"><a href="#Emoji表情-smiley" class="headerlink" title="Emoji表情 :smiley:"></a>Emoji表情 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">😃</span></h3><blockquote><p>Blockquotes <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">⭐</span></p></blockquote><h4 id="GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x"><a href="#GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x" class="headerlink" title="GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:"></a>GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:</h4><ul><li><input checked="" disabled="" type="checkbox"> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">😃</span> @mentions, <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">😃</span> #refs, <a href="">links</a>, <strong>formatting</strong>, and <del>tags</del> supported :editormd-logo:;</li><li><input checked="" disabled="" type="checkbox"> list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;</li><li><input checked="" disabled="" type="checkbox"> [ ] <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">😃</span> this is a complete item <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">😃</span>;</li><li><input disabled="" type="checkbox"> []this is an incomplete item <a href="#">test link</a> :fa-star: @pandao; </li><li><input disabled="" type="checkbox"> [ ]this is an incomplete item :fa-star: :fa-gear:;<ul><li><input disabled="" type="checkbox"> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">😃</span> this is an incomplete item <a href="#">test link</a> :fa-star: :fa-gear:;</li><li><input disabled="" type="checkbox"> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">😃</span> this is  :fa-star: :fa-gear: an incomplete item <a href="#">test link</a>;</li></ul></li></ul><h4 id="反斜杠-Escape"><a href="#反斜杠-Escape" class="headerlink" title="反斜杠 Escape"></a>反斜杠 Escape</h4><p>*literal asterisks*</p><h3 id="科学公式-TeX-KaTeX"><a href="#科学公式-TeX-KaTeX" class="headerlink" title="科学公式 TeX(KaTeX)"></a>科学公式 TeX(KaTeX)</h3><p>$$E=mc^2$$</p><p>行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。</p><p>$$(\sqrt{3x-1}+(1+x)^2)$$</p><p>$$\sin(\alpha)^{\theta}=\sum_{i=0}^{n}(x^i + \cos(f))$$</p><p>多行公式：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\displaystyle</span><br><span class="line">\left( \sum\_{k=1}^n a\_k b\_k \right)^2</span><br><span class="line">\leq</span><br><span class="line">\left( \sum\_{k=1}^n a\_k^2 \right)</span><br><span class="line">\left( \sum\_{k=1}^n b\_k^2 \right)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\displaystyle </span><br><span class="line">    \frac{1}{</span><br><span class="line">        \Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{</span><br><span class="line">        \frac25 \pi}} = 1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {</span><br><span class="line">        1+\frac{e^{-6\pi}}</span><br><span class="line">        {1+\frac{e^{-8\pi}}</span><br><span class="line">         {1+\cdots} }</span><br><span class="line">        } </span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f(x) = \int_{-\infty}^\infty</span><br><span class="line">    \hat f(\xi)\,e^{2 \pi i \xi x}</span><br><span class="line">    \,d\xi</span><br></pre></td></tr></tbody></table></figure><h3 id="绘制流程图-Flowchart"><a href="#绘制流程图-Flowchart" class="headerlink" title="绘制流程图 Flowchart"></a>绘制流程图 Flowchart</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 用户登陆</span><br><span class="line">op=&gt;operation: 登陆操作</span><br><span class="line">cond=&gt;condition: 登陆成功 Yes or No?</span><br><span class="line">e=&gt;end: 进入后台</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></tbody></table></figure><h3 id="绘制序列图-Sequence-Diagram"><a href="#绘制序列图-Sequence-Diagram" class="headerlink" title="绘制序列图 Sequence Diagram"></a>绘制序列图 Sequence Diagram</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Andrew-&gt;China: Says Hello </span><br><span class="line">Note right of China: China thinks\nabout it </span><br><span class="line">China--&gt;Andrew: How are you? </span><br><span class="line">Andrew-&gt;&gt;China: I am good thanks!</span><br></pre></td></tr></tbody></table></figure><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
